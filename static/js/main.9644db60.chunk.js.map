{"version":3,"sources":["initMatrix.js","sylvester.src.js","generateMatrixes.js","generateFigure.js","vertices/cubeVertices.js","vertices/octahedronVertices.js","vertices/symplexVertices.js","vertices/Cell24AnalogVertices.js","vertices/Cell120AnalogVertices.js","vertices/Cell600AnalogVertices.js","vertices/IcosahedronVertices.js","vertices/TruncatedTetrahedronVertices.js","vertices/CuboctahedronVertices.js","vertices/index.js","generateFigureOrthography.js","CreateCheckboxes.js","figures/Cube.js","figures/Symplex.js","figures/Octahedron.js","figures/Cell24Analog.js","figures/Cell120Analog.js","figures/Cell600Analog.js","figures/Icosahedron.js","figures/TruncatedTetrahedron.js","figures/Cuboctahedron.js","Svg.js","App.js","serviceWorker.js","index.js"],"names":["initMatrix","dimension","cos1","cos2","sin1","sin2","angle","matrix","row","ones","multiplyByMinusOne","i","j","push","Math","cos","sin","Sylvester","Vector","Matrix","Line","Plane","prototype","e","this","elements","length","dimensions","modulus","sqrt","dot","eql","vector","n","V","abs","dup","create","map","fn","each","x","k","toUnitVector","r","angleFrom","mod1","mod2","theta","acos","isParallelTo","isAntiparallelTo","PI","isPerpendicularTo","add","subtract","multiply","product","cross","B","A","max","m","indexOf","index","toDiagonalMatrix","Diagonal","round","snapTo","y","distanceFrom","obj","anchor","part","sum","liesOn","line","contains","liesIn","plane","rotate","t","R","z","Rotation","direction","C","pointClosestTo","reflectionIn","P","slice","Q","to3D","inspect","join","setElements","els","Random","random","Zero","col","rows","cols","M","nj","ni","ki","kj","isSameSizeAs","canMultiplyFromLeft","returnVector","nc","c","minor","a","b","d","transpose","isSquare","diagonal","toRightTriangular","np","p","kp","multiplier","toUpperTriangular","determinant","det","isSingular","trace","tr","rank","rk","augment","T","inverse","divisor","new_element","I","inverse_elements","inv","matrix_rows","axis","mod","s","RotationX","RotationY","RotationZ","translate","normal","N","D","PA1","PA2","PA3","modPA","cosTheta","point","dist","intersects","intersectionWith","X","Y","X1","X2","X3","Y1","Y2","Y3","PsubQ1","PsubQ2","PsubQ3","YdotY","XdotY","E","D1","D2","D3","E1","E2","E3","C1","C2","C3","A1","A2","A3","newA","AD1","AD2","AD3","newD","setVectors","Z","O","solver","intersection","N1","N2","N3","AN1","AN2","AN3","newN","v1","v2","v11","v12","v13","v21","v22","v23","XY","YZ","ZX","YX","ZY","XZ","generateMatrixes","anglesArr","transposeRotation","cosinus1","cosinus2","sinus1","sinus2","variants","matrixes","matrixMultiply","generateFigure","vertices","dimensionOfFigure","verticesOnSvg","vertex","perspective","coordinates","setCoordinatesToLines","Array","from","document","querySelectorAll","coordinatesToCircles","index1","isNaN","getAttribute","index2","setAttribute","cubeVertices","DimensionOfFigure","setVerticesArray","verticesAmount","verticesArray","trunc","octahedronVertices","prevResult","prevNot0Index","item","forEach","symplexVertices","firstDot","number","copyFirstDot","reverse","lastDot","Cell24AnaologVertices","verticesAmount2","Cell120AnalogVertices","copyDimensionOfFigure","fi","baseGroup1","baseGroup2","baseGroup3","baseGroup4","baseGroup5","baseGroup6","baseGroup7","vertices2D","radAngle","onesWithAllSignPermutations","result","fourResults","num","signPermutations","combinations","arr","couple","beg","arr1","l","arr2","newArr","concat","inversions","minusToPlus","arrays","el","copyArr","array","mixAll","mySet","Set","element","split","arrayToSetAndToArray","especialCombinations","permutations","resultSet","JSON","stringify","parse","group1","group2","group3","group4","group5","group6","group7","Cell600AnalogVertices","lowDimensionSet","IcosahedronVertices","TruncatedTetrahedronVertices","CuboctahedronVertices","figure","generateFigureOrthography","setCoordinatesToCircles","CreateCheckboxes","anglesArray","setAnglesArray","activeRotations","setActiveRotations","orthography","useEffect","moveByKeyBoard","useKeyboard","copyAnglesArray","key","body","addEventListener","removeEventListener","interval","setInterval","clearInterval","numbersOfCheckboxes","subDimensionStart","subDimensionEnd","yRotationArray","addToYRotationInterval","className","type","name","onChange","copyActiveRotations","checked","field","includes","filter","changeActiveRotation","value","target","Cube","displayEdges","displayVertices","amountOfLines","ids","lines","cubesRepeats","cube","width","height","id","vertex1","vertex2","doubleRepeats","twoLength","x1","y1","x2","y2","stroke","onClick","console","log","cx","cy","fill","onContextMenu","preventDefault","style","display","Symplex","minsAmount","xDots","yDots","currentMinX","currentMinY","currentY","Octahedron","startXDotRepeatAmount","startXDotRepeatAmount2","repeat","startX","startY","startY2","Cell24Analog","check1","array1","array2","check2","degree100","equal","linesSet","sort","linesArray","Cell120Analog","edgeLength","Cell600Analog","Icosahedron","test","TruncatedTetrahedron","Cuboctahedron","Svg","specific3D","App","useState","numberOfDimensions","setNumberOfDimensions","amount","setAmount","setDimensionOfFigure","setFigure","setTransposeRotation","setOrthography","setDisplayVertices","setDisplayEdges","displaySpecific3D","setDisplaySpecific3D","optionList","placeholder","alert","checkboxes","querySelector","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9644db60.chunk.js","sourcesContent":["const initMatrix = (\r\n    dimension, \r\n    cos1, \r\n    cos2, \r\n    sin1, \r\n    sin2, \r\n    angle\r\n    ) => {\r\n    const matrix = [];\r\n    let row = [];\r\n    let ones = 0;\r\n    let multiplyByMinusOne = false;\r\n    \r\n    for (let i = 0; i < dimension; i++) {\r\n        for (let j = 0; j < dimension; j++) {\r\n            if ((j === cos1 && i === cos1)\r\n            || (j === cos2 && i === cos2)) {\r\n                row.push(Math.cos(+angle));\r\n            } else if ((j === sin1 && i === sin2)\r\n            || (j === sin2 && i === sin1)) {\r\n                !multiplyByMinusOne \r\n                    ? row.push(Math.sin(+angle)) \r\n                    : row.push(Math.sin(+angle) * -1);\r\n            multiplyByMinusOne = true;\r\n            } else if (j === ones) {\r\n                row.push(1);\r\n            } else {\r\n                row.push(0);\r\n            }\r\n        }\r\n\r\n        matrix.push(row);\r\n        row = [];\r\n        ones++;\r\n    }\r\n\r\n    return matrix;\r\n}\r\n\r\nexport default initMatrix;","// === Sylvester ===\r\n// Vector and Matrix mathematics modules for JavaScript\r\n// Copyright (c) 2007 James Coglan\r\n// \r\n// Permission is hereby granted, free of charge, to any person obtaining\r\n// a copy of this software and associated documentation files (the \"Software\"),\r\n// to deal in the Software without restriction, including without limitation\r\n// the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n// and/or sell copies of the Software, and to permit persons to whom the\r\n// Software is furnished to do so, subject to the following conditions:\r\n// \r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n// \r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\r\n// THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n// DEALINGS IN THE SOFTWARE.\r\n\r\nvar Sylvester = {\r\n  version: '0.1.3',\r\n  precision: 1e-6\r\n};\r\n\r\nfunction Vector() {}\r\nVector.prototype = {\r\n\r\n  // Returns element i of the vector\r\n  e: function(i) {\r\n    return (i < 1 || i > this.elements.length) ? null : this.elements[i-1];\r\n  },\r\n\r\n  // Returns the number of elements the vector has\r\n  dimensions: function() {\r\n    return this.elements.length;\r\n  },\r\n\r\n  // Returns the modulus ('length') of the vector\r\n  modulus: function() {\r\n    return Math.sqrt(this.dot(this));\r\n  },\r\n\r\n  // Returns true iff the vector is equal to the argument\r\n  eql: function(vector) {\r\n    var n = this.elements.length;\r\n    var V = vector.elements || vector;\r\n    if (n !== V.length) { return false; }\r\n    do {\r\n      if (Math.abs(this.elements[n-1] - V[n-1]) > Sylvester.precision) { return false; }\r\n    } while (--n);\r\n    return true;\r\n  },\r\n\r\n  // Returns a copy of the vector\r\n  dup: function() {\r\n    return Vector.create(this.elements);\r\n  },\r\n\r\n  // Maps the vector to another vector according to the given function\r\n  map: function(fn) {\r\n    var elements = [];\r\n    this.each(function(x, i) {\r\n      elements.push(fn(x, i));\r\n    });\r\n    return Vector.create(elements);\r\n  },\r\n  \r\n  // Calls the iterator for each element of the vector in turn\r\n  each: function(fn) {\r\n    var n = this.elements.length, k = n, i;\r\n    do { i = k - n;\r\n      fn(this.elements[i], i+1);\r\n    } while (--n);\r\n  },\r\n\r\n  // Returns a new vector created by normalizing the receiver\r\n  toUnitVector: function() {\r\n    var r = this.modulus();\r\n    if (r === 0) { return this.dup(); }\r\n    return this.map(function(x) { return x/r; });\r\n  },\r\n\r\n  // Returns the angle between the vector and the argument (also a vector)\r\n  angleFrom: function(vector) {\r\n    var V = vector.elements || vector;\r\n    var n = this.elements.length;\r\n    if (n !== V.length) { return null; }\r\n    var dot = 0, mod1 = 0, mod2 = 0;\r\n    // Work things out in parallel to save time\r\n    this.each(function(x, i) {\r\n      dot += x * V[i-1];\r\n      mod1 += x * x;\r\n      mod2 += V[i-1] * V[i-1];\r\n    });\r\n    mod1 = Math.sqrt(mod1); mod2 = Math.sqrt(mod2);\r\n    if (mod1*mod2 === 0) { return null; }\r\n    var theta = dot / (mod1*mod2);\r\n    if (theta < -1) { theta = -1; }\r\n    if (theta > 1) { theta = 1; }\r\n    return Math.acos(theta);\r\n  },\r\n\r\n  // Returns true iff the vector is parallel to the argument\r\n  isParallelTo: function(vector) {\r\n    var angle = this.angleFrom(vector);\r\n    return (angle === null) ? null : (angle <= Sylvester.precision);\r\n  },\r\n\r\n  // Returns true iff the vector is antiparallel to the argument\r\n  isAntiparallelTo: function(vector) {\r\n    var angle = this.angleFrom(vector);\r\n    return (angle === null) ? null : (Math.abs(angle - Math.PI) <= Sylvester.precision);\r\n  },\r\n\r\n  // Returns true iff the vector is perpendicular to the argument\r\n  isPerpendicularTo: function(vector) {\r\n    var dot = this.dot(vector);\r\n    return (dot === null) ? null : (Math.abs(dot) <= Sylvester.precision);\r\n  },\r\n\r\n  // Returns the result of adding the argument to the vector\r\n  add: function(vector) {\r\n    var V = vector.elements || vector;\r\n    if (this.elements.length !== V.length) { return null; }\r\n    return this.map(function(x, i) { return x + V[i-1]; });\r\n  },\r\n\r\n  // Returns the result of subtracting the argument from the vector\r\n  subtract: function(vector) {\r\n    var V = vector.elements || vector;\r\n    if (this.elements.length !== V.length) { return null; }\r\n    return this.map(function(x, i) { return x - V[i-1]; });\r\n  },\r\n\r\n  // Returns the result of multiplying the elements of the vector by the argument\r\n  multiply: function(k) {\r\n    return this.map(function(x) { return x*k; });\r\n  },\r\n\r\n  x: function(k) { return this.multiply(k); },\r\n\r\n  // Returns the scalar product of the vector with the argument\r\n  // Both vectors must have equal dimensionality\r\n  dot: function(vector) {\r\n    var V = vector.elements || vector;\r\n    var product = 0, n = this.elements.length;\r\n    if (n !== V.length) { return null; }\r\n    do { product += this.elements[n-1] * V[n-1]; } while (--n);\r\n    return product;\r\n  },\r\n\r\n  // Returns the vector product of the vector with the argument\r\n  // Both vectors must have dimensionality 3\r\n  cross: function(vector) {\r\n    var B = vector.elements || vector;\r\n    if (this.elements.length !== 3 || B.length !== 3) { return null; }\r\n    var A = this.elements;\r\n    return Vector.create([\r\n      (A[1] * B[2]) - (A[2] * B[1]),\r\n      (A[2] * B[0]) - (A[0] * B[2]),\r\n      (A[0] * B[1]) - (A[1] * B[0])\r\n    ]);\r\n  },\r\n\r\n  // Returns the (absolute) largest element of the vector\r\n  max: function() {\r\n    var m = 0, n = this.elements.length, k = n, i;\r\n    do { i = k - n;\r\n      if (Math.abs(this.elements[i]) > Math.abs(m)) { m = this.elements[i]; }\r\n    } while (--n);\r\n    return m;\r\n  },\r\n\r\n  // Returns the index of the first match found\r\n  indexOf: function(x) {\r\n    var index = null, n = this.elements.length, k = n, i;\r\n    do { i = k - n;\r\n      if (index === null && this.elements[i] === x) {\r\n        index = i + 1;\r\n      }\r\n    } while (--n);\r\n    return index;\r\n  },\r\n\r\n  // Returns a diagonal matrix with the vector's elements as its diagonal elements\r\n  toDiagonalMatrix: function() {\r\n    return Matrix.Diagonal(this.elements);\r\n  },\r\n\r\n  // Returns the result of rounding the elements of the vector\r\n  round: function() {\r\n    return this.map(function(x) { return Math.round(x); });\r\n  },\r\n\r\n  // Returns a copy of the vector with elements set to the given value if they\r\n  // differ from it by less than Sylvester.precision\r\n  snapTo: function(x) {\r\n    return this.map(function(y) {\r\n      return (Math.abs(y - x) <= Sylvester.precision) ? x : y;\r\n    });\r\n  },\r\n\r\n  // Returns the vector's distance from the argument, when considered as a point in space\r\n  distanceFrom: function(obj) {\r\n    if (obj.anchor) { return obj.distanceFrom(this); }\r\n    var V = obj.elements || obj;\r\n    if (V.length !== this.elements.length) { return null; }\r\n    var sum = 0, part;\r\n    this.each(function(x, i) {\r\n      part = x - V[i-1];\r\n      sum += part * part;\r\n    });\r\n    return Math.sqrt(sum);\r\n  },\r\n\r\n  // Returns true if the vector is point on the given line\r\n  liesOn: function(line) {\r\n    return line.contains(this);\r\n  },\r\n\r\n  // Return true iff the vector is a point in the given plane\r\n  liesIn: function(plane) {\r\n    return plane.contains(this);\r\n  },\r\n\r\n  // Rotates the vector about the given object. The object should be a \r\n  // point if the vector is 2D, and a line if it is 3D. Be careful with line directions!\r\n  rotate: function(t, obj) {\r\n    var V, R, x, y, z;\r\n    switch (this.elements.length) {\r\n      case 2:\r\n        V = obj.elements || obj;\r\n        if (V.length !== 2) { return null; }\r\n        R = Matrix.Rotation(t).elements;\r\n        x = this.elements[0] - V[0];\r\n        y = this.elements[1] - V[1];\r\n        return Vector.create([\r\n          V[0] + R[0][0] * x + R[0][1] * y,\r\n          V[1] + R[1][0] * x + R[1][1] * y\r\n        ]);\r\n      case 3:\r\n        if (!obj.direction) { return null; }\r\n        var C = obj.pointClosestTo(this).elements;\r\n        R = Matrix.Rotation(t, obj.direction).elements;\r\n        x = this.elements[0] - C[0];\r\n        y = this.elements[1] - C[1];\r\n        z = this.elements[2] - C[2];\r\n        return Vector.create([\r\n          C[0] + R[0][0] * x + R[0][1] * y + R[0][2] * z,\r\n          C[1] + R[1][0] * x + R[1][1] * y + R[1][2] * z,\r\n          C[2] + R[2][0] * x + R[2][1] * y + R[2][2] * z\r\n        ]);\r\n      default:\r\n        return null;\r\n    }\r\n  },\r\n\r\n  // Returns the result of reflecting the point in the given point, line or plane\r\n  reflectionIn: function(obj) {\r\n    if (obj.anchor) {\r\n      // obj is a plane or line\r\n      var P = this.elements.slice();\r\n      var C = obj.pointClosestTo(P).elements;\r\n      return Vector.create([C[0] + (C[0] - P[0]), C[1] + (C[1] - P[1]), C[2] + (C[2] - (P[2] || 0))]);\r\n    } else {\r\n      // obj is a point\r\n      var Q = obj.elements || obj;\r\n      if (this.elements.length !== Q.length) { return null; }\r\n      return this.map(function(x, i) { return Q[i-1] + (Q[i-1] - x); });\r\n    }\r\n  },\r\n\r\n  // Utility to make sure vectors are 3D. If they are 2D, a zero z-component is added\r\n  to3D: function() {\r\n    var V = this.dup();\r\n    switch (V.elements.length) {\r\n      case 3: break;\r\n      case 2: V.elements.push(0); break;\r\n      default: return null;\r\n    }\r\n    return V;\r\n  },\r\n\r\n  // Returns a string representation of the vector\r\n  inspect: function() {\r\n    return '[' + this.elements.join(', ') + ']';\r\n  },\r\n\r\n  // Set vector's elements from an array\r\n  setElements: function(els) {\r\n    this.elements = (els.elements || els).slice();\r\n    return this;\r\n  }\r\n};\r\n  \r\n// Constructor function\r\nVector.create = function(elements) {\r\n  var V = new Vector();\r\n  return V.setElements(elements);\r\n};\r\n\r\n// i, j, k unit vectors\r\nVector.i = Vector.create([1,0,0]);\r\nVector.j = Vector.create([0,1,0]);\r\nVector.k = Vector.create([0,0,1]);\r\n\r\n// Random vector of size n\r\nVector.Random = function(n) {\r\n  var elements = [];\r\n  do { elements.push(Math.random());\r\n  } while (--n);\r\n  return Vector.create(elements);\r\n};\r\n\r\n// Vector filled with zeros\r\nVector.Zero = function(n) {\r\n  var elements = [];\r\n  do { elements.push(0);\r\n  } while (--n);\r\n  return Vector.create(elements);\r\n};\r\n\r\n\r\n\r\nexport function Matrix() {}\r\nMatrix.prototype = {\r\n\r\n  // Returns element (i,j) of the matrix\r\n  e: function(i,j) {\r\n    if (i < 1 || i > this.elements.length || j < 1 || j > this.elements[0].length) { return null; }\r\n    return this.elements[i-1][j-1];\r\n  },\r\n\r\n  // Returns row k of the matrix as a vector\r\n  row: function(i) {\r\n    if (i > this.elements.length) { return null; }\r\n    return Vector.create(this.elements[i-1]);\r\n  },\r\n\r\n  // Returns column k of the matrix as a vector\r\n  col: function(j) {\r\n    if (j > this.elements[0].length) { return null; }\r\n    var col = [], n = this.elements.length, k = n, i;\r\n    do { i = k - n;\r\n      col.push(this.elements[i][j-1]);\r\n    } while (--n);\r\n    return Vector.create(col);\r\n  },\r\n\r\n  // Returns the number of rows/columns the matrix has\r\n  dimensions: function() {\r\n    return {rows: this.elements.length, cols: this.elements[0].length};\r\n  },\r\n\r\n  // Returns the number of rows in the matrix\r\n  rows: function() {\r\n    return this.elements.length;\r\n  },\r\n\r\n  // Returns the number of columns in the matrix\r\n  cols: function() {\r\n    return this.elements[0].length;\r\n  },\r\n\r\n  // Returns true iff the matrix is equal to the argument. You can supply\r\n  // a vector as the argument, in which case the receiver must be a\r\n  // one-column matrix equal to the vector.\r\n  eql: function(matrix) {\r\n    var M = matrix.elements || matrix;\r\n    if (typeof(M[0][0]) == 'undefined') { M = Matrix.create(M).elements; }\r\n    if (this.elements.length !== M.length ||\r\n        this.elements[0].length !== M[0].length) { return false; }\r\n    var ni = this.elements.length, ki = ni, i, nj, kj = this.elements[0].length, j;\r\n    do { i = ki - ni;\r\n      nj = kj;\r\n      do { j = kj - nj;\r\n        if (Math.abs(this.elements[i][j] - M[i][j]) > Sylvester.precision) { return false; }\r\n      } while (--nj);\r\n    } while (--ni);\r\n    return true;\r\n  },\r\n\r\n  // Returns a copy of the matrix\r\n  dup: function() {\r\n    return Matrix.create(this.elements);\r\n  },\r\n\r\n  // Maps the matrix to another matrix (of the same dimensions) according to the given function\r\n  map: function(fn) {\r\n    var els = [], ni = this.elements.length, ki = ni, i, nj, kj = this.elements[0].length, j;\r\n    do { i = ki - ni;\r\n      nj = kj;\r\n      els[i] = [];\r\n      do { j = kj - nj;\r\n        els[i][j] = fn(this.elements[i][j], i + 1, j + 1);\r\n      } while (--nj);\r\n    } while (--ni);\r\n    return Matrix.create(els);\r\n  },\r\n\r\n  // Returns true iff the argument has the same dimensions as the matrix\r\n  isSameSizeAs: function(matrix) {\r\n    var M = matrix.elements || matrix;\r\n    if (typeof(M[0][0]) === 'undefined') { M = Matrix.create(M).elements; }\r\n    return (this.elements.length === M.length &&\r\n        this.elements[0].length === M[0].length);\r\n  },\r\n\r\n  // Returns the result of adding the argument to the matrix\r\n  add: function(matrix) {\r\n    var M = matrix.elements || matrix;\r\n    if (typeof(M[0][0]) == 'undefined') { M = Matrix.create(M).elements; }\r\n    if (!this.isSameSizeAs(M)) { return null; }\r\n    return this.map(function(x, i, j) { return x + M[i-1][j-1]; });\r\n  },\r\n\r\n  // Returns the result of subtracting the argument from the matrix\r\n  subtract: function(matrix) {\r\n    var M = matrix.elements || matrix;\r\n    if (typeof(M[0][0]) == 'undefined') { M = Matrix.create(M).elements; }\r\n    if (!this.isSameSizeAs(M)) { return null; }\r\n    return this.map(function(x, i, j) { return x - M[i-1][j-1]; });\r\n  },\r\n\r\n  // Returns true iff the matrix can multiply the argument from the left\r\n  canMultiplyFromLeft: function(matrix) {\r\n    var M = matrix.elements || matrix;\r\n    if (typeof(M[0][0]) == 'undefined') { M = Matrix.create(M).elements; }\r\n    // this.columns should equal matrix.rows\r\n    return (this.elements[0].length === M.length);\r\n  },\r\n\r\n  // Returns the result of multiplying the matrix from the right by the argument.\r\n  // If the argument is a scalar then just multiply all the elements. If the argument is\r\n  // a vector, a vector is returned, which saves you having to remember calling\r\n  // col(1) on the result.\r\n  multiply: function(matrix) {\r\n    if (!matrix.elements) {\r\n      return this.map(function(x) { return x * matrix; });\r\n    }\r\n    var returnVector = matrix.modulus ? true : false;\r\n    var M = matrix.elements || matrix;\r\n    if (typeof(M[0][0]) == 'undefined') { M = Matrix.create(M).elements; }\r\n    if (!this.canMultiplyFromLeft(M)) { return null; }\r\n    var ni = this.elements.length, ki = ni, i, nj, kj = M[0].length, j;\r\n    var cols = this.elements[0].length, elements = [], sum, nc, c;\r\n    do { i = ki - ni;\r\n      elements[i] = [];\r\n      nj = kj;\r\n      do { j = kj - nj;\r\n        sum = 0;\r\n        nc = cols;\r\n        do { c = cols - nc;\r\n          sum += this.elements[i][c] * M[c][j];\r\n        } while (--nc);\r\n        elements[i][j] = sum;\r\n      } while (--nj);\r\n    } while (--ni);\r\n    M = Matrix.create(elements);\r\n    return returnVector ? M.col(1) : M;\r\n  },\r\n\r\n  x: function(matrix) { return this.multiply(matrix); },\r\n\r\n  // Returns a submatrix taken from the matrix\r\n  // Argument order is: start row, start col, nrows, ncols\r\n  // Element selection wraps if the required index is outside the matrix's bounds, so you could\r\n  // use this to perform row/column cycling or copy-augmenting.\r\n  minor: function(a, b, c, d) {\r\n    var elements = [], ni = c, i, nj, j;\r\n    var rows = this.elements.length, cols = this.elements[0].length;\r\n    do { i = c - ni;\r\n      elements[i] = [];\r\n      nj = d;\r\n      do { j = d - nj;\r\n        elements[i][j] = this.elements[(a+i-1)%rows][(b+j-1)%cols];\r\n      } while (--nj);\r\n    } while (--ni);\r\n    return Matrix.create(elements);\r\n  },\r\n\r\n  // Returns the transpose of the matrix\r\n  transpose: function() {\r\n    var rows = this.elements.length, cols = this.elements[0].length;\r\n    var elements = [], ni = cols, i, nj, j;\r\n    do { i = cols - ni;\r\n      elements[i] = [];\r\n      nj = rows;\r\n      do { j = rows - nj;\r\n        elements[i][j] = this.elements[j][i];\r\n      } while (--nj);\r\n    } while (--ni);\r\n    return Matrix.create(elements);\r\n  },\r\n\r\n  // Returns true iff the matrix is hypercube\r\n  isSquare: function() {\r\n    return (this.elements.length === this.elements[0].length);\r\n  },\r\n\r\n  // Returns the (absolute) largest element of the matrix\r\n  max: function() {\r\n    var m = 0, ni = this.elements.length, ki = ni, i, nj, kj = this.elements[0].length, j;\r\n    do { i = ki - ni;\r\n      nj = kj;\r\n      do { j = kj - nj;\r\n        if (Math.abs(this.elements[i][j]) > Math.abs(m)) { m = this.elements[i][j]; }\r\n      } while (--nj);\r\n    } while (--ni);\r\n    return m;\r\n  },\r\n\r\n  // Returns the indeces of the first match found by reading row-by-row from left to right\r\n  indexOf: function(x) {\r\n    var ni = this.elements.length, ki = ni, i, nj, kj = this.elements[0].length, j;\r\n    do { i = ki - ni;\r\n      nj = kj;\r\n      do { j = kj - nj;\r\n        if (this.elements[i][j] === x) { return {i: i+1, j: j+1}; }\r\n      } while (--nj);\r\n    } while (--ni);\r\n    return null;\r\n  },\r\n\r\n  // If the matrix is hypercube, returns the diagonal elements as a vector.\r\n  // Otherwise, returns null.\r\n  diagonal: function() {\r\n    if (!this.isSquare) { return null; }\r\n    var els = [], n = this.elements.length, k = n, i;\r\n    do { i = k - n;\r\n      els.push(this.elements[i][i]);\r\n    } while (--n);\r\n    return Vector.create(els);\r\n  },\r\n\r\n  // Make the matrix upper (right) triangular by Gaussian elimination.\r\n  // This method only adds multiples of rows to other rows. No rows are\r\n  // scaled up or switched, and the determinant is preserved.\r\n  toRightTriangular: function() {\r\n    var M = this.dup(), els;\r\n    var n = this.elements.length, k = n, i, np, kp = this.elements[0].length, p;\r\n    do { i = k - n;\r\n      if (M.elements[i][i] === 0) {\r\n        for (let j = i + 1; j < k; j++) {\r\n          if (M.elements[j][i] !== 0) {\r\n            els = []; np = kp;\r\n            do { p = kp - np;\r\n              els.push(M.elements[i][p] + M.elements[j][p]);\r\n            } while (--np);\r\n            M.elements[i] = els;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if (M.elements[i][i] !== 0) {\r\n        for (let j = i + 1; j < k; j++) {\r\n          var multiplier = M.elements[j][i] / M.elements[i][i];\r\n          els = []; np = kp;\r\n          do { p = kp - np;\r\n            // Elements with column numbers up to an including the number\r\n            // of the row that we're subtracting can safely be set straight to\r\n            // zero, since that's the point of this routine and it avoids having\r\n            // to loop over and correct rounding errors later\r\n            els.push(p <= i ? 0 : M.elements[j][p] - M.elements[i][p] * multiplier);\r\n          } while (--np);\r\n          M.elements[j] = els;\r\n        }\r\n      }\r\n    } while (--n);\r\n    return M;\r\n  },\r\n\r\n  toUpperTriangular: function() { return this.toRightTriangular(); },\r\n\r\n  // Returns the determinant for hypercube matrices\r\n  determinant: function() {\r\n    if (!this.isSquare()) { return null; }\r\n    var M = this.toRightTriangular();\r\n    var det = M.elements[0][0], n = M.elements.length - 1, k = n, i;\r\n    do { i = k - n + 1;\r\n      det = det * M.elements[i][i];\r\n    } while (--n);\r\n    return det;\r\n  },\r\n\r\n  det: function() { return this.determinant(); },\r\n\r\n  // Returns true iff the matrix is singular\r\n  isSingular: function() {\r\n    return (this.isSquare() && this.determinant() === 0);\r\n  },\r\n\r\n  // Returns the trace for hypercube matrices\r\n  trace: function() {\r\n    if (!this.isSquare()) { return null; }\r\n    var tr = this.elements[0][0], n = this.elements.length - 1, k = n, i;\r\n    do { i = k - n + 1;\r\n      tr += this.elements[i][i];\r\n    } while (--n);\r\n    return tr;\r\n  },\r\n\r\n  tr: function() { return this.trace(); },\r\n\r\n  // Returns the rank of the matrix\r\n  rank: function() {\r\n    var M = this.toRightTriangular(), rank = 0;\r\n    var ni = this.elements.length, ki = ni, i, nj, kj = this.elements[0].length, j;\r\n    do { i = ki - ni;\r\n      nj = kj;\r\n      do { j = kj - nj;\r\n        if (Math.abs(M.elements[i][j]) > Sylvester.precision) { rank++; break; }\r\n      } while (--nj);\r\n    } while (--ni);\r\n    return rank;\r\n  },\r\n  \r\n  rk: function() { return this.rank(); },\r\n\r\n  // Returns the result of attaching the given argument to the right-hand side of the matrix\r\n  augment: function(matrix) {\r\n    var M = matrix.elements || matrix;\r\n    if (typeof(M[0][0]) == 'undefined') { M = Matrix.create(M).elements; }\r\n    var T = this.dup(), cols = T.elements[0].length;\r\n    var ni = T.elements.length, ki = ni, i, nj, kj = M[0].length, j;\r\n    if (ni !== M.length) { return null; }\r\n    do { i = ki - ni;\r\n      nj = kj;\r\n      do { j = kj - nj;\r\n        T.elements[i][cols + j] = M[i][j];\r\n      } while (--nj);\r\n    } while (--ni);\r\n    return T;\r\n  },\r\n\r\n  // Returns the inverse (if one exists) using Gauss-Jordan\r\n  inverse: function() {\r\n    if (!this.isSquare() || this.isSingular()) { return null; }\r\n    var ni = this.elements.length, ki = ni, i, j;\r\n    var M = this.augment(Matrix.I(ni)).toRightTriangular();\r\n    var np, kp = M.elements[0].length, p, els, divisor;\r\n    var inverse_elements = [], new_element;\r\n    // Matrix is non-singular so there will be no zeros on the diagonal\r\n    // Cycle through rows from last to first\r\n    do { i = ni - 1;\r\n      // First, normalise diagonal elements to 1\r\n      els = []; np = kp;\r\n      inverse_elements[i] = [];\r\n      divisor = M.elements[i][i];\r\n      do { p = kp - np;\r\n        new_element = M.elements[i][p] / divisor;\r\n        els.push(new_element);\r\n        // Shuffle of the current row of the right hand side into the results\r\n        // array as it will not be modified by later runs through this loop\r\n        if (p >= ki) { inverse_elements[i].push(new_element); }\r\n      } while (--np);\r\n      M.elements[i] = els;\r\n      // Then, subtract this row from those above it to\r\n      // give the identity matrix on the left hand side\r\n      for (j = 0; j < i; j++) {\r\n        els = []; np = kp;\r\n        do { p = kp - np;\r\n          els.push(M.elements[j][p] - M.elements[i][p] * M.elements[j][i]);\r\n        } while (--np);\r\n        M.elements[j] = els;\r\n      }\r\n    } while (--ni);\r\n    return Matrix.create(inverse_elements);\r\n  },\r\n\r\n  inv: function() { return this.inverse(); },\r\n\r\n  // Returns the result of rounding all the elements\r\n  round: function() {\r\n    return this.map(function(x) { return Math.round(x); });\r\n  },\r\n\r\n  // Returns a copy of the matrix with elements set to the given value if they\r\n  // differ from it by less than Sylvester.precision\r\n  snapTo: function(x) {\r\n    return this.map(function(p) {\r\n      return (Math.abs(p - x) <= Sylvester.precision) ? x : p;\r\n    });\r\n  },\r\n\r\n  // Returns a string representation of the matrix\r\n  inspect: function() {\r\n    var matrix_rows = [];\r\n    var n = this.elements.length, k = n, i;\r\n    do { i = k - n;\r\n      matrix_rows.push(Vector.create(this.elements[i]).inspect());\r\n    } while (--n);\r\n    return matrix_rows.join('\\n');\r\n  },\r\n\r\n  // Set the matrix's elements from an array. If the argument passed\r\n  // is a vector, the resulting matrix will be a single column.\r\n  setElements: function(els) {\r\n    var i, elements = els.elements || els;\r\n    if (typeof(elements[0][0]) != 'undefined') {\r\n      var ni = elements.length, ki = ni, nj, kj, j;\r\n      this.elements = [];\r\n      do { i = ki - ni;\r\n        nj = elements[i].length; kj = nj;\r\n        this.elements[i] = [];\r\n        do { j = kj - nj;\r\n          this.elements[i][j] = elements[i][j];\r\n        } while (--nj);\r\n      } while(--ni);\r\n      return this;\r\n    }\r\n    var n = elements.length, k = n;\r\n    this.elements = [];\r\n    do { i = k - n;\r\n      this.elements.push([elements[i]]);\r\n    } while (--n);\r\n    return this;\r\n  }\r\n};\r\n\r\n// Constructor function\r\nMatrix.create = function(elements) {\r\n  var M = new Matrix();\r\n  return M.setElements(elements);\r\n};\r\n\r\n// Identity matrix of size n\r\nMatrix.I = function(n) {\r\n  var els = [], k = n, i, nj, j;\r\n  do { i = k - n;\r\n    els[i] = []; nj = k;\r\n    do { j = k - nj;\r\n      els[i][j] = (i === j) ? 1 : 0;\r\n    } while (--nj);\r\n  } while (--n);\r\n  return Matrix.create(els);\r\n};\r\n\r\n// Diagonal matrix - all off-diagonal elements are zero\r\nMatrix.Diagonal = function(elements) {\r\n  var n = elements.length, k = n, i;\r\n  var M = Matrix.I(n);\r\n  do { i = k - n;\r\n    M.elements[i][i] = elements[i];\r\n  } while (--n);\r\n  return M;\r\n};\r\n\r\n// Rotation matrix about some axis. If no axis is\r\n// supplied, assume we're after a 2D transform\r\nMatrix.Rotation = function(theta, a) {\r\n  if (!a) {\r\n    return Matrix.create([\r\n      [Math.cos(theta),  -Math.sin(theta)],\r\n      [Math.sin(theta),   Math.cos(theta)]\r\n    ]);\r\n  }\r\n  var axis = a.dup();\r\n  if (axis.elements.length !== 3) { return null; }\r\n  var mod = axis.modulus();\r\n  var x = axis.elements[0]/mod, y = axis.elements[1]/mod, z = axis.elements[2]/mod;\r\n  var s = Math.sin(theta), c = Math.cos(theta), t = 1 - c;\r\n  // Formula derived here: http://www.gamedev.net/reference/articles/article1199.asp\r\n  // That proof rotates the co-ordinate system so theta\r\n  // becomes -theta and sin becomes -sin here.\r\n  return Matrix.create([\r\n    [ t*x*x + c, t*x*y - s*z, t*x*z + s*y ],\r\n    [ t*x*y + s*z, t*y*y + c, t*y*z - s*x ],\r\n    [ t*x*z - s*y, t*y*z + s*x, t*z*z + c ]\r\n  ]);\r\n};\r\n\r\n// Special case rotations\r\nMatrix.RotationX = function(t) {\r\n  var c = Math.cos(t), s = Math.sin(t);\r\n  return Matrix.create([\r\n    [  1,  0,  0 ],\r\n    [  0,  c, -s ],\r\n    [  0,  s,  c ]\r\n  ]);\r\n};\r\nMatrix.RotationY = function(t) {\r\n  var c = Math.cos(t), s = Math.sin(t);\r\n  return Matrix.create([\r\n    [  c,  0,  s ],\r\n    [  0,  1,  0 ],\r\n    [ -s,  0,  c ]\r\n  ]);\r\n};\r\nMatrix.RotationZ = function(t) {\r\n  var c = Math.cos(t), s = Math.sin(t);\r\n  return Matrix.create([\r\n    [  c, -s,  0 ],\r\n    [  s,  c,  0 ],\r\n    [  0,  0,  1 ]\r\n  ]);\r\n};\r\n\r\n// Random matrix of n rows, m columns\r\nMatrix.Random = function(n, m) {\r\n  return Matrix.Zero(n, m).map(\r\n    function() { return Math.random(); }\r\n  );\r\n};\r\n\r\n// Matrix filled with zeros\r\nMatrix.Zero = function(n, m) {\r\n  var els = [], ni = n, i, nj, j;\r\n  do { i = n - ni;\r\n    els[i] = [];\r\n    nj = m;\r\n    do { j = m - nj;\r\n      els[i][j] = 0;\r\n    } while (--nj);\r\n  } while (--ni);\r\n  return Matrix.create(els);\r\n};\r\n\r\n\r\n\r\nfunction Line() {}\r\nLine.prototype = {\r\n\r\n  // Returns true if the argument occupies the same space as the line\r\n  eql: function(line) {\r\n    return (this.isParallelTo(line) && this.contains(line.anchor));\r\n  },\r\n\r\n  // Returns a copy of the line\r\n  dup: function() {\r\n    return Line.create(this.anchor, this.direction);\r\n  },\r\n\r\n  // Returns the result of translating the line by the given vector/array\r\n  translate: function(vector) {\r\n    var V = vector.elements || vector;\r\n    return Line.create([\r\n      this.anchor.elements[0] + V[0],\r\n      this.anchor.elements[1] + V[1],\r\n      this.anchor.elements[2] + (V[2] || 0)\r\n    ], this.direction);\r\n  },\r\n\r\n  // Returns true if the line is parallel to the argument. Here, 'parallel to'\r\n  // means that the argument's direction is either parallel or antiparallel to\r\n  // the line's own direction. A line is parallel to a plane if the two do not\r\n  // have a unique intersection.\r\n  isParallelTo: function(obj) {\r\n    if (obj.normal) { return obj.isParallelTo(this); }\r\n    var theta = this.direction.angleFrom(obj.direction);\r\n    return (Math.abs(theta) <= Sylvester.precision || Math.abs(theta - Math.PI) <= Sylvester.precision);\r\n  },\r\n\r\n  // Returns the line's perpendicular distance from the argument,\r\n  // which can be a point, a line or a plane\r\n  distanceFrom: function(obj) {\r\n    if (obj.normal) { return obj.distanceFrom(this); }\r\n    if (obj.direction) {\r\n      // obj is a line\r\n      if (this.isParallelTo(obj)) { return this.distanceFrom(obj.anchor); }\r\n      var N = this.direction.cross(obj.direction).toUnitVector().elements;\r\n      var A = this.anchor.elements, B = obj.anchor.elements;\r\n      return Math.abs((A[0] - B[0]) * N[0] + (A[1] - B[1]) * N[1] + (A[2] - B[2]) * N[2]);\r\n    } else {\r\n      // obj is a point\r\n      var P = obj.elements || obj;\r\n      var D = this.direction.elements;\r\n      var PA1 = P[0] - A[0], PA2 = P[1] - A[1], PA3 = (P[2] || 0) - A[2];\r\n      var modPA = Math.sqrt(PA1*PA1 + PA2*PA2 + PA3*PA3);\r\n      if (modPA === 0) return 0;\r\n      // Assumes direction vector is normalized\r\n      var cosTheta = (PA1 * D[0] + PA2 * D[1] + PA3 * D[2]) / modPA;\r\n      var sin2 = 1 - cosTheta*cosTheta;\r\n      return Math.abs(modPA * Math.sqrt(sin2 < 0 ? 0 : sin2));\r\n    }\r\n  },\r\n\r\n  // Returns true iff the argument is a point on the line\r\n  contains: function(point) {\r\n    var dist = this.distanceFrom(point);\r\n    return (dist !== null && dist <= Sylvester.precision);\r\n  },\r\n\r\n  // Returns true iff the line lies in the given plane\r\n  liesIn: function(plane) {\r\n    return plane.contains(this);\r\n  },\r\n\r\n  // Returns true iff the line has a unique point of intersection with the argument\r\n  intersects: function(obj) {\r\n    if (obj.normal) { return obj.intersects(this); }\r\n    return (!this.isParallelTo(obj) && this.distanceFrom(obj) <= Sylvester.precision);\r\n  },\r\n\r\n  // Returns the unique intersection point with the argument, if one exists\r\n  intersectionWith: function(obj) {\r\n    if (obj.normal) { return obj.intersectionWith(this); }\r\n    if (!this.intersects(obj)) { return null; }\r\n    var P = this.anchor.elements, X = this.direction.elements,\r\n        Q = obj.anchor.elements, Y = obj.direction.elements;\r\n    var X1 = X[0], X2 = X[1], X3 = X[2], Y1 = Y[0], Y2 = Y[1], Y3 = Y[2];\r\n    var PsubQ1 = P[0] - Q[0], PsubQ2 = P[1] - Q[1], PsubQ3 = P[2] - Q[2];\r\n    var XdotQsubP = - X1*PsubQ1 - X2*PsubQ2 - X3*PsubQ3;\r\n    var YdotPsubQ = Y1*PsubQ1 + Y2*PsubQ2 + Y3*PsubQ3;\r\n    var XdotX = X1*X1 + X2*X2 + X3*X3;\r\n    var YdotY = Y1*Y1 + Y2*Y2 + Y3*Y3;\r\n    var XdotY = X1*Y1 + X2*Y2 + X3*Y3;\r\n    var k = (XdotQsubP * YdotY / XdotX + XdotY * YdotPsubQ) / (YdotY - XdotY * XdotY);\r\n    return Vector.create([P[0] + k*X1, P[1] + k*X2, P[2] + k*X3]);\r\n  },\r\n\r\n  // Returns the point on the line that is closest to the given point or line\r\n  pointClosestTo: function(obj) {\r\n    if (obj.direction) {\r\n      // obj is a line\r\n      if (this.intersects(obj)) { return this.intersectionWith(obj); }\r\n      if (this.isParallelTo(obj)) { return null; }\r\n      var D = this.direction.elements, E = obj.direction.elements;\r\n      var D1 = D[0], D2 = D[1], D3 = D[2], E1 = E[0], E2 = E[1], E3 = E[2];\r\n      // Create plane containing obj and the shared normal and intersect this with it\r\n      // Thank you: http://www.cgafaq.info/wiki/Line-line_distance\r\n      var x = (D3 * E1 - D1 * E3), y = (D1 * E2 - D2 * E1), z = (D2 * E3 - D3 * E2);\r\n      var N = Vector.create([x * E3 - y * E2, y * E1 - z * E3, z * E2 - x * E1]);\r\n      var P = Plane.create(obj.anchor, N);\r\n      return P.intersectionWith(this);\r\n    } else {\r\n      // obj is a point\r\n      if (this.contains(P)) { return Vector.create(P); }\r\n      var V = Vector.create([D2 * x - D3 * z, D3 * y - D1 * x, D1 * z - D2 * y]);\r\n      var k = this.distanceFrom(P) / V.modulus();\r\n      return Vector.create([\r\n        P[0] + V.elements[0] * k,\r\n        P[1] + V.elements[1] * k,\r\n        (P[2] || 0) + V.elements[2] * k\r\n      ]);\r\n    }\r\n  },\r\n\r\n  // Returns a copy of the line rotated by t radians about the given line. Works by\r\n  // finding the argument's closest point to this line's anchor point (call this C) and\r\n  // rotating the anchor about C. Also rotates the line's direction about the argument's.\r\n  // Be careful with this - the rotation axis' direction affects the outcome!\r\n  rotate: function(t, line) {\r\n    // If we're working in 2D\r\n    if (typeof(line.direction) == 'undefined') { line = Line.create(line.to3D(), Vector.k); }\r\n    var R = Matrix.Rotation(t, line.direction).elements;\r\n    var C = line.pointClosestTo(this.anchor).elements;\r\n    var A = this.anchor.elements, D = this.direction.elements;\r\n    var C1 = C[0], C2 = C[1], C3 = C[2], A1 = A[0], A2 = A[1], A3 = A[2];\r\n    var x = A1 - C1, y = A2 - C2, z = A3 - C3;\r\n    return Line.create([\r\n      C1 + R[0][0] * x + R[0][1] * y + R[0][2] * z,\r\n      C2 + R[1][0] * x + R[1][1] * y + R[1][2] * z,\r\n      C3 + R[2][0] * x + R[2][1] * y + R[2][2] * z\r\n    ], [\r\n      R[0][0] * D[0] + R[0][1] * D[1] + R[0][2] * D[2],\r\n      R[1][0] * D[0] + R[1][1] * D[1] + R[1][2] * D[2],\r\n      R[2][0] * D[0] + R[2][1] * D[1] + R[2][2] * D[2]\r\n    ]);\r\n  },\r\n\r\n  // Returns the line's reflection in the given point or line\r\n  reflectionIn: function(obj) {\r\n    if (obj.normal) {\r\n      // obj is a plane\r\n      var A = this.anchor.elements, D = this.direction.elements;\r\n      var A1 = A[0], A2 = A[1], A3 = A[2], D1 = D[0], D2 = D[1], D3 = D[2];\r\n      var newA = this.anchor.reflectionIn(obj).elements;\r\n      // Add the line's direction vector to its anchor, then mirror that in the plane\r\n      var AD1 = A1 + D1, AD2 = A2 + D2, AD3 = A3 + D3;\r\n      var Q = obj.pointClosestTo([AD1, AD2, AD3]).elements;\r\n      var newD = [Q[0] + (Q[0] - AD1) - newA[0], Q[1] + (Q[1] - AD2) - newA[1], Q[2] + (Q[2] - AD3) - newA[2]];\r\n      return Line.create(newA, newD);\r\n    } else if (obj.direction) {\r\n      // obj is a line - reflection obtained by rotating PI radians about obj\r\n      return this.rotate(Math.PI, obj);\r\n    } else {\r\n      // obj is a point - just reflect the line's anchor in it\r\n      var P = obj.elements || obj;\r\n      return Line.create(this.anchor.reflectionIn([P[0], P[1], (P[2] || 0)]), this.direction);\r\n    }\r\n  },\r\n\r\n  // Set the line's anchor point and direction.\r\n  setVectors: function(anchor, direction) {\r\n    // Need to do this so that line's properties are not\r\n    // references to the arguments passed in\r\n    anchor = Vector.create(anchor);\r\n    direction = Vector.create(direction);\r\n    if (anchor.elements.length === 2) {anchor.elements.push(0); }\r\n    if (direction.elements.length === 2) { direction.elements.push(0); }\r\n    if (anchor.elements.length > 3 || direction.elements.length > 3) { return null; }\r\n    var mod = direction.modulus();\r\n    if (mod === 0) { return null; }\r\n    this.anchor = anchor;\r\n    this.direction = Vector.create([\r\n      direction.elements[0] / mod,\r\n      direction.elements[1] / mod,\r\n      direction.elements[2] / mod\r\n    ]);\r\n    return this;\r\n  }\r\n};\r\n\r\n  \r\n// Constructor function\r\nLine.create = function(anchor, direction) {\r\n  var L = new Line();\r\n  return L.setVectors(anchor, direction);\r\n};\r\n\r\n// Axes\r\nLine.X = Line.create(Vector.Zero(3), Vector.i);\r\nLine.Y = Line.create(Vector.Zero(3), Vector.j);\r\nLine.Z = Line.create(Vector.Zero(3), Vector.k);\r\n\r\n\r\n\r\nfunction Plane() {}\r\nPlane.prototype = {\r\n\r\n  // Returns true iff the plane occupies the same space as the argument\r\n  eql: function(plane) {\r\n    return (this.contains(plane.anchor) && this.isParallelTo(plane));\r\n  },\r\n\r\n  // Returns a copy of the plane\r\n  dup: function() {\r\n    return Plane.create(this.anchor, this.normal);\r\n  },\r\n\r\n  // Returns the result of translating the plane by the given vector\r\n  translate: function(vector) {\r\n    var V = vector.elements || vector;\r\n    return Plane.create([\r\n      this.anchor.elements[0] + V[0],\r\n      this.anchor.elements[1] + V[1],\r\n      this.anchor.elements[2] + (V[2] || 0)\r\n    ], this.normal);\r\n  },\r\n\r\n  // Returns true iff the plane is parallel to the argument. Will return true\r\n  // if the planes are equal, or if you give a line and it lies in the plane.\r\n  isParallelTo: function(obj) {\r\n    var theta;\r\n    if (obj.normal) {\r\n      // obj is a plane\r\n      theta = this.normal.angleFrom(obj.normal);\r\n      return (Math.abs(theta) <= Sylvester.precision || Math.abs(Math.PI - theta) <= Sylvester.precision);\r\n    } else if (obj.direction) {\r\n      // obj is a line\r\n      return this.normal.isPerpendicularTo(obj.direction);\r\n    }\r\n    return null;\r\n  },\r\n  \r\n  // Returns true iff the receiver is perpendicular to the argument\r\n  isPerpendicularTo: function(plane) {\r\n    var theta = this.normal.angleFrom(plane.normal);\r\n    return (Math.abs(Math.PI/2 - theta) <= Sylvester.precision);\r\n  },\r\n\r\n  // Returns the plane's distance from the given object (point, line or plane)\r\n  distanceFrom: function(obj) {\r\n    if (this.intersects(obj) || this.contains(obj)) { return 0; }\r\n    if (obj.anchor) {\r\n      // obj is a plane or line\r\n      var A = this.anchor.elements, B = obj.anchor.elements, N = this.normal.elements;\r\n      return Math.abs((A[0] - B[0]) * N[0] + (A[1] - B[1]) * N[1] + (A[2] - B[2]) * N[2]);\r\n    } else {\r\n      // obj is a point\r\n      var P = obj.elements || obj;\r\n      return Math.abs((A[0] - P[0]) * N[0] + (A[1] - P[1]) * N[1] + (A[2] - (P[2] || 0)) * N[2]);\r\n    }\r\n  },\r\n\r\n  // Returns true iff the plane contains the given point or line\r\n  contains: function(obj) {\r\n    if (obj.normal) { return null; }\r\n    if (obj.direction) {\r\n      return (this.contains(obj.anchor) && this.contains(obj.anchor.add(obj.direction)));\r\n    } else {\r\n      var P = obj.elements || obj;\r\n      var A = this.anchor.elements, N = this.normal.elements;\r\n      var diff = Math.abs(N[0]*(A[0] - P[0]) + N[1]*(A[1] - P[1]) + N[2]*(A[2] - (P[2] || 0)));\r\n      return (diff <= Sylvester.precision);\r\n    }\r\n  },\r\n\r\n  // Returns true iff the plane has a unique point/line of intersection with the argument\r\n  intersects: function(obj) {\r\n    if (typeof(obj.direction) == 'undefined' && typeof(obj.normal) == 'undefined') { return null; }\r\n    return !this.isParallelTo(obj);\r\n  },\r\n\r\n  // Returns the unique intersection with the argument, if one exists. The result\r\n  // will be a vector if a line is supplied, and a line if a plane is supplied.\r\n  intersectionWith: function(obj) {\r\n    if (!this.intersects(obj)) { return null; }\r\n    if (obj.direction) {\r\n      // obj is a line\r\n      var A = obj.anchor.elements, D = obj.direction.elements,\r\n          P = this.anchor.elements, N = this.normal.elements;\r\n      var multiplier = (N[0]*(P[0]-A[0]) + N[1]*(P[1]-A[1]) + N[2]*(P[2]-A[2])) / (N[0]*D[0] + N[1]*D[1] + N[2]*D[2]);\r\n      return Vector.create([A[0] + D[0]*multiplier, A[1] + D[1]*multiplier, A[2] + D[2]*multiplier]);\r\n    } else if (obj.normal) {\r\n      // obj is a plane\r\n      var direction = this.normal.cross(obj.normal).toUnitVector();\r\n      // To find an anchor point, we find one co-ordinate that has a value\r\n      // of zero somewhere on the intersection, and remember which one we picked\r\n      var O = obj.normal.elements, B = obj.anchor.elements;\r\n      var solver = Matrix.Zero(2,2), i = 0;\r\n      while (solver.isSingular()) {\r\n        i++;\r\n        solver = Matrix.create([\r\n          [ N[i%3], N[(i+1)%3] ],\r\n          [ O[i%3], O[(i+1)%3]  ]\r\n        ]);\r\n      }\r\n      // Then we solve the simultaneous equations in the remaining dimensions\r\n      var inverse = solver.inverse().elements;\r\n      var x = N[0]*A[0] + N[1]*A[1] + N[2]*A[2];\r\n      var y = O[0]*B[0] + O[1]*B[1] + O[2]*B[2];\r\n      var intersection = [\r\n        inverse[0][0] * x + inverse[0][1] * y,\r\n        inverse[1][0] * x + inverse[1][1] * y\r\n      ];\r\n      var anchor = [];\r\n      for (var j = 1; j <= 3; j++) {\r\n        // This formula picks the right element from intersection by\r\n        // cycling depending on which element we set to zero above\r\n        anchor.push((i === j) ? 0 : intersection[(j + (5 - i)%3)%3]);\r\n      }\r\n      return Line.create(anchor, direction);\r\n    }\r\n  },\r\n\r\n  // Returns the point in the plane closest to the given point\r\n  pointClosestTo: function(point) {\r\n    var P = point.elements || point;\r\n    var A = this.anchor.elements, N = this.normal.elements;\r\n    var dot = (A[0] - P[0]) * N[0] + (A[1] - P[1]) * N[1] + (A[2] - (P[2] || 0)) * N[2];\r\n    return Vector.create([P[0] + N[0] * dot, P[1] + N[1] * dot, (P[2] || 0) + N[2] * dot]);\r\n  },\r\n\r\n  // Returns a copy of the plane, rotated by t radians about the given line\r\n  // See notes on Line#rotate.\r\n  rotate: function(t, line) {\r\n    var R = Matrix.Rotation(t, line.direction).elements;\r\n    var C = line.pointClosestTo(this.anchor).elements;\r\n    var A = this.anchor.elements, N = this.normal.elements;\r\n    var C1 = C[0], C2 = C[1], C3 = C[2], A1 = A[0], A2 = A[1], A3 = A[2];\r\n    var x = A1 - C1, y = A2 - C2, z = A3 - C3;\r\n    return Plane.create([\r\n      C1 + R[0][0] * x + R[0][1] * y + R[0][2] * z,\r\n      C2 + R[1][0] * x + R[1][1] * y + R[1][2] * z,\r\n      C3 + R[2][0] * x + R[2][1] * y + R[2][2] * z\r\n    ], [\r\n      R[0][0] * N[0] + R[0][1] * N[1] + R[0][2] * N[2],\r\n      R[1][0] * N[0] + R[1][1] * N[1] + R[1][2] * N[2],\r\n      R[2][0] * N[0] + R[2][1] * N[1] + R[2][2] * N[2]\r\n    ]);\r\n  },\r\n\r\n  // Returns the reflection of the plane in the given point, line or plane.\r\n  reflectionIn: function(obj) {\r\n    if (obj.normal) {\r\n      // obj is a plane\r\n      var A = this.anchor.elements, N = this.normal.elements;\r\n      var A1 = A[0], A2 = A[1], A3 = A[2], N1 = N[0], N2 = N[1], N3 = N[2];\r\n      var newA = this.anchor.reflectionIn(obj).elements;\r\n      // Add the plane's normal to its anchor, then mirror that in the other plane\r\n      var AN1 = A1 + N1, AN2 = A2 + N2, AN3 = A3 + N3;\r\n      var Q = obj.pointClosestTo([AN1, AN2, AN3]).elements;\r\n      var newN = [Q[0] + (Q[0] - AN1) - newA[0], Q[1] + (Q[1] - AN2) - newA[1], Q[2] + (Q[2] - AN3) - newA[2]];\r\n      return Plane.create(newA, newN);\r\n    } else if (obj.direction) {\r\n      // obj is a line\r\n      return this.rotate(Math.PI, obj);\r\n    } else {\r\n      // obj is a point\r\n      var P = obj.elements || obj;\r\n      return Plane.create(this.anchor.reflectionIn([P[0], P[1], (P[2] || 0)]), this.normal);\r\n    }\r\n  },\r\n\r\n  // Sets the anchor point and normal to the plane. If three arguments are specified,\r\n  // the normal is calculated by assuming the three points should lie in the same plane.\r\n  // If only two are sepcified, the second is taken to be the normal. Normal vector is\r\n  // normalised before storage.\r\n  setVectors: function(anchor, v1, v2) {\r\n    anchor = Vector.create(anchor);\r\n    anchor = anchor.to3D(); if (anchor === null) { return null; }\r\n    v1 = Vector.create(v1);\r\n    v1 = v1.to3D(); if (v1 === null) { return null; }\r\n    if (typeof(v2) == 'undefined') {\r\n      v2 = null;\r\n    } else {\r\n      v2 = Vector.create(v2);\r\n      v2 = v2.to3D(); if (v2 === null) { return null; }\r\n    }\r\n    var A1 = anchor.elements[0], A2 = anchor.elements[1], A3 = anchor.elements[2];\r\n    var v11 = v1.elements[0], v12 = v1.elements[1], v13 = v1.elements[2];\r\n    var normal, mod;\r\n    if (v2 !== null) {\r\n      var v21 = v2.elements[0], v22 = v2.elements[1], v23 = v2.elements[2];\r\n      normal = Vector.create([\r\n        (v12 - A2) * (v23 - A3) - (v13 - A3) * (v22 - A2),\r\n        (v13 - A3) * (v21 - A1) - (v11 - A1) * (v23 - A3),\r\n        (v11 - A1) * (v22 - A2) - (v12 - A2) * (v21 - A1)\r\n      ]);\r\n      mod = normal.modulus();\r\n      if (mod === 0) { return null; }\r\n      normal = Vector.create([normal.elements[0] / mod, normal.elements[1] / mod, normal.elements[2] / mod]);\r\n    } else {\r\n      mod = Math.sqrt(v11*v11 + v12*v12 + v13*v13);\r\n      if (mod === 0) { return null; }\r\n      normal = Vector.create([v1.elements[0] / mod, v1.elements[1] / mod, v1.elements[2] / mod]);\r\n    }\r\n    this.anchor = anchor;\r\n    this.normal = normal;\r\n    return this;\r\n  }\r\n};\r\n\r\n// Constructor function\r\nPlane.create = function(anchor, v1, v2) {\r\n  var P = new Plane();\r\n  return P.setVectors(anchor, v1, v2);\r\n};\r\n\r\n// X-Y-Z planes\r\nPlane.XY = Plane.create(Vector.Zero(3), Vector.k);\r\nPlane.YZ = Plane.create(Vector.Zero(3), Vector.i);\r\nPlane.ZX = Plane.create(Vector.Zero(3), Vector.j);\r\nPlane.YX = Plane.XY; Plane.ZY = Plane.YZ; Plane.XZ = Plane.ZX;\r\n","import initMatrix from \"./initMatrix\";\r\nimport { Matrix } from \"./sylvester.src\";\r\n\r\nconst toRadians = (angle) => (angle * Math.PI) / 180;\r\n\r\nconst generateMatrixes = (dimensions, anglesArr, transposeRotation) => {\r\n  let cosinus1 = dimensions - 1;\r\n  let cosinus2 = dimensions - 2;\r\n  let sinus1 = dimensions - 1;\r\n  let sinus2 = dimensions - 2;\r\n  let variants = (dimensions * (dimensions - 1)) / 2;\r\n  const matrixes = [];\r\n  for (let i = 0; i < variants; i++) {\r\n    matrixes.push(\r\n      Matrix.create(\r\n        initMatrix(\r\n          dimensions,\r\n          cosinus1,\r\n          cosinus2,\r\n          sinus1,\r\n          sinus2,\r\n          toRadians(anglesArr[i])\r\n        )\r\n      )\r\n    );\r\n\r\n    if (cosinus2 === 0) {\r\n      cosinus1--;\r\n      cosinus2 = cosinus1;\r\n      sinus1--;\r\n      sinus2 = sinus1;\r\n    }\r\n\r\n    cosinus2--;\r\n    sinus2--;\r\n  }\r\n\r\n  let matrixMultiply = matrixes[0];\r\n\r\n  for (let i = 1; i < variants; i++) {\r\n    matrixMultiply = matrixMultiply.multiply(matrixes[i]);\r\n  }\r\n\r\n  if (transposeRotation) {\r\n    return matrixMultiply.transpose();\r\n  }\r\n\r\n  return matrixMultiply;\r\n};\r\n\r\nexport default generateMatrixes;\r\n","import { Matrix } from \"./sylvester.src\";\r\n\r\nconst generateFigure = (vertices, matrix, dimension, dimensionOfFigure) => {\r\n  const verticesOnSvg = vertices.map((vertex) => {\r\n    let perspective = 350;\r\n    let coordinates = matrix.multiply(Matrix.create(vertex));\r\n    let x = coordinates?.e(1, 1) || 0;\r\n    let y = coordinates?.e(2, 1) || 0;\r\n\r\n    for (let i = 2; i < dimension; i++) {\r\n      x = (perspective * x) / ((coordinates?.e(i + 1, 1) || 0) + perspective);\r\n      y = (perspective * y) / ((coordinates?.e(i + 1, 1) || 0) + perspective);\r\n\r\n      perspective += 200;\r\n    }\r\n\r\n    return { x, y };\r\n  });\r\n\r\n  const setCoordinatesToLines = Array.from(document.querySelectorAll(\".line\"));\r\n  const coordinatesToCircles = Array.from(document.querySelectorAll(\".circle\"));\r\n\r\n  setCoordinatesToLines.map((line) => {\r\n    const index1 = isNaN(line.getAttribute(\"vertex1\"))\r\n      ? 0\r\n      : line.getAttribute(\"vertex1\");\r\n    const index2 = isNaN(line.getAttribute(\"vertex2\"))\r\n      ? 0\r\n      : line.getAttribute(\"vertex2\");\r\n\r\n    if (+dimensionOfFigure === 1) {\r\n      line.setAttribute(\"x1\", 200);\r\n      line.setAttribute(\"x2\", 400);\r\n      line.setAttribute(\"y1\", 200);\r\n      line.setAttribute(\"y2\", 200);\r\n    } else {\r\n      line.setAttribute(\"x1\", 300 + verticesOnSvg[+index1]?.x);\r\n      line.setAttribute(\"x2\", 300 + verticesOnSvg[+index2]?.x);\r\n      line.setAttribute(\"y1\", 200 + verticesOnSvg[+index1]?.y);\r\n      line.setAttribute(\"y2\", 200 + verticesOnSvg[+index2]?.y);\r\n    }\r\n  });\r\n\r\n  coordinatesToCircles.map((line, index) => {\r\n    line.setAttribute(\"cx\", 300 + verticesOnSvg[index]?.x);\r\n    line.setAttribute(\"cy\", 200 + verticesOnSvg[index]?.y);\r\n\r\n    return 0;\r\n  });\r\n};\r\n\r\nexport default generateFigure;\r\n","const cubeVertices = (dimensions, DimensionOfFigure, setVerticesArray) => {\r\n  const verticesAmount = 2 ** dimensions;\r\n\r\n  const verticesArray = [];\r\n\r\n  for (let i = 0; i < verticesAmount; i++) {\r\n    const vertex = [];\r\n\r\n    for (let j = 0; j < dimensions; j++) {\r\n      if (Math.trunc(i / 2 ** j) % 2 === 0 && j < DimensionOfFigure) {\r\n        vertex.push(60);\r\n      } else if (j < DimensionOfFigure) {\r\n        vertex.push(-65);\r\n      } else {\r\n        vertex.push(0);\r\n      }\r\n    }\r\n\r\n    verticesArray.push(vertex);\r\n  }\r\n\r\n  setVerticesArray(verticesArray);\r\n};\r\n\r\nexport default cubeVertices;\r\n","const octahedronVertices = (\r\n  dimensions,\r\n  DimensionOfFigure,\r\n  setVerticesArray\r\n) => {\r\n  const verticesAmount = 2 * DimensionOfFigure;\r\n\r\n  const verticesArray = [];\r\n\r\n  for (let i = 0; i < verticesAmount / 2; i++) {\r\n    const vertex = [];\r\n\r\n    let prevResult = verticesArray[verticesArray.length - 2];\r\n\r\n    if (i === 0) {\r\n      for (let j = 0; j < DimensionOfFigure; j++) {\r\n        if (j === 0) {\r\n          vertex.push(100);\r\n        } else {\r\n          vertex.push(0);\r\n        }\r\n      }\r\n    } else {\r\n      let prevNot0Index = prevResult.indexOf(100);\r\n\r\n      if (prevNot0Index === DimensionOfFigure - 1) {\r\n        prevNot0Index = -1;\r\n      }\r\n\r\n      for (let j = 0; j < DimensionOfFigure; j++) {\r\n        if (j === prevNot0Index + 1) {\r\n          vertex.push(100);\r\n        } else {\r\n          vertex.push(0);\r\n        }\r\n      }\r\n    }\r\n\r\n    verticesArray.push(vertex);\r\n    verticesArray.push(vertex.map((item) => (item ? item * -1 : 0)));\r\n  }\r\n\r\n  verticesArray.forEach((vertex, index) => {\r\n    while (vertex.length < dimensions) {\r\n      vertex.push(0);\r\n    }\r\n    verticesArray[index] = vertex;\r\n  });\r\n\r\n  setVerticesArray(verticesArray);\r\n};\r\n\r\nexport default octahedronVertices;\r\n","const symplexVertices = (dimensions, DimensionOfFigure, setVerticesArray) => {\r\n  let verticesArray = [];\r\n  let firstDot = [];\r\n\r\n  if (DimensionOfFigure > 2) {\r\n    for (let i = 0; i < DimensionOfFigure; i++) {\r\n      if (i === DimensionOfFigure - 1) {\r\n        firstDot.push(25);\r\n      } else {\r\n        firstDot.push(56);\r\n      }\r\n    }\r\n\r\n    verticesArray.push(firstDot);\r\n    firstDot = firstDot.map((number) => number * -1);\r\n\r\n    for (let i = 0; i < DimensionOfFigure - 1; i++) {\r\n      let copyFirstDot = [...firstDot];\r\n      if (DimensionOfFigure === 2) copyFirstDot = [...firstDot].reverse();\r\n      copyFirstDot[i] = copyFirstDot[i] * -1;\r\n      copyFirstDot = copyFirstDot.map((item) => (item === -25 ? 25 : item));\r\n      verticesArray.push(copyFirstDot);\r\n    }\r\n\r\n    const lastDot = [];\r\n\r\n    for (let i = 0; i < DimensionOfFigure; i++) {\r\n      if (i === DimensionOfFigure - 1) {\r\n        lastDot.push(-100);\r\n      } else {\r\n        lastDot.push(0);\r\n      }\r\n    }\r\n\r\n    verticesArray.push(lastDot);\r\n  } else {\r\n    verticesArray = [\r\n      [90, 90],\r\n      [60, -90],\r\n      [-90, 90],\r\n    ];\r\n  }\r\n\r\n  verticesArray.forEach((vertex, index) => {\r\n    while (vertex.length < dimensions) {\r\n      vertex.push(0);\r\n    }\r\n    verticesArray[index] = vertex;\r\n  });\r\n\r\n  setVerticesArray(verticesArray);\r\n};\r\n\r\nexport default symplexVertices;\r\n","const Cell24AnaologVertices = (\r\n  dimensions,\r\n  DimensionOfFigure,\r\n  setVerticesArray\r\n) => {\r\n  const verticesAmount = 2 ** DimensionOfFigure;\r\n\r\n  const verticesArray = [];\r\n\r\n  for (let i = 0; i < verticesAmount; i++) {\r\n    const vertex = [];\r\n\r\n    for (let j = 0; j < DimensionOfFigure; j++) {\r\n      if (Math.trunc(i / 2 ** j) % 2 === 0 && j < DimensionOfFigure) {\r\n        vertex.push(50);\r\n      } else if (j < DimensionOfFigure) {\r\n        vertex.push(-50);\r\n      } else {\r\n        vertex.push(0);\r\n      }\r\n    }\r\n\r\n    verticesArray.push(vertex);\r\n  }\r\n\r\n  const verticesAmount2 = 2 * DimensionOfFigure;\r\n  for (let i = 0; i < verticesAmount2 / 2; i++) {\r\n    const vertex = [];\r\n\r\n    let prevResult = verticesArray[verticesArray.length - 2];\r\n\r\n    if (i === 0) {\r\n      for (let j = 0; j < DimensionOfFigure; j++) {\r\n        if (j === 0) {\r\n          vertex.push(100);\r\n        } else {\r\n          vertex.push(0);\r\n        }\r\n      }\r\n    } else {\r\n      let prevNot0Index = prevResult.indexOf(100);\r\n\r\n      if (prevNot0Index === DimensionOfFigure - 1) {\r\n        prevNot0Index = -1;\r\n      }\r\n\r\n      for (let j = 0; j < DimensionOfFigure; j++) {\r\n        if (j === prevNot0Index + 1) {\r\n          vertex.push(100);\r\n        } else {\r\n          vertex.push(0);\r\n        }\r\n      }\r\n    }\r\n\r\n    verticesArray.push(vertex);\r\n    verticesArray.push(vertex.map((item) => (item ? item * -1 : 0)));\r\n  }\r\n\r\n  verticesArray.forEach((vertex, index) => {\r\n    while (vertex.length < dimensions) {\r\n      vertex.push(0);\r\n    }\r\n    verticesArray[index] = vertex;\r\n  });\r\n\r\n  setVerticesArray(verticesArray);\r\n};\r\n\r\nexport default Cell24AnaologVertices;\r\n","const Cell120AnalogVertices = (\r\n  dimensions,\r\n  DimensionOfFigure,\r\n  setVerticesArray\r\n) => {\r\n  let copyDimensionOfFigure = DimensionOfFigure > 4 ? 4 : DimensionOfFigure;\r\n  if (+DimensionOfFigure > +dimensions) copyDimensionOfFigure = dimensions;\r\n  const fi = 1.618;\r\n  const baseGroup1 =\r\n    +copyDimensionOfFigure === 3\r\n      ? [fi, fi, fi].map((number) => Math.round(number * 50))\r\n      : [2, 2, 0, 0].map((number) => Math.round(number * 50));\r\n  const baseGroup2 =\r\n    +copyDimensionOfFigure === 3\r\n      ? [0, fi ** 2, 1].map((number) => Math.round(number * 50))\r\n      : [5 ** (1 / 2), 1, 1, 1].map((number) => Math.round(number * 50));\r\n  const baseGroup3 =\r\n    +copyDimensionOfFigure === 3\r\n      ? [fi ** 2, 1, 0].map((number) => Math.round(number * 50))\r\n      : [fi, fi, fi, fi ** -2].map((number) => Math.round(number * 50));\r\n  const baseGroup4 =\r\n    +copyDimensionOfFigure === 3\r\n      ? [1, 0, fi ** 2].map((number) => Math.round(number * 50))\r\n      : [fi ** 2, fi ** -1, fi ** -1, fi ** -1].map((number) =>\r\n          Math.round(number * 50)\r\n        );\r\n  const baseGroup5 =\r\n    +copyDimensionOfFigure === 3\r\n      ? [97, 37, 0]\r\n      : [fi ** 2, fi ** -2, 1, 0].map((number) => Math.round(number * 50));\r\n  const baseGroup6 = [5 ** (1 / 2), fi ** -1, fi, 0].map((number) =>\r\n    Math.round(number * 50)\r\n  );\r\n  const baseGroup7 = [2, 1, fi, fi ** -1].map((number) =>\r\n    Math.round(number * 50)\r\n  );\r\n\r\n  const vertices2D = [];\r\n  let angle = 0;\r\n  for (let i = 0; i < 5; i++) {\r\n    const radAngle = angle * 0.0175;\r\n    vertices2D.push([100 * Math.sin(radAngle), -100 * Math.cos(radAngle)]);\r\n    angle += 72;\r\n  }\r\n\r\n  const signPermutations = (a) => {\r\n    let result = [];\r\n    let fourResults = [];\r\n    for (let i = 0; i < 1 << a.length; i++) {\r\n      let num = 1 << (a.length - 1);\r\n\r\n      for (let j = 0; j < a.length; j++) {\r\n        num = num >> 1;\r\n      }\r\n\r\n      num = 1 << (a.length - 1);\r\n\r\n      for (let j = 0; j < a.length; j++) {\r\n        if ((i & num) > 0) {\r\n          fourResults.push(a[j]);\r\n        } else {\r\n          fourResults.push(a[j] * -1);\r\n        }\r\n        if (fourResults.length === a.length) {\r\n          result.push(fourResults);\r\n          fourResults = [];\r\n        }\r\n        num = num >> 1;\r\n      }\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const ones = [];\r\n\r\n  for (let i = 0; i < DimensionOfFigure; i++) {\r\n    ones.push(1);\r\n  };\r\n\r\n  const onesWithAllSignPermutations = signPermutations(ones);\r\n\r\n  const combinations = (arr, couple) => {\r\n    arr = arr.map((item) => (item === -0 ? 0 : item));\r\n    if (arr.length > 1) {\r\n      const beg = arr[0];\r\n      const arr1 = combinations(arr.slice(1));\r\n      let l = arr1[0].length;\r\n      const arr2 = [];\r\n      for (let i = 0; i < arr1.length; i++)\r\n        for (let j = 0; j <= l; j++) {\r\n          const newArr = arr1[i]\r\n            .slice(0, j)\r\n            .concat(beg, arr1[i].slice(j))\r\n            .slice(0, copyDimensionOfFigure + 1);\r\n          let inversions = 0;\r\n          for (let i = 0; i < newArr.length; i++) {\r\n            for (let j = i + 1; j < newArr.length; j++) {\r\n              if (newArr[i] > newArr[j]) inversions++;\r\n            }\r\n          }\r\n          if (couple) {\r\n            if (inversions % 2 === 0) {\r\n              arr2.push(newArr);\r\n            }\r\n          } else {\r\n            arr2.push(newArr);\r\n          }\r\n        }\r\n\r\n      return arr2;\r\n    } else return [arr];\r\n  };\r\n\r\n  const minusToPlus = (arr, couple) => {\r\n    let result = [];\r\n    const arrays = [arr];\r\n\r\n    onesWithAllSignPermutations.forEach((el) => {\r\n      const copyArr = [...arr];\r\n      for(let i = 0; i < copyArr.length; i++) {\r\n        copyArr[i] *= el[i];\r\n      }\r\n\r\n      arrays.push(copyArr);\r\n    })\r\n\r\n    if (copyDimensionOfFigure > 3) {\r\n      arrays.forEach((array) => {\r\n        result = [...result, ...combinations(array, couple)];\r\n      });\r\n    } else {\r\n      arrays.forEach((array) => {\r\n        result = [\r\n          ...result,\r\n          array.map((number) => (number === -0 ? 0 : number)),\r\n        ];\r\n      });\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const mixAll = (array, couple) => {\r\n    let variants = [];\r\n    combinations(array, false).forEach((array) => {\r\n      variants = [...variants, ...minusToPlus(array, couple)];\r\n    });\r\n\r\n    const mySet = new Set();\r\n    variants.forEach((element) => {\r\n      mySet.add(element.join(\",\"));\r\n    });\r\n\r\n    return Array.from(mySet).map((item) => item.split(\",\"));\r\n  };\r\n\r\n  const arrayToSetAndToArray = (array) => {\r\n    const mySet = new Set();\r\n    array.forEach((item) => mySet.add(item.join(\",\")));\r\n\r\n    return Array.from(mySet).map((item) =>\r\n      item.split(\",\").map((item) => +item)\r\n    );\r\n  };\r\n\r\n  const especialCombinations = (arr) => {\r\n    const permutations = combinations(arr, true);\r\n    const result = [];\r\n    for (let i = 0; i < permutations.length; i++) {\r\n      onesWithAllSignPermutations.forEach((el) => {\r\n        const copyArr = [...permutations[i]];\r\n        for(let i = 0; i < copyArr.length; i++) {\r\n          copyArr[i] *= el[i];\r\n        }\r\n  \r\n        result.push(copyArr);\r\n      })\r\n    }\r\n\r\n\r\n    const resultSet = new Set();\r\n    result.forEach((el) => {\r\n      resultSet.add(JSON.stringify(el));\r\n    });\r\n    return Array.from(resultSet).map((el) => JSON.parse(el));\r\n  };\r\n\r\n  const group1 = arrayToSetAndToArray(\r\n    +copyDimensionOfFigure === 3 ? minusToPlus(baseGroup1) : mixAll(baseGroup1)\r\n  );\r\n  const group2 = arrayToSetAndToArray(\r\n    +copyDimensionOfFigure === 3 ? minusToPlus(baseGroup2) : mixAll(baseGroup2)\r\n  );\r\n  const group3 = arrayToSetAndToArray(\r\n    +copyDimensionOfFigure === 3 ? minusToPlus(baseGroup3) : mixAll(baseGroup3)\r\n  );\r\n  const group4 = arrayToSetAndToArray(\r\n    +copyDimensionOfFigure === 3 ? minusToPlus(baseGroup4) : mixAll(baseGroup4)\r\n  );\r\n  const group5 = arrayToSetAndToArray(\r\n    +copyDimensionOfFigure === 3\r\n      ? minusToPlus(baseGroup5)\r\n      : especialCombinations(baseGroup5)\r\n  );\r\n  const group6 = arrayToSetAndToArray(especialCombinations(baseGroup6));\r\n  const group7 = arrayToSetAndToArray(especialCombinations(baseGroup7));\r\n\r\n  let vertices = [];\r\n\r\n  if (+copyDimensionOfFigure === 2) {\r\n    vertices = vertices2D;\r\n  }\r\n\r\n  if (+copyDimensionOfFigure === 3) {\r\n    vertices = [...group1, ...group2, ...group3, ...group4];\r\n  }\r\n\r\n  if (+copyDimensionOfFigure > 3) {\r\n    vertices = [\r\n      ...group1,\r\n      ...group2,\r\n      ...group3,\r\n      ...group4,\r\n      ...group5,\r\n      ...group6,\r\n      ...group7,\r\n    ];\r\n  }\r\n\r\n  if (+dimensions > +copyDimensionOfFigure) {\r\n    vertices = vertices.map((arr) => {\r\n      for (let i = +copyDimensionOfFigure + 1; i <= +dimensions; i++) {\r\n        arr.push(0);\r\n      }\r\n      return arr;\r\n    });\r\n  }\r\n  setVerticesArray(vertices);\r\n};\r\n\r\nexport default Cell120AnalogVertices;\r\n","const Cell600AnalogVertices = (\r\n  dimensions,\r\n  DimensionOfFigure,\r\n  setVerticesArray\r\n) => {\r\n  let copyDimensionOfFigure = DimensionOfFigure > 4 ? 4 : DimensionOfFigure;\r\n  if (+DimensionOfFigure > +dimensions) copyDimensionOfFigure = dimensions;\r\n  const fi = 1.618;\r\n  const baseGroup1 = [80, 80, 80, 80];\r\n  const baseGroup2 = [160, 0, 0, 0];\r\n  const baseGroup3 = [fi, 1, fi ** -1, 0].map((number) =>\r\n    Math.round(number * 80)\r\n  );\r\n\r\n  const combinations = (arr, couple) => {\r\n    arr = arr.map((item) => (item === -0 ? 0 : item));\r\n    if (arr.length > 1) {\r\n      const beg = arr[0];\r\n      const arr1 = combinations(arr.slice(1));\r\n      let l = arr1[0].length;\r\n      const arr2 = [];\r\n      for (let i = 0; i < arr1.length; i++)\r\n        for (let j = 0; j <= l; j++) {\r\n          const newArr = arr1[i]\r\n            .slice(0, j)\r\n            .concat(beg, arr1[i].slice(j))\r\n            .slice(0, copyDimensionOfFigure + 1);\r\n          let inversions = 0;\r\n          for (let i = 0; i < newArr.length; i++) {\r\n            for (let j = i + 1; j < newArr.length; j++) {\r\n              if (newArr[i] > newArr[j]) inversions++;\r\n            }\r\n          }\r\n          if (couple) {\r\n            if (inversions % 2 === 0) {\r\n              arr2.push(newArr);\r\n            }\r\n          } else {\r\n            arr2.push(newArr);\r\n          }\r\n        }\r\n\r\n      return arr2;\r\n    } else return [arr];\r\n  };\r\n\r\n  const signPermutations = (a) => {\r\n    let result = [];\r\n    let fourResults = [];\r\n    for (let i = 0; i < 1 << a.length; i++) {\r\n      let num = 1 << (a.length - 1);\r\n\r\n      for (let j = 0; j < a.length; j++) {\r\n        num = num >> 1;\r\n      }\r\n\r\n      num = 1 << (a.length - 1);\r\n\r\n      for (let j = 0; j < a.length; j++) {\r\n        if ((i & num) > 0) {\r\n          fourResults.push(a[j]);\r\n        } else {\r\n          fourResults.push(a[j] * -1);\r\n        }\r\n        if (fourResults.length === a.length) {\r\n          result.push(fourResults);\r\n          fourResults = [];\r\n        }\r\n        num = num >> 1;\r\n      }\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const ones = [];\r\n\r\n  for (let i = 0; i < DimensionOfFigure; i++) {\r\n    ones.push(1);\r\n  };\r\n\r\n  const onesWithAllSignPermutations = signPermutations(ones);\r\n\r\n  const minusToPlus = (arr, couple) => {\r\n    let result = [];\r\n    const arrays = [arr];\r\n\r\n    onesWithAllSignPermutations.forEach((el) => {\r\n      const copyArr = [...arr];\r\n      for(let i = 0; i < copyArr.length; i++) {\r\n        copyArr[i] *= el[i];\r\n      }\r\n\r\n      arrays.push(copyArr);\r\n    })\r\n\r\n    if (copyDimensionOfFigure > 3) {\r\n      arrays.forEach((array) => {\r\n        result = [...result, ...combinations(array, couple)];\r\n      });\r\n    } else {\r\n      arrays.forEach((array) => {\r\n        result = [\r\n          ...result,\r\n          array.map((number) => (number === -0 ? 0 : number)),\r\n        ];\r\n      });\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const mixAll = (array, couple) => {\r\n    let variants = [];\r\n    combinations(array, false).forEach((array) => {\r\n      variants = [...variants, ...minusToPlus(array, couple)];\r\n    });\r\n\r\n    const mySet = new Set();\r\n    variants.forEach((element) => {\r\n      mySet.add(element.join(\",\"));\r\n    });\r\n\r\n    return Array.from(mySet).map((item) => item.split(\",\"));\r\n  };\r\n\r\n  const arrayToSetAndToArray = (array) => {\r\n    const mySet = new Set();\r\n    array.forEach((item) => mySet.add(item.join(\",\")));\r\n\r\n    return Array.from(mySet).map((item) =>\r\n      item.split(\",\").map((item) => +item)\r\n    );\r\n  };\r\n\r\n  const especialCombinations = (arr) => {\r\n    const permutations = combinations(arr, true);\r\n    const result = [];\r\n    for (let i = 0; i < permutations.length; i++) {\r\n      onesWithAllSignPermutations.forEach((el) => {\r\n        const copyArr = [...permutations[i]];\r\n        for(let i = 0; i < copyArr.length; i++) {\r\n          copyArr[i] *= el[i];\r\n        }\r\n  \r\n        result.push(copyArr);\r\n      })\r\n    }\r\n\r\n    const resultSet = new Set();\r\n    result.forEach((el) => {\r\n      resultSet.add(JSON.stringify(el));\r\n    });\r\n    return Array.from(resultSet).map((el) => JSON.parse(el));\r\n  };\r\n\r\n  const group1 = arrayToSetAndToArray(mixAll(baseGroup1));\r\n  const group2 = arrayToSetAndToArray(mixAll(baseGroup2));\r\n  const group3 = arrayToSetAndToArray(especialCombinations(baseGroup3));\r\n\r\n  let vertices = [];\r\n\r\n  vertices = [...group1, ...group2, ...group3];\r\n\r\n  const lowDimensionSet = new Set();\r\n  if (+DimensionOfFigure === 3) {\r\n    vertices = vertices.forEach((arr) => {\r\n      lowDimensionSet.add(JSON.stringify(arr.slice(0, DimensionOfFigure)));\r\n    });\r\n\r\n    vertices = Array.from(lowDimensionSet).map((arr) =>\r\n      JSON.parse(arr).map((el) => +el)\r\n    );\r\n  }\r\n\r\n  if (+DimensionOfFigure === 2) {\r\n    vertices = [\r\n      [80, 80],\r\n      [-80, -80],\r\n      [-80, 80],\r\n      [80, -80],\r\n      [160, 0],\r\n      [-160, 0],\r\n      [0, 160],\r\n      [0, -160],\r\n      [0, 0],\r\n      [-129, -80],\r\n      [-129, 80],\r\n      [129, -80],\r\n      [129, 80],\r\n      [-80, -49],\r\n      [-80, 49],\r\n      [80, -49],\r\n      [80, 49],\r\n      [-49, -129],\r\n      [-49, 129],\r\n      [49, -129],\r\n      [49, 129],\r\n      [-49, -80],\r\n      [-49, 80],\r\n      [49, -80],\r\n      [49, 80],\r\n      [-129, -49],\r\n      [-129, 49],\r\n      [129, -49],\r\n      [129, 49],\r\n      [-49, 0],\r\n      [49, 0],\r\n      [-80, -129],\r\n      [-80, 129],\r\n      [80, -129],\r\n      [80, 129],\r\n      [-80, 0],\r\n      [80, 0],\r\n      [-129, 0],\r\n      [129, 0],\r\n      [0, -80],\r\n      [0, 80],\r\n      [0, -129],\r\n      [0, 129],\r\n      [0, -49],\r\n      [0, 49],\r\n    ];\r\n  }\r\n\r\n  if (+dimensions > +copyDimensionOfFigure) {\r\n    vertices = vertices.map((arr) => {\r\n      for (let i = +copyDimensionOfFigure + 1; i <= +dimensions; i++) {\r\n        arr.push(0);\r\n      }\r\n      return arr;\r\n    });\r\n  }\r\n\r\n  setVerticesArray(vertices);\r\n};\r\n\r\nexport default Cell600AnalogVertices;\r\n","const IcosahedronVertices = (\r\n  dimensions,\r\n  DimensionOfFigure,\r\n  setVerticesArray\r\n) => {\r\n  let copyDimensionOfFigure = DimensionOfFigure > 3 ? 3 : DimensionOfFigure;\r\n  if (+DimensionOfFigure > +dimensions) copyDimensionOfFigure = dimensions;\r\n  const fi = 1.618;\r\n  const baseGroup1 = [0, 1, fi].map((number) => number * 70);\r\n  const baseGroup2 = [1, fi, 0].map((number) => number * 70);\r\n  const baseGroup3 = [fi, 0, 1].map((number) => number * 70);\r\n\r\n  const signPermutations = (a) => {\r\n    let result = [];\r\n    let fourResults = [];\r\n    for (let i = 0; i < 1 << a.length; i++) {\r\n      let num = 1 << (a.length - 1);\r\n\r\n      for (let j = 0; j < a.length; j++) {\r\n        num = num >> 1;\r\n      }\r\n\r\n      num = 1 << (a.length - 1);\r\n\r\n      for (let j = 0; j < a.length; j++) {\r\n        if ((i & num) > 0) {\r\n          fourResults.push(a[j]);\r\n        } else {\r\n          fourResults.push(a[j] * -1);\r\n        }\r\n        if (fourResults.length === a.length) {\r\n          result.push(fourResults);\r\n          fourResults = [];\r\n        }\r\n        num = num >> 1;\r\n      }\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const ones = [];\r\n\r\n  for (let i = 0; i < DimensionOfFigure; i++) {\r\n    ones.push(1);\r\n  };\r\n\r\n  const onesWithAllSignPermutations = signPermutations(ones);\r\n\r\n  const minusToPlus = (arr) => {\r\n    let result = [];\r\n    const arrays = [arr];\r\n\r\n    onesWithAllSignPermutations.forEach((el) => {\r\n      const copyArr = [...arr];\r\n      for(let i = 0; i < copyArr.length; i++) {\r\n        copyArr[i] *= el[i];\r\n      }\r\n\r\n      arrays.push(copyArr);\r\n    })\r\n\r\n    arrays.forEach((array) => {\r\n      result = [\r\n        ...result,\r\n        array.map((number) => (number === -0 ? 0 : number)),\r\n      ];\r\n    });\r\n\r\n    return result;\r\n  };\r\n\r\n  const arrayToSetAndToArray = (array) => {\r\n    const mySet = new Set();\r\n    array.forEach((item) => mySet.add(item.join(\",\")));\r\n\r\n    return Array.from(mySet).map((item) =>\r\n      item.split(\",\").map((item) => +item)\r\n    );\r\n  };\r\n\r\n  const group1 = arrayToSetAndToArray(minusToPlus(baseGroup1));\r\n  const group2 = arrayToSetAndToArray(minusToPlus(baseGroup2));\r\n  const group3 = arrayToSetAndToArray(minusToPlus(baseGroup3));\r\n\r\n\r\n  let vertices = [];\r\n\r\n\r\n  vertices = [...group1, ...group2, ...group3];\r\n\r\n  if (+dimensions > +copyDimensionOfFigure) {\r\n    vertices = vertices.map((arr) => {\r\n      for (let i = +copyDimensionOfFigure + 1; i <= +dimensions; i++) {\r\n        arr.push(0);\r\n      }\r\n      return arr;\r\n    });\r\n\r\n  }\r\n\r\n  if (+DimensionOfFigure < 3) {\r\n    vertices = vertices.map((el) => el.slice(0, 2))\r\n  }\r\n\r\n  setVerticesArray(vertices);\r\n};\r\n\r\nexport default IcosahedronVertices;\r\n","const TruncatedTetrahedronVertices = (\r\n  dimensions,\r\n  DimensionOfFigure,\r\n  setVerticesArray\r\n) => {\r\n  let copyDimensionOfFigure = DimensionOfFigure > 3 ? 3 : DimensionOfFigure;\r\n\r\n  if (+DimensionOfFigure > +dimensions) copyDimensionOfFigure = dimensions;\r\n\r\n  const baseGroup1 = [1 / Math.sqrt(6), -2 / Math.sqrt(3), 2].map(\r\n    (number) => number * 60\r\n  );\r\n  const baseGroup2 = [1 / Math.sqrt(6), -2 / Math.sqrt(3), -2].map(\r\n    (number) => number * 60\r\n  );\r\n  const baseGroup3 = [1 / Math.sqrt(6), 4 / Math.sqrt(3), 0].map(\r\n    (number) => number * 60\r\n  );\r\n  const baseGroup4 = [-3 / Math.sqrt(6), 0, 2].map((number) => number * 60);\r\n  const baseGroup5 = [-3 / Math.sqrt(6), 0, -2].map((number) => number * 60);\r\n  const baseGroup6 = [-3 / Math.sqrt(6), 3 / Math.sqrt(3), 1].map(\r\n    (number) => number * 60\r\n  );\r\n  const baseGroup7 = [-3 / Math.sqrt(6), -3 / Math.sqrt(3), -1].map(\r\n    (number) => number * 60\r\n  );\r\n  const baseGroup8 = [-3 / Math.sqrt(6), -3 / Math.sqrt(3), 1].map(\r\n    (number) => number * 60\r\n  );\r\n  const baseGroup9 = [-3 / Math.sqrt(6), 3 / Math.sqrt(3), -1].map(\r\n    (number) => number * 60\r\n  );\r\n  const baseGroup10 = [5 / Math.sqrt(6), -1 / Math.sqrt(3), 1].map(\r\n    (number) => number * 60\r\n  );\r\n  const baseGroup11 = [5 / Math.sqrt(6), -1 / Math.sqrt(3), -1].map(\r\n    (number) => number * 60\r\n  );\r\n  const baseGroup12 = [5 / Math.sqrt(6), 2 / Math.sqrt(3), 0].map(\r\n    (number) => number * 60\r\n  );\r\n  let vertices = [];\r\n\r\n  vertices = [\r\n    baseGroup1,\r\n    baseGroup2,\r\n    baseGroup3,\r\n    baseGroup4,\r\n    baseGroup5,\r\n    baseGroup6,\r\n    baseGroup7,\r\n    baseGroup8,\r\n    baseGroup9,\r\n    baseGroup10,\r\n    baseGroup11,\r\n    baseGroup12,\r\n  ];\r\n\r\n  if (+dimensions > +copyDimensionOfFigure) {\r\n    vertices = vertices.map((arr) => {\r\n      for (let i = +copyDimensionOfFigure + 1; i <= +dimensions; i++) {\r\n        arr.push(0);\r\n      }\r\n      return arr;\r\n    });\r\n  }\r\n\r\n  if (+DimensionOfFigure < 3) {\r\n    vertices = vertices.map((el) => el.slice(0, 2));\r\n  }\r\n  setVerticesArray(vertices);\r\n};\r\n\r\nexport default TruncatedTetrahedronVertices;\r\n","const CuboctahedronVertices = (\r\n  dimensions,\r\n  DimensionOfFigure,\r\n  setVerticesArray\r\n) => {\r\n  let copyDimensionOfFigure = DimensionOfFigure > 3 ? 3 : DimensionOfFigure;\r\n  if (+DimensionOfFigure > +dimensions) copyDimensionOfFigure = dimensions;\r\n  const baseGroup1 = [0, Math.sqrt(2), Math.sqrt(2)].map((number) => number * 60);\r\n\r\n  const combinations = (arr, couple) => {\r\n    arr = arr.map((item) => (item === -0 ? 0 : item));\r\n    if (arr.length > 1) {\r\n      const beg = arr[0];\r\n      const arr1 = combinations(arr.slice(1));\r\n      let l = arr1[0].length;\r\n      const arr2 = [];\r\n      for (let i = 0; i < arr1.length; i++)\r\n        for (let j = 0; j <= l; j++) {\r\n          const newArr = arr1[i]\r\n            .slice(0, j)\r\n            .concat(beg, arr1[i].slice(j))\r\n            .slice(0, copyDimensionOfFigure + 1);\r\n          let inversions = 0;\r\n          for (let i = 0; i < newArr.length; i++) {\r\n            for (let j = i + 1; j < newArr.length; j++) {\r\n              if (newArr[i] > newArr[j]) inversions++;\r\n            }\r\n          }\r\n          if (couple) {\r\n            if (inversions % 2 === 0) {\r\n              arr2.push(newArr);\r\n            }\r\n          } else {\r\n            arr2.push(newArr);\r\n          }\r\n        }\r\n\r\n      return arr2;\r\n    } else return [arr];\r\n  };\r\n\r\n  const signPermutations = (a) => {\r\n    let result = [];\r\n    let fourResults = [];\r\n    for (let i = 0; i < 1 << a.length; i++) {\r\n      let num = 1 << (a.length - 1);\r\n\r\n      for (let j = 0; j < a.length; j++) {\r\n        num = num >> 1;\r\n      }\r\n\r\n      num = 1 << (a.length - 1);\r\n\r\n      for (let j = 0; j < a.length; j++) {\r\n        if ((i & num) > 0) {\r\n          fourResults.push(a[j]);\r\n        } else {\r\n          fourResults.push(a[j] * -1);\r\n        }\r\n        if (fourResults.length === a.length) {\r\n          result.push(fourResults);\r\n          fourResults = [];\r\n        }\r\n        num = num >> 1;\r\n      }\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const ones = [];\r\n\r\n  for (let i = 0; i < DimensionOfFigure; i++) {\r\n    ones.push(1);\r\n  };\r\n\r\n  const onesWithAllSignPermutations = signPermutations(ones);\r\n\r\n  const minusToPlus = (arr, couple) => {\r\n    let result = [];\r\n    const arrays = [arr];\r\n\r\n    onesWithAllSignPermutations.forEach((el) => {\r\n      const copyArr = [...arr];\r\n      for(let i = 0; i < copyArr.length; i++) {\r\n        copyArr[i] *= el[i];\r\n      }\r\n\r\n      arrays.push(copyArr);\r\n    })\r\n\r\n    if (copyDimensionOfFigure > 3) {\r\n      arrays.forEach((array) => {\r\n        result = [...result, ...combinations(array, couple)];\r\n      });\r\n    } else {\r\n      arrays.forEach((array) => {\r\n        result = [\r\n          ...result,\r\n          array.map((number) => (number === -0 ? 0 : number)),\r\n        ];\r\n      });\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const mixAll = (array, couple) => {\r\n    let variants = [];\r\n    combinations(array, false).forEach((array) => {\r\n      variants = [...variants, ...minusToPlus(array, couple)];\r\n    });\r\n\r\n    const mySet = new Set();\r\n    variants.forEach((element) => {\r\n      mySet.add(element.join(\",\"));\r\n    });\r\n\r\n    return Array.from(mySet).map((item) => item.split(\",\"));\r\n  };\r\n\r\n  const arrayToSetAndToArray = (array) => {\r\n    const mySet = new Set();\r\n    array.forEach((item) => mySet.add(item.join(\",\")));\r\n\r\n    return Array.from(mySet).map((item) =>\r\n      item.split(\",\").map((item) => +item)\r\n    );\r\n  };\r\n\r\n  const especialCombinations = (arr) => {\r\n    const permutations = combinations(arr, true);\r\n    const result = [];\r\n    for (let i = 0; i < permutations.length; i++) {\r\n      onesWithAllSignPermutations.forEach((el) => {\r\n        const copyArr = [...permutations[i]];\r\n        for(let i = 0; i < copyArr.length; i++) {\r\n          copyArr[i] *= el[i];\r\n        }\r\n  \r\n        result.push(copyArr);\r\n      })\r\n    }\r\n\r\n    const resultSet = new Set();\r\n    result.forEach((el) => {\r\n      resultSet.add(JSON.stringify(el));\r\n    });\r\n    return Array.from(resultSet).map((el) => JSON.parse(el));\r\n  };\r\n\r\n  const group1 = arrayToSetAndToArray(mixAll(baseGroup1));\r\n\r\n  let vertices = [];\r\n\r\n\r\n  vertices = [...group1];\r\n\r\n  if (+dimensions > +copyDimensionOfFigure) {\r\n    vertices = vertices.map((arr) => {\r\n      for (let i = +copyDimensionOfFigure + 1; i <= +dimensions; i++) {\r\n        arr.push(0);\r\n      }\r\n      return arr;\r\n    });\r\n\r\n  }\r\n\r\n  if (+DimensionOfFigure < 3) {\r\n    vertices = vertices.map((el) => el.slice(0, 2))\r\n  }\r\n\r\n  setVerticesArray(vertices);\r\n};\r\n\r\nexport default CuboctahedronVertices;\r\n","import cubeVertices from \"./cubeVertices\";\r\nimport octahedronVertices from \"./octahedronVertices\";\r\nimport symplexVertices from \"./symplexVertices\";\r\nimport Cell24AnaologVertices from \"./Cell24AnalogVertices\";\r\nimport Cell120AnalogVertices from \"./Cell120AnalogVertices\";\r\nimport Cell600AnalogVertices from \"./Cell600AnalogVertices\";\r\nimport IcosahedronVertices from \"./IcosahedronVertices\";\r\nimport TruncatedTetrahedronVertices from \"./TruncatedTetrahedronVertices\";\r\nimport CuboctahedronVertices from \"./CuboctahedronVertices\";\r\n\r\nexport let verticesArray = [];\r\n\r\nconst setVerticesArray = (result) => {\r\n  verticesArray = result;\r\n}\r\n\r\nconst vertices = (dimensions, DimensionOfFigure, figure) => {\r\n  if (figure === \"cube\") {\r\n    cubeVertices(dimensions, DimensionOfFigure, setVerticesArray);\r\n  }\r\n\r\n  if (figure === \"symplex\") {\r\n    symplexVertices(dimensions, DimensionOfFigure, setVerticesArray);\r\n  }\r\n\r\n  if (figure === \"octahedron\") {\r\n    octahedronVertices(dimensions, DimensionOfFigure, setVerticesArray);\r\n  }\r\n\r\n  if (figure === \"24-cell-analog\") {\r\n    Cell24AnaologVertices(dimensions, DimensionOfFigure, setVerticesArray);\r\n  }\r\n\r\n  if (figure === \"120-cell-analog\") {\r\n    Cell120AnalogVertices(dimensions, DimensionOfFigure, setVerticesArray);\r\n  }\r\n\r\n  if (figure === \"600-cell-analog\") {\r\n    Cell600AnalogVertices(dimensions, DimensionOfFigure, setVerticesArray);\r\n  }\r\n\r\n  if (figure === \"3D Icosahedron\") {\r\n    IcosahedronVertices(dimensions, DimensionOfFigure, setVerticesArray);\r\n  }\r\n\r\n  if (figure === \"3D Truncated Tetrahedron\") {\r\n    TruncatedTetrahedronVertices(dimensions, DimensionOfFigure, setVerticesArray);\r\n  }\r\n\r\n  if (figure === \"3D Cuboctahedron\") {\r\n    CuboctahedronVertices(dimensions, DimensionOfFigure, setVerticesArray);\r\n  }\r\n};\r\n\r\nexport default vertices;\r\n","import { Matrix } from \"./sylvester.src\";\r\n\r\nconst generateFigureOrthography = (vertices, matrix, dimensionOfFigure) => {\r\n  const verticesOnSvg = vertices.map((vertex) => {\r\n    let coordinates = matrix.multiply(Matrix.create(vertex));\r\n    let x = coordinates?.e(1, 1) || 0;\r\n    let y = coordinates?.e(2, 1) || 0;\r\n\r\n    return { x, y };\r\n  });\r\n\r\n  const setCoordinatesToLines = Array.from(document.querySelectorAll(\".line\"));\r\n  const setCoordinatesToCircles = Array.from(\r\n    document.querySelectorAll(\".circle\")\r\n  );\r\n  setCoordinatesToLines.map((line) => {\r\n    const index1 = line.getAttribute(\"vertex1\");\r\n    const index2 = line.getAttribute(\"vertex2\");\r\n\r\n    if (+dimensionOfFigure === 1) {\r\n      line.setAttribute(\"x1\", 200);\r\n      line.setAttribute(\"x2\", 400);\r\n      line.setAttribute(\"y1\", 200);\r\n      line.setAttribute(\"y2\", 200);\r\n    } else {\r\n      line.setAttribute(\"x1\", 300 + verticesOnSvg[+index1]?.x);\r\n      line.setAttribute(\"x2\", 300 + verticesOnSvg[+index2]?.x);\r\n      line.setAttribute(\"y1\", 200 + verticesOnSvg[+index1]?.y);\r\n      line.setAttribute(\"y2\", 200 + verticesOnSvg[+index2]?.y);\r\n    }\r\n\r\n    return 0;\r\n  });\r\n\r\n  setCoordinatesToCircles.map((line, index) => {\r\n    line.setAttribute(\"cx\", 300 + verticesOnSvg[index]?.x);\r\n    line.setAttribute(\"cy\", 200 + verticesOnSvg[index]?.y);\r\n\r\n    return 0;\r\n  });\r\n};\r\n\r\nexport default generateFigureOrthography;\r\n","import React, { useEffect } from \"react\";\r\nimport generateMatrixes from \"./generateMatrixes\";\r\nimport generateFigure from \"./generateFigure\";\r\nimport vertices, { verticesArray } from \"./vertices\";\r\nimport { useKeyboard } from \"./App\";\r\nimport generateFigureOrthography from \"./generateFigureOrthography\";\r\n\r\nconst CreateCheckboxes = ({\r\n  dimensions,\r\n  number,\r\n  DimensionOfFigure,\r\n  anglesArray,\r\n  setAnglesArray,\r\n  activeRotations,\r\n  setActiveRotations,\r\n  figure,\r\n  transposeRotation,\r\n  orthography,\r\n  dimensionOfFigure\r\n}) => {\r\n  useEffect(() => {\r\n    const moveByKeyBoard = (e) => {\r\n      if (useKeyboard) {\r\n        let copyAnglesArray = [...anglesArray];\r\n\r\n        if (e.key === \"w\") {\r\n          activeRotations.forEach((index) => {\r\n            if (copyAnglesArray[index] <= 359) {\r\n              copyAnglesArray[index] += 1;\r\n            } else {\r\n              copyAnglesArray[index] = 0;\r\n            }\r\n          });\r\n        }\r\n\r\n        if (e.key === \"s\") {\r\n          activeRotations.forEach((index) => {\r\n            if (copyAnglesArray[index] >= -359) {\r\n              copyAnglesArray[index] -= 1;\r\n            } else {\r\n              copyAnglesArray[index] = 0;\r\n            }\r\n          });\r\n        }\r\n        setAnglesArray(copyAnglesArray);\r\n        const matrix = generateMatrixes(\r\n          number,\r\n          copyAnglesArray,\r\n          transposeRotation\r\n        );\r\n        if (orthography) {\r\n          generateFigureOrthography(verticesArray, matrix, dimensionOfFigure);\r\n        } else {\r\n          generateFigure(verticesArray, matrix, number, dimensionOfFigure);\r\n        }\r\n      }\r\n    };\r\n\r\n    document.body.addEventListener(\"keydown\", moveByKeyBoard);\r\n    return () => document.body.removeEventListener(\"keydown\", moveByKeyBoard);\r\n  }, [anglesArray, orthography]);\r\n\r\n  useEffect(() => {\r\n    const anglesArray = [];\r\n    for (let i = 0; i < dimensions; i++) {\r\n      anglesArray.push(0);\r\n    }\r\n    setAnglesArray(anglesArray);\r\n  }, [dimensions]);\r\n\r\n  useEffect(() => {\r\n    let copyAnglesArray = [...anglesArray];\r\n    if (!useKeyboard) {\r\n      if (copyAnglesArray.length < dimensions) {\r\n        copyAnglesArray = [];\r\n        for (let i = 0; i < dimensions; i++) {\r\n          anglesArray.push(0);\r\n        }\r\n      }\r\n    }\r\n\r\n    const interval = setInterval(() => {\r\n      if (!useKeyboard) {\r\n        activeRotations.forEach((index) => {\r\n          if (copyAnglesArray[index] < 359) {\r\n            copyAnglesArray[index]++;\r\n          } else {\r\n            copyAnglesArray[index] = 0;\r\n          }\r\n        });\r\n\r\n        setAnglesArray(copyAnglesArray);\r\n        const matrix = generateMatrixes(\r\n          number,\r\n          copyAnglesArray,\r\n          transposeRotation\r\n        );\r\n        if (orthography) {\r\n          generateFigureOrthography(verticesArray, matrix, dimensionOfFigure);\r\n        } else {\r\n          generateFigure(verticesArray, matrix, number, dimensionOfFigure);\r\n        }\r\n      }\r\n    }, 50);\r\n\r\n    if (!activeRotations.length) clearInterval(interval);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [dimensions, activeRotations, useKeyboard, orthography, dimensionOfFigure]);\r\n\r\n  useEffect(() => {\r\n    vertices(number, DimensionOfFigure, figure);\r\n  }, [figure, number, DimensionOfFigure]);\r\n\r\n  const numbersOfCheckboxes = new Array(dimensions);\r\n  let subDimensionStart = 2;\r\n  let subDimensionEnd = 1;\r\n\r\n  let yRotationArray = [dimensions - 3];\r\n  let addToYRotationInterval = 2;\r\n\r\n  for (let i = 1; i < number - 2; i++) {\r\n    yRotationArray.push(\r\n      yRotationArray[yRotationArray.length - 1] - addToYRotationInterval\r\n    );\r\n    addToYRotationInterval++;\r\n  }\r\n\r\n  for (let i = 0; i < dimensions; i++) {\r\n    if (subDimensionEnd === subDimensionStart) {\r\n      subDimensionStart++;\r\n      subDimensionEnd = 1;\r\n    }\r\n\r\n    numbersOfCheckboxes[i] = `${subDimensionStart}-${subDimensionEnd}`;\r\n    subDimensionEnd++;\r\n  }\r\n\r\n  numbersOfCheckboxes.reverse();\r\n\r\n  const changeActiveRotation = (index) => {\r\n    let copyActiveRotations = [...activeRotations];\r\n    if (copyActiveRotations.includes(index)) {\r\n      copyActiveRotations = copyActiveRotations.filter(\r\n        (item) => item !== index\r\n      );\r\n    } else {\r\n      copyActiveRotations.push(index);\r\n    }\r\n\r\n    setActiveRotations(copyActiveRotations);\r\n  };\r\n\r\n  const selectAll = () => {\r\n    let copyActiveRotations = [];\r\n\r\n    if (activeRotations.length < numbersOfCheckboxes.length) {\r\n      copyActiveRotations = numbersOfCheckboxes.map((item, index) => index);\r\n    }\r\n\r\n    setActiveRotations(copyActiveRotations);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label className=\"using__mouse\">\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"checkbox\"\r\n          onChange={selectAll}\r\n          checked={activeRotations.length === numbersOfCheckboxes.length}\r\n        />\r\n        <p>Select All</p>\r\n      </label>\r\n      <section className=\"checkboxes\">\r\n        <div className=\"angles\">angles:</div>\r\n        {numbersOfCheckboxes.map((field, index) => {\r\n          return (\r\n              <label key={index} className=\"labels\">\r\n                <input\r\n                  key={index + \"c\"}\r\n                  type=\"checkbox\"\r\n                  name=\"checkbox\"\r\n                  onChange={() => changeActiveRotation(index)}\r\n                  checked={activeRotations.includes(index)}\r\n                  className=\"checkbox\"\r\n                />\r\n                {field}\r\n              <input type=\"number\" value={anglesArray[index] || 0} onChange={(e) => {\r\n                const copyAnglesArray = [...anglesArray];\r\n                copyAnglesArray[index] = +e.target.value;\r\n                setAnglesArray(copyAnglesArray);\r\n              }}/>\r\n\r\n              </label>\r\n          );\r\n        })}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateCheckboxes;\r\n","import React from \"react\";\r\n\r\nconst Cube = ({ dimension, displayEdges, displayVertices, verticesArray }) => {\r\n  const amountOfLines = 2 ** (dimension - 1) * dimension;\r\n  let ids = 0;\r\n  const lines = [];\r\n\r\n  for (let i = 0; i < amountOfLines; i++) {\r\n    lines.push(ids);\r\n    ids += 1;\r\n  }\r\n\r\n  let cubesRepeats = 4;\r\n  let cube = [0, 1, 2, 3];\r\n\r\n  return (\r\n    <svg width=\"600\" height=\"400\" className=\"svg\">\r\n      {displayEdges &&\r\n        lines.map((id, index) => {\r\n          let vertex1 = 0;\r\n          let vertex2 = 0;\r\n\r\n          if (index % 4 === 0 && index < 2 ** dimension) {\r\n            vertex1 = 0 + Math.trunc(index / 4) * 4;\r\n            vertex2 = 1 + Math.trunc(index / 4) * 4;\r\n          }\r\n\r\n          if (index % 4 === 1 && index < 2 ** dimension) {\r\n            vertex1 = 1 + Math.trunc(index / 4) * 4;\r\n            vertex2 = 3 + Math.trunc(index / 4) * 4;\r\n          }\r\n\r\n          if (index % 4 === 2 && index < 2 ** dimension) {\r\n            vertex1 = 3 + Math.trunc(index / 4) * 4;\r\n            vertex2 = 2 + Math.trunc(index / 4) * 4;\r\n          }\r\n\r\n          if (index % 4 === 3 && index < 2 ** dimension) {\r\n            vertex1 = 0 + Math.trunc(index / 4) * 4;\r\n            vertex2 = 2 + Math.trunc(index / 4) * 4;\r\n          }\r\n\r\n          if (index >= 2 ** dimension) {\r\n            for (let i = 0; i < cube.length; i++) {\r\n              if (index % cubesRepeats === i) {\r\n                vertex1 = cube[i];\r\n                vertex2 = cube[i] + cubesRepeats;\r\n\r\n                if (index % cubesRepeats === cubesRepeats - 1) {\r\n                  const doubleRepeats = cubesRepeats * 2;\r\n                  cube = cube.map((dot) => dot + doubleRepeats);\r\n                }\r\n              }\r\n            }\r\n\r\n            if (cube[0] > 2 ** dimension - 1) {\r\n              cubesRepeats *= 2;\r\n              const twoLength = cube.length * 2;\r\n\r\n              for (let i = 0; i < twoLength; i++) {\r\n                cube[i] = i;\r\n              }\r\n            }\r\n          }\r\n\r\n          return (\r\n            <line\r\n              key={id}\r\n              x1=\"200\"\r\n              y1=\"200\"\r\n              x2=\"400\"\r\n              y2=\"200\"\r\n              stroke=\"white\"\r\n              id={`line${id}`}\r\n              className=\"line\"\r\n              vertex1={vertex1}\r\n              vertex2={vertex2}\r\n            />\r\n          );\r\n        })}\r\n\r\n      {displayVertices ?\r\n        verticesArray.map((item, index) => (\r\n          <circle\r\n            onClick={() => {\r\n              console.log(verticesArray[index], index);\r\n            }}\r\n            key={index}\r\n            cx=\"300\"\r\n            cy=\"200\"\r\n            r=\"2\"\r\n            fill=\"white\"\r\n            id={`circle${index}`}\r\n            className=\"circle\"\r\n            onContextMenu={(e) => {\r\n              e.preventDefault();\r\n              e.target.style.display = \"none\";\r\n            }}\r\n          />\r\n        )) : null}\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Cube;\r\n","import React from \"react\";\r\n\r\nconst Symplex = ({\r\n  dimensionOfFigure,\r\n  displayEdges,\r\n  displayVertices,\r\n  verticesArray,\r\n}) => {\r\n  const amountOfLines = ((+dimensionOfFigure + 1) * dimensionOfFigure) / 2;\r\n  let ids = 0;\r\n  const lines = [];\r\n\r\n  for (let i = 0; i < amountOfLines; i++) {\r\n    lines.push(ids);\r\n    ids += 1;\r\n  }\r\n\r\n  let minsAmount = dimensionOfFigure;\r\n  let xDots = [];\r\n  let yDots = [];\r\n  let currentMinX = 0;\r\n  let currentMinY = 1;\r\n  let currentY = 0;\r\n\r\n  for (let i = 0; i < lines.length; i++) {\r\n    if (xDots.filter((value) => value === currentMinX).length < minsAmount) {\r\n      xDots.push(currentMinX);\r\n    } else {\r\n      currentMinX += 1;\r\n      minsAmount -= 1;\r\n      xDots.push(currentMinX);\r\n    }\r\n\r\n    if (currentY > dimensionOfFigure - 1) {\r\n      currentMinY += 1;\r\n      currentY = currentMinY;\r\n      yDots.push(currentY);\r\n    } else {\r\n      currentY += 1;\r\n      yDots.push(currentY);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <svg width=\"600\" height=\"400\" className=\"svg\">\r\n      {displayEdges\r\n        ? lines.map((id, index) => {\r\n            let vertex1 = 0;\r\n            let vertex2 = 0;\r\n\r\n            vertex1 = xDots[index];\r\n            vertex2 = yDots[index];\r\n\r\n            return (\r\n              <line\r\n                key={id}\r\n                x1=\"200\"\r\n                y1=\"200\"\r\n                x2=\"400\"\r\n                y2=\"200\"\r\n                stroke=\"white\"\r\n                id={`line${id}`}\r\n                className=\"line\"\r\n                vertex1={vertex1}\r\n                vertex2={vertex2}\r\n              />\r\n            );\r\n          })\r\n        : null}\r\n\r\n      {displayVertices\r\n        ? verticesArray.map((item, index) => (\r\n            <circle\r\n              onClick={() => {\r\n                console.log(verticesArray[index], index);\r\n              }}\r\n              key={index}\r\n              cx=\"300\"\r\n              cy=\"200\"\r\n              r=\"2\"\r\n              fill=\"white\"\r\n              id={`circle${index}`}\r\n              className=\"circle\"\r\n              onContextMenu={(e) => {\r\n                e.preventDefault();\r\n                e.target.style.display = \"none\";\r\n              }}\r\n            />\r\n          ))\r\n        : null}\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Symplex;\r\n","import React from \"react\";\r\n\r\nconst Octahedron = ({\r\n  dimensionOfFigure,\r\n  displayEdges,\r\n  displayVertices,\r\n  verticesArray,\r\n}) => {\r\n  const amountOfLines = dimensionOfFigure * (dimensionOfFigure - 1) * 2;\r\n  let ids = 0;\r\n  const lines = [];\r\n\r\n  for (let i = 0; i < amountOfLines; i++) {\r\n    lines.push(ids);\r\n    ids += 1;\r\n  }\r\n\r\n  let startXDotRepeatAmount = (dimensionOfFigure - 1) * 2;\r\n  let startXDotRepeatAmount2 = (dimensionOfFigure - 1) * 2;\r\n\r\n  let repeat = 0;\r\n  let startX = 0;\r\n  let startY = 2;\r\n  let startY2 = 2;\r\n  let xDots = [];\r\n  let yDots = [];\r\n\r\n  for (let i = 0; i < lines.length; i++) {\r\n    if (startXDotRepeatAmount2 > 1) {\r\n      startXDotRepeatAmount2 -= 1;\r\n      xDots.push(startX);\r\n      yDots.push(startY2);\r\n      startY2 += 1;\r\n    } else if (startXDotRepeatAmount2 === 1 && repeat === 0) {\r\n      repeat = 1;\r\n      startXDotRepeatAmount2 = startXDotRepeatAmount;\r\n      xDots.push(startX);\r\n      yDots.push(startY2);\r\n      startY2 = startY;\r\n      startX += 1;\r\n    } else if (startXDotRepeatAmount2 === 1 && repeat === 1) {\r\n      repeat = 0;\r\n      startXDotRepeatAmount -= 2;\r\n      startXDotRepeatAmount2 = startXDotRepeatAmount;\r\n      xDots.push(startX);\r\n      yDots.push(startY2);\r\n      startY += 2;\r\n      startY2 = startY;\r\n      startX += 1;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <svg width=\"600\" height=\"400\" className=\"svg\">\r\n      {displayEdges\r\n        ? lines.map((id, index) => {\r\n            let vertex1 = 0;\r\n            let vertex2 = 0;\r\n\r\n            vertex1 = xDots[index];\r\n            vertex2 = yDots[index];\r\n\r\n            return (\r\n              <line\r\n                key={id}\r\n                x1=\"200\"\r\n                y1=\"200\"\r\n                x2=\"400\"\r\n                y2=\"200\"\r\n                stroke=\"white\"\r\n                id={`line${id}`}\r\n                className=\"line\"\r\n                vertex1={vertex1}\r\n                vertex2={vertex2}\r\n              />\r\n            );\r\n          })\r\n        : null}\r\n\r\n      {displayVertices\r\n        ? verticesArray.map((item, index) => (\r\n            <circle\r\n              onClick={() => {\r\n                console.log(verticesArray[index], index);\r\n              }}\r\n              key={index}\r\n              cx=\"300\"\r\n              cy=\"200\"\r\n              r=\"2\"\r\n              fill=\"white\"\r\n              id={`circle${index}`}\r\n              className=\"circle\"\r\n              onContextMenu={(e) => {\r\n                e.preventDefault();\r\n                e.target.style.display = \"none\";\r\n              }}\r\n            />\r\n          ))\r\n        : null}\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Octahedron;\r\n","import React from \"react\";\r\n\r\nconst Cell24Analog = ({\r\n  verticesArray,\r\n  dimensionOfFigure,\r\n  displayEdges,\r\n  displayVertices,\r\n}) => {\r\n  let check1 = (array1, array2) => {\r\n    for (let i = 0; i < dimensionOfFigure; i++) {\r\n      if (\r\n        array1[i] - array2[i] !== 50 &&\r\n        array1[i] - array2[i] !== -50 &&\r\n        array2[i] - array1[i] !== 50 &&\r\n        array2[i] - array1[i] !== -50\r\n      ) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  let check2 = (array1, array2) => {\r\n    let degree100 = false;\r\n    let equal = 0;\r\n    for (let i = 0; i < dimensionOfFigure; i++) {\r\n      if (\r\n        array1[i] - array2[i] === 100 ||\r\n        array1[i] - array2[i] === -100 ||\r\n        array2[i] - array1[i] === 100 ||\r\n        array2[i] - array1[i] === -100\r\n      ) {\r\n        degree100 = true;\r\n      }\r\n\r\n      if (array1[i] === array2[i]) {\r\n        equal += 1;\r\n      }\r\n    }\r\n\r\n    return !!(degree100 && equal === array1.length - 1);\r\n  };\r\n\r\n  const linesSet = new Set();\r\n  for (let i = 0; i < verticesArray.length; i++) {\r\n    for (let j = 0; j < verticesArray.length; j++) {\r\n      if (\r\n        check1(verticesArray[i], verticesArray[j]) ||\r\n        check2(verticesArray[i], verticesArray[j])\r\n      ) {\r\n        linesSet.add([i, j].sort((a, b) => a - b).join(\",\"));\r\n      }\r\n    }\r\n  }\r\n\r\n  const linesArray = Array.from(linesSet).map((item) => item.split(\",\"));\r\n\r\n  const amountOfLines = linesArray.length;\r\n  let ids = 0;\r\n  const lines = [];\r\n\r\n  for (let i = 0; i < amountOfLines; i++) {\r\n    lines.push(ids);\r\n    ids += 1;\r\n  }\r\n\r\n  return (\r\n    <svg width=\"600\" height=\"400\" className=\"svg\">\r\n      {displayEdges &&\r\n        lines.map((id, index) => {\r\n          let vertex1 = 0;\r\n          let vertex2 = 0;\r\n\r\n          vertex1 = linesArray[index][0];\r\n          vertex2 = linesArray[index][1];\r\n\r\n          return (\r\n            <line\r\n              key={id}\r\n              x1=\"200\"\r\n              y1=\"200\"\r\n              x2=\"400\"\r\n              y2=\"200\"\r\n              stroke=\"white\"\r\n              id={`line${id}`}\r\n              className=\"line\"\r\n              vertex1={vertex1}\r\n              vertex2={vertex2}\r\n            />\r\n          );\r\n        })}\r\n\r\n      {displayVertices ?\r\n        verticesArray.map((item, index) => (\r\n          <circle\r\n            onClick={() => {\r\n              console.log(verticesArray[index], index);\r\n            }}\r\n            key={index}\r\n            cx=\"300\"\r\n            cy=\"200\"\r\n            r=\"2\"\r\n            fill=\"white\"\r\n            id={`circle${index}`}\r\n            className=\"circle\"\r\n            onContextMenu={(e) => {\r\n              e.preventDefault();\r\n              e.target.style.display = \"none\";\r\n            }}\r\n          />\r\n        )) : null}\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Cell24Analog;\r\n","import React from \"react\";\r\n\r\nconst Cell120Analog = ({\r\n  verticesArray,\r\n  dimensionOfFigure,\r\n  displayEdges,\r\n  displayVertices,\r\n}) => {\r\n  let linesArray = [];\r\n  const edgeLength =\r\n    +dimensionOfFigure === 3 ? 100 : Math.round((2 / 1.618 ** 2) * 50);\r\n\r\n  if (+dimensionOfFigure > 2) {\r\n    for (let i = 0; i < verticesArray.length; i++) {\r\n      for (let j = i; j < verticesArray.length; j++) {\r\n        if (i !== j) {\r\n          let length = 0;\r\n          for (let k = 0; k < dimensionOfFigure; k++) {\r\n            length += (verticesArray[j][k] - verticesArray[i][k]) ** 2;\r\n          }\r\n          length = Math.round(length ** (1 / 2));\r\n\r\n          if (length === edgeLength) {\r\n            linesArray.push([i, j]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  } else if (+dimensionOfFigure === 2) {\r\n    linesArray = [\r\n      [0, 1],\r\n      [1, 2],\r\n      [2, 3],\r\n      [3, 4],\r\n      [4, 0],\r\n    ];\r\n  }\r\n\r\n  const amountOfLines = linesArray.length;\r\n  let ids = 0;\r\n  const lines = [];\r\n\r\n  for (let i = 0; i < amountOfLines; i++) {\r\n    lines.push(ids);\r\n    ids += 1;\r\n  }\r\n\r\n  return (\r\n    <svg width=\"600\" height=\"400\" className=\"svg\">\r\n      {displayEdges &&\r\n        lines.map((id, index) => {\r\n          let vertex1 = 0;\r\n          let vertex2 = 0;\r\n\r\n          vertex1 = linesArray[index][0];\r\n          vertex2 = linesArray[index][1];\r\n          return (\r\n            <line\r\n              key={id}\r\n              x1=\"200\"\r\n              y1=\"200\"\r\n              x2=\"400\"\r\n              y2=\"200\"\r\n              stroke=\"white\"\r\n              id={`line${id}`}\r\n              className=\"line\"\r\n              vertex1={vertex1}\r\n              vertex2={vertex2}\r\n            />\r\n          );\r\n        })}\r\n\r\n      {displayVertices\r\n        ? verticesArray.map((item, index) => (\r\n            <circle\r\n              onClick={() => {\r\n                console.log(verticesArray[index], index);\r\n              }}\r\n              key={index}\r\n              cx=\"300\"\r\n              cy=\"200\"\r\n              r=\"2\"\r\n              fill=\"white\"\r\n              id={`circle${index}`}\r\n              className=\"circle\"\r\n              onContextMenu={(e) => {\r\n                e.preventDefault();\r\n                e.target.style.display = \"none\";\r\n              }}\r\n            />\r\n          ))\r\n        : null}\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Cell120Analog;\r\n","import React from \"react\";\r\n\r\nconst Cell600Analog = ({\r\n  verticesArray,\r\n  dimensionOfFigure,\r\n  displayEdges,\r\n  displayVertices,\r\n}) => {\r\n  let linesArray = [];\r\n  const edgeLength = Math.round((2 / 1.618) * 80);\r\n  const mySet = new Set();\r\n\r\n  for (let i = 0; i < verticesArray.length; i++) {\r\n    for (let j = i; j < verticesArray.length; j++) {\r\n      if (i !== j) {\r\n        let length = 0;\r\n        for (let k = 0; k < dimensionOfFigure; k++) {\r\n          length += (verticesArray[j][k] - verticesArray[i][k]) ** 2;\r\n        }\r\n        length = Math.round(length ** (1 / 2));\r\n        mySet.add(length);\r\n\r\n        if (+dimensionOfFigure > 2) {\r\n          if (length === edgeLength || length === edgeLength - 1) {\r\n            linesArray.push([i, j]);\r\n          }\r\n        } else if (+dimensionOfFigure === 2) {\r\n          if (length === 94 || length === 98) {\r\n            linesArray.push([i, j]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (+dimensionOfFigure === 2) {\r\n    linesArray = [\r\n      [0, 38],\r\n      [0, 42],\r\n      [1, 37],\r\n      [1, 41],\r\n      [2, 37],\r\n      [2, 42],\r\n      [3, 38],\r\n      [3, 41],\r\n      [4, 15],\r\n      [4, 16],\r\n      [5, 13],\r\n      [5, 14],\r\n      [6, 22],\r\n      [6, 24],\r\n      [7, 21],\r\n      [7, 23],\r\n      [8, 13],\r\n      [8, 14],\r\n      [8, 15],\r\n      [8, 16],\r\n      [8, 21],\r\n      [8, 22],\r\n      [8, 23],\r\n      [8, 24],\r\n      [9, 17],\r\n      [9, 35],\r\n      [10, 18],\r\n      [10, 35],\r\n      [11, 19],\r\n      [11, 36],\r\n      [12, 20],\r\n      [12, 36],\r\n      [13, 14],\r\n      [15, 16],\r\n      [17, 19],\r\n      [17, 43],\r\n      [18, 20],\r\n      [18, 44],\r\n      [19, 43],\r\n      [20, 44],\r\n      [21, 23],\r\n      [22, 24],\r\n      [25, 26],\r\n      [25, 29],\r\n      [25, 31],\r\n      [26, 29],\r\n      [26, 32],\r\n      [27, 28],\r\n      [27, 30],\r\n      [27, 33],\r\n      [28, 30],\r\n      [28, 34],\r\n      [29, 30],\r\n      [29, 39],\r\n      [29, 40],\r\n      [30, 39],\r\n      [30, 40],\r\n      [31, 39],\r\n      [32, 40],\r\n      [33, 39],\r\n      [34, 40],\r\n      [35, 43],\r\n      [35, 44],\r\n      [36, 43],\r\n      [36, 44],\r\n      [43, 44],\r\n    ];\r\n  }\r\n\r\n  const amountOfLines = linesArray.length;\r\n  let ids = 0;\r\n  const lines = [];\r\n\r\n  for (let i = 0; i < amountOfLines; i++) {\r\n    lines.push(ids);\r\n    ids += 1;\r\n  }\r\n\r\n\r\n  return (\r\n    <svg width=\"600\" height=\"400\" className=\"svg\">\r\n      {displayEdges &&\r\n        lines.map((id, index) => {\r\n          let vertex1 = 0;\r\n          let vertex2 = 0;\r\n\r\n          vertex1 = linesArray[index][0];\r\n          vertex2 = linesArray[index][1];\r\n          return (\r\n            <line\r\n              key={id}\r\n              x1=\"200\"\r\n              y1=\"200\"\r\n              x2=\"400\"\r\n              y2=\"200\"\r\n              stroke=\"white\"\r\n              id={`line${id}`}\r\n              className=\"line\"\r\n              vertex1={vertex1}\r\n              vertex2={vertex2}\r\n            />\r\n          );\r\n        })}\r\n\r\n      {displayVertices\r\n        ? verticesArray.map((item, index) => (\r\n            <circle\r\n              onClick={() => {\r\n                console.log(verticesArray[index], index);\r\n              }}\r\n              key={index}\r\n              cx=\"300\"\r\n              cy=\"200\"\r\n              r=\"2\"\r\n              fill=\"white\"\r\n              id={`circle${index}`}\r\n              className=\"circle\"\r\n              onContextMenu={(e) => {\r\n                e.preventDefault();\r\n                e.target.style.display = \"none\";\r\n              }}\r\n            />\r\n          ))\r\n        : null}\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Cell600Analog;\r\n","import React from \"react\";\r\n\r\nconst Icosahedron = ({\r\n  verticesArray,\r\n  dimensionOfFigure,\r\n  displayEdges,\r\n  displayVertices,\r\n}) => {\r\n  let linesArray = [];\r\n  const edgeLength = 2 * 70;\r\n  const test = new Set();\r\n  for (let i = 0; i < verticesArray.length; i++) {\r\n    for (let j = i; j < verticesArray.length; j++) {\r\n      if (i !== j) {\r\n        let length = 0;\r\n        for (let k = 0; k < dimensionOfFigure; k++) {\r\n          length += (verticesArray[j][k] - verticesArray[i][k]) ** 2;\r\n        }\r\n        length = Math.round(length ** (1 / 2));\r\n        test.add(length);\r\n        if (length === edgeLength) {\r\n          linesArray.push([i, j]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const amountOfLines = linesArray.length;\r\n  let ids = 0;\r\n  const lines = [];\r\n\r\n  for (let i = 0; i < amountOfLines; i++) {\r\n    lines.push(ids);\r\n    ids += 1;\r\n  }\r\n\r\n  return (\r\n    <svg width=\"600\" height=\"400\" className=\"svg\">\r\n      {displayEdges &&\r\n        lines.map((id, index) => {\r\n          let vertex1 = 0;\r\n          let vertex2 = 0;\r\n\r\n          vertex1 = linesArray[index][0];\r\n          vertex2 = linesArray[index][1];\r\n          return (\r\n            <line\r\n              key={id}\r\n              x1=\"200\"\r\n              y1=\"200\"\r\n              x2=\"400\"\r\n              y2=\"200\"\r\n              stroke=\"white\"\r\n              id={`line${id}`}\r\n              className=\"line\"\r\n              vertex1={vertex1}\r\n              vertex2={vertex2}\r\n            />\r\n          );\r\n        })}\r\n\r\n      {displayVertices\r\n        ? verticesArray.map((item, index) => (\r\n            <circle\r\n              onClick={() => {\r\n                console.log(verticesArray[index], index);\r\n              }}\r\n              key={index}\r\n              cx=\"300\"\r\n              cy=\"200\"\r\n              r=\"2\"\r\n              fill=\"white\"\r\n              id={`circle${index}`}\r\n              className=\"circle\"\r\n              onContextMenu={(e) => {\r\n                e.preventDefault();\r\n                e.target.style.display = \"none\";\r\n              }}\r\n            />\r\n          ))\r\n        : null}\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Icosahedron;\r\n","import React from \"react\";\r\n\r\nconst TruncatedTetrahedron = ({\r\n  verticesArray,\r\n  dimensionOfFigure,\r\n  displayEdges,\r\n  displayVertices,\r\n}) => {\r\n  let linesArray = [];\r\n  const edgeLength = 2 * 60;\r\n  const test = new Set();\r\n  for (let i = 0; i < verticesArray.length; i++) {\r\n    for (let j = i; j < verticesArray.length; j++) {\r\n      if (i !== j) {\r\n        let length = 0;\r\n        for (let k = 0; k < dimensionOfFigure; k++) {\r\n          length += (verticesArray[j][k] - verticesArray[i][k]) ** 2;\r\n        }\r\n        length = Math.round(length ** (1 / 2));\r\n        test.add(length);\r\n        if (length === edgeLength) {\r\n          linesArray.push([i, j]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const amountOfLines = linesArray.length;\r\n  let ids = 0;\r\n  const lines = [];\r\n\r\n  for (let i = 0; i < amountOfLines; i++) {\r\n    lines.push(ids);\r\n    ids += 1;\r\n  }\r\n\r\n  return (\r\n    <svg width=\"600\" height=\"400\" className=\"svg\">\r\n      {displayEdges &&\r\n        lines.map((id, index) => {\r\n          let vertex1 = 0;\r\n          let vertex2 = 0;\r\n\r\n          vertex1 = linesArray[index][0];\r\n          vertex2 = linesArray[index][1];\r\n          return (\r\n            <line\r\n              key={id}\r\n              x1=\"200\"\r\n              y1=\"200\"\r\n              x2=\"400\"\r\n              y2=\"200\"\r\n              stroke=\"white\"\r\n              id={`line${id}`}\r\n              className=\"line\"\r\n              vertex1={vertex1}\r\n              vertex2={vertex2}\r\n            />\r\n          );\r\n        })}\r\n\r\n      {displayVertices\r\n        ? verticesArray.map((item, index) => (\r\n            <circle\r\n              onClick={() => {\r\n                console.log(verticesArray[index], index);\r\n              }}\r\n              key={index}\r\n              cx=\"300\"\r\n              cy=\"200\"\r\n              r=\"2\"\r\n              fill=\"white\"\r\n              id={`circle${index}`}\r\n              className=\"circle\"\r\n              onContextMenu={(e) => {\r\n                e.preventDefault();\r\n                e.target.style.display = \"none\";\r\n              }}\r\n            />\r\n          ))\r\n        : null}\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default TruncatedTetrahedron;\r\n","import React from \"react\";\r\n\r\nconst Cuboctahedron = ({\r\n  verticesArray,\r\n  dimensionOfFigure,\r\n  displayEdges,\r\n  displayVertices,\r\n}) => {\r\n  let linesArray = [];\r\n  const edgeLength = 2 * 60;\r\n  const test = new Set();\r\n  for (let i = 0; i < verticesArray.length; i++) {\r\n    for (let j = i; j < verticesArray.length; j++) {\r\n      if (i !== j) {\r\n        let length = 0;\r\n        for (let k = 0; k < dimensionOfFigure; k++) {\r\n          length += (verticesArray[j][k] - verticesArray[i][k]) ** 2;\r\n        }\r\n        length = Math.round(length ** (1 / 2));\r\n        test.add(length);\r\n        if (length === edgeLength) {\r\n          linesArray.push([i, j]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const amountOfLines = linesArray.length;\r\n  let ids = 0;\r\n  const lines = [];\r\n\r\n  for (let i = 0; i < amountOfLines; i++) {\r\n    lines.push(ids);\r\n    ids += 1;\r\n  }\r\n\r\n  return (\r\n    <svg width=\"600\" height=\"400\" className=\"svg\">\r\n      {displayEdges &&\r\n        lines.map((id, index) => {\r\n          let vertex1 = 0;\r\n          let vertex2 = 0;\r\n\r\n          vertex1 = linesArray[index][0];\r\n          vertex2 = linesArray[index][1];\r\n          return (\r\n            <line\r\n              key={id}\r\n              x1=\"200\"\r\n              y1=\"200\"\r\n              x2=\"400\"\r\n              y2=\"200\"\r\n              stroke=\"white\"\r\n              id={`line${id}`}\r\n              className=\"line\"\r\n              vertex1={vertex1}\r\n              vertex2={vertex2}\r\n            />\r\n          );\r\n        })}\r\n\r\n      {displayVertices\r\n        ? verticesArray.map((item, index) => (\r\n            <circle\r\n              onClick={() => {\r\n                console.log(verticesArray[index], index);\r\n              }}\r\n              key={index}\r\n              cx=\"300\"\r\n              cy=\"200\"\r\n              r=\"2\"\r\n              fill=\"white\"\r\n              id={`circle${index}`}\r\n              className=\"circle\"\r\n              onContextMenu={(e) => {\r\n                e.preventDefault();\r\n                e.target.style.display = \"none\";\r\n              }}\r\n            />\r\n          ))\r\n        : null}\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Cuboctahedron;\r\n","import generateFigureOrthography from \"./generateFigureOrthography\";\r\nimport React, { useEffect } from \"react\";\r\nimport generateFigure from \"./generateFigure\";\r\nimport { verticesArray } from \"./vertices\";\r\nimport generateMatrixes from \"./generateMatrixes\";\r\nimport Cube from \"./figures/Cube\";\r\nimport Symplex from \"./figures/Symplex\";\r\nimport Octahedron from \"./figures/Octahedron\";\r\nimport Cell24Analog from \"./figures/Cell24Analog\";\r\nimport Cell120Analog from \"./figures/Cell120Analog\";\r\nimport Cell600Analog from \"./figures/Cell600Analog\";\r\nimport Icosahedron from \"./figures/Icosahedron\";\r\nimport TruncatedTetrahedron from \"./figures/TruncatedTetrahedron\";\r\nimport Cuboctahedron from \"./figures/Cuboctahedron\";\r\n\r\nexport let canRotate = false;\r\nexport let mouseX = 0;\r\nexport let mouseY = 0;\r\nexport let prevX = 0;\r\nexport let prevY = 0;\r\n\r\nconst Svg = ({\r\n  dimension,\r\n  anglesArray,\r\n  figure,\r\n  dimensionOfFigure,\r\n  transposeRotation,\r\n  orthography,\r\n  displayEdges,\r\n  displayVertices,\r\n}) => {\r\n  useEffect(() => {\r\n    if (dimension > 1) {\r\n      const matrix = generateMatrixes(\r\n        dimension,\r\n        anglesArray,\r\n        transposeRotation\r\n      );\r\n      if (orthography) {\r\n        generateFigureOrthography(\r\n          verticesArray,\r\n          matrix,\r\n          dimensionOfFigure\r\n        );\r\n      } else {\r\n        generateFigure(verticesArray, matrix, dimension, dimensionOfFigure);\r\n      }\r\n    }\r\n  });\r\n\r\n  if (+dimensionOfFigure === 0) {\r\n    return (\r\n      <svg width=\"600\" height=\"400\" className=\"svg\">\r\n        <circle cx=\"300\" cy=\"200\" r=\"3\" fill=\"white\" />\r\n      </svg>\r\n    );\r\n  }\r\n\r\n  if (+dimensionOfFigure === 1) {\r\n    return (\r\n      <svg width=\"600\" height=\"400\" className=\"svg\">\r\n        <line\r\n          id=\"line1\"\r\n          x1=\"200\"\r\n          y1=\"200\"\r\n          x2=\"400\"\r\n          y2=\"200\"\r\n          stroke=\"white\"\r\n          className=\"line\"\r\n        />\r\n      </svg>\r\n    );\r\n  }\r\n\r\n  if (figure === \"cube\") {\r\n    return (\r\n      <Cube\r\n        dimension={dimension}\r\n        displayEdges={displayEdges}\r\n        displayVertices={displayVertices}\r\n        verticesArray={verticesArray}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (figure === \"symplex\") {\r\n    return (\r\n      <Symplex\r\n        dimensionOfFigure={dimensionOfFigure}\r\n        displayEdges={displayEdges}\r\n        displayVertices={displayVertices}\r\n        verticesArray={verticesArray}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (figure === \"octahedron\") {\r\n    return (\r\n      <Octahedron\r\n        dimensionOfFigure={dimensionOfFigure}\r\n        displayEdges={displayEdges}\r\n        displayVertices={displayVertices}\r\n        verticesArray={verticesArray}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (figure === \"24-cell-analog\") {\r\n    return (\r\n      <Cell24Analog\r\n        verticesArray={verticesArray}\r\n        dimensionOfFigure={dimensionOfFigure}\r\n        displayEdges={displayEdges}\r\n        displayVertices={displayVertices}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (figure === \"120-cell-analog\") {\r\n    return (\r\n      <Cell120Analog\r\n        verticesArray={verticesArray}\r\n        dimensionOfFigure={dimensionOfFigure}\r\n        displayEdges={displayEdges}\r\n        displayVertices={displayVertices}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (figure === \"600-cell-analog\") {\r\n    return (\r\n      <Cell600Analog\r\n        verticesArray={verticesArray}\r\n        dimensionOfFigure={dimensionOfFigure}\r\n        displayEdges={displayEdges}\r\n        displayVertices={displayVertices}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (figure === \"3D Icosahedron\") {\r\n    return (\r\n      <Icosahedron\r\n        verticesArray={verticesArray}\r\n        dimensionOfFigure={dimensionOfFigure}\r\n        displayEdges={displayEdges}\r\n        displayVertices={displayVertices}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (figure === \"3D Truncated Tetrahedron\") {\r\n    return (\r\n      <TruncatedTetrahedron\r\n        verticesArray={verticesArray}\r\n        dimensionOfFigure={dimensionOfFigure}\r\n        displayEdges={displayEdges}\r\n        displayVertices={displayVertices}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (figure === \"3D Cuboctahedron\") {\r\n    return (\r\n      <Cuboctahedron\r\n        verticesArray={verticesArray}\r\n        dimensionOfFigure={dimensionOfFigure}\r\n        displayEdges={displayEdges}\r\n        displayVertices={displayVertices}\r\n      />\r\n    );\r\n  }\r\n};\r\n\r\nexport default Svg;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport CreateCheckboxes from \"./CreateCheckboxes\";\r\nimport Svg from \"./Svg\";\r\nimport generateFigure from \"./generateFigure\";\r\nimport generateFigureOrthography from \"./generateFigureOrthography\";\r\nimport { verticesArray } from \"./vertices\";\r\nimport generateMatrixes from \"./generateMatrixes\";\r\nimport vertices from \"./vertices\";\r\nexport let useKeyboard = false;\r\n\r\nconst specific3D = [\"3D Icosahedron\", \"3D Truncated Tetrahedron\", \"3D Cuboctahedron\"];\r\n\r\nfunction App() {\r\n  const [numberOfDimensions, setNumberOfDimensions] = useState(2);\r\n  const [amount, setAmount] = useState(1);\r\n  const [dimensionOfFigure, setDimensionOfFigure] = useState(2);\r\n  const [anglesArray, setAnglesArray] = useState([0]);\r\n  const [activeRotations, setActiveRotations] = useState([]);\r\n  const [figure, setFigure] = useState(\"cube\");\r\n  const [transposeRotation, setTransposeRotation] = useState(false);\r\n  const [orthography, setOrthography] = useState(false);\r\n  const [displayVertices, setDisplayVertices] = useState(false);\r\n  const [displayEdges, setDisplayEdges] = useState(true);\r\n  const [displaySpecific3D, setDisplaySpecific3D] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (+dimensionOfFigure === 2 && specific3D.includes(figure)) {\r\n      setFigure(\"cube\")\r\n    }\r\n  }, [dimensionOfFigure, figure]);\r\n\r\n  let number = numberOfDimensions;\r\n  const changeNumber = (e) => {\r\n    number = e.target.value;\r\n  };\r\n  const optionList = [];\r\n\r\n  for (let i = 0; i < numberOfDimensions; i++) {\r\n    optionList.push(i + 1);\r\n  }\r\n\r\n  const generateDimensions = () => {\r\n    if (isNaN(number) || +number < 0 || Math.trunc(+number) - +number !== 0) {\r\n      alert(\"input positive integer number\");\r\n    } else {\r\n      const checkboxes = Array.from(document.querySelectorAll(\".checkbox\"));\r\n\r\n      for (let i in checkboxes) {\r\n        checkboxes[i].checked = false;\r\n      }\r\n\r\n      setActiveRotations([]);\r\n      setNumberOfDimensions(number);\r\n      setAmount((number * (number - 1)) / 2);\r\n      setDimensionOfFigure(number);\r\n      document.querySelector(\".select\").value = `select dimension of ${figure}`;\r\n    }\r\n  };\r\n\r\n  const resetAngles = () => {\r\n    const copyAnglesArray = [...anglesArray].map((angle) => 0);\r\n\r\n    setAnglesArray(copyAnglesArray);\r\n    setActiveRotations([]);\r\n    const matrix = generateMatrixes(\r\n      numberOfDimensions,\r\n      copyAnglesArray,\r\n      transposeRotation\r\n    );\r\n    if (orthography) {\r\n      generateFigureOrthography(\r\n        verticesArray,\r\n        matrix,\r\n        dimensionOfFigure\r\n      );\r\n    } else {\r\n      generateFigure(verticesArray, matrix, numberOfDimensions, dimensionOfFigure);\r\n    }\r\n  };\r\n\r\n  const dimensionOfCube = (e) => {\r\n    if (!isNaN(e.target.value)) {\r\n      vertices(numberOfDimensions, +e.target.value, figure);\r\n      setDimensionOfFigure(+e.target.value);\r\n    }\r\n  };\r\n\r\n  const useKeyboardChange = () => {\r\n    if (useKeyboard) {\r\n      useKeyboard = false;\r\n    } else {\r\n      useKeyboard = true;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"using__mouse-wrap\">\r\n        <div className=\"wrapper\">\r\n          <label className=\"using__mouse\">\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"checkbox\"\r\n              onChange={useKeyboardChange}\r\n            />\r\n            <p>rotate by checking checkboxes and using w/s keys</p>\r\n          </label>\r\n\r\n          <label className=\"using__mouse\">\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"checkbox 2\"\r\n              onChange={() => {\r\n                setActiveRotations([]);\r\n                setTransposeRotation(!transposeRotation);\r\n              }}\r\n              checked={transposeRotation}\r\n            />\r\n            <p>transpose rotation</p>\r\n          </label>\r\n          <label className=\"using__mouse\">\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"checkbox 3\"\r\n              onChange={() => {\r\n                setOrthography(!orthography);\r\n              }}\r\n              checked={orthography}\r\n            />\r\n            <p>orthography</p>\r\n          </label>\r\n        </div>\r\n        <div className=\"wrapper\">\r\n          <label className=\"using__mouse\">\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"checkbox 4\"\r\n              onChange={() => {\r\n                setDisplayVertices(!displayVertices);\r\n              }}\r\n              checked={displayVertices}\r\n            />\r\n            <p>display vertices</p>\r\n          </label>\r\n          <label className=\"using__mouse\">\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"checkbox 5\"\r\n              onChange={() => {\r\n                setDisplayEdges(!displayEdges);\r\n              }}\r\n              checked={displayEdges}\r\n            />\r\n            <p>display edges</p>\r\n          </label>\r\n        </div>\r\n\r\n        <div className=\"wrapper\">\r\n          <label className=\"using__mouse\">\r\n            {numberOfDimensions}D\r\n            <select\r\n              onChange={(e) => {\r\n                vertices(numberOfDimensions, dimensionOfFigure, e.target.value);\r\n                setFigure(e.target.value);\r\n              }}\r\n              className=\"select\"\r\n              value={figure}\r\n            >\r\n              <option>symplex</option>\r\n              <option>octahedron</option>\r\n              <option>cube</option>\r\n              <option>24-cell-analog</option>\r\n              <option>120-cell-analog</option>\r\n              <option>600-cell-analog</option>\r\n              {displaySpecific3D && +numberOfDimensions >= 3\r\n                ? specific3D.map((figure) => (\r\n                    <option key={figure}>{figure}</option>\r\n                  ))\r\n                : null}\r\n            </select>\r\n          </label>\r\n\r\n          {numberOfDimensions >= 3 ? (\r\n            <label className=\"using__mouse\">\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"specific 3D\"\r\n                onChange={() => {\r\n                  setDisplaySpecific3D(!displaySpecific3D);\r\n                }}\r\n                checked={displaySpecific3D}\r\n              />\r\n              <p>display specific 3D figures</p>\r\n            </label>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n      <div className=\"App\">\r\n        <button type=\"button\" className=\"reset\" onClick={resetAngles}>\r\n          Reset angles\r\n        </button>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"input number of dimensions\"\r\n          className=\"input_dimension\"\r\n          onChange={changeNumber}\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          className=\"generate-button\"\r\n          onClick={generateDimensions}\r\n        >\r\n          Generate dimensions\r\n        </button>\r\n\r\n        <select onChange={dimensionOfCube} className=\"select\">\r\n          <option>select dimension of {figure}</option>\r\n          {optionList.map((number) => {\r\n            return (\r\n              <option key={number} className=\"option\">\r\n                {number}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n\r\n        <CreateCheckboxes\r\n          dimensions={amount}\r\n          number={numberOfDimensions}\r\n          DimensionOfFigure={dimensionOfFigure}\r\n          anglesArray={anglesArray}\r\n          setAnglesArray={setAnglesArray}\r\n          activeRotations={activeRotations}\r\n          setActiveRotations={setActiveRotations}\r\n          figure={figure}\r\n          transposeRotation={transposeRotation}\r\n          orthography={orthography}\r\n          dimensionOfFigure={dimensionOfFigure}\r\n        />\r\n        <Svg\r\n          dimension={numberOfDimensions}\r\n          anglesArray={anglesArray}\r\n          figure={figure}\r\n          dimensionOfFigure={dimensionOfFigure}\r\n          transposeRotation={transposeRotation}\r\n          orthography={orthography}\r\n          displayEdges={displayEdges}\r\n          displayVertices={displayVertices}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}