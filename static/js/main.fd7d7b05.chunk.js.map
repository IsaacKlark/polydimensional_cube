{"version":3,"sources":["angles.js","initMatrix.js","sylvester.src.js","generateMatrixes.js","generateCube.js","vertices.js","CreateCheckboxes.js","Svg.js","App.js","serviceWorker.js","index.js"],"names":["anglesArray","reset","map","angle","angles","arrayLength","arrayOfAngles","i","push","initMatrix","dimension","cos1","cos2","sin1","sin2","matrix","row","ones","multiplyByMinusOne","j","Math","cos","sin","Sylvester","Vector","Matrix","Line","Plane","prototype","e","this","elements","length","dimensions","modulus","sqrt","dot","eql","vector","n","V","abs","dup","create","fn","each","x","k","toUnitVector","r","angleFrom","mod1","mod2","theta","acos","isParallelTo","isAntiparallelTo","PI","isPerpendicularTo","add","subtract","multiply","product","cross","B","A","max","m","indexOf","index","toDiagonalMatrix","Diagonal","round","snapTo","y","distanceFrom","obj","anchor","part","sum","liesOn","line","contains","liesIn","plane","rotate","t","R","z","Rotation","direction","C","pointClosestTo","reflectionIn","P","slice","Q","to3D","inspect","join","setElements","els","Random","random","Zero","col","rows","cols","M","nj","ni","ki","kj","isSameSizeAs","canMultiplyFromLeft","returnVector","nc","c","minor","a","b","d","transpose","isSquare","diagonal","toRightTriangular","np","p","kp","multiplier","toUpperTriangular","determinant","det","isSingular","trace","tr","rank","rk","augment","T","inverse","divisor","new_element","I","inverse_elements","inv","matrix_rows","axis","mod","s","RotationX","RotationY","RotationZ","translate","normal","N","D","PA1","PA2","PA3","modPA","cosTheta","point","dist","intersects","intersectionWith","X","Y","X1","X2","X3","Y1","Y2","Y3","PsubQ1","PsubQ2","PsubQ3","YdotY","XdotY","E","D1","D2","D3","E1","E2","E3","C1","C2","C3","A1","A2","A3","newA","AD1","AD2","AD3","newD","setVectors","Z","O","solver","intersection","N1","N2","N3","AN1","AN2","AN3","newN","v1","v2","v11","v12","v13","v21","v22","v23","XY","YZ","ZX","YX","ZY","XZ","generateMatrixes","anglesArr","cosinus1","cosinus2","sinus1","sinus2","variants","matrixes","matrixMultiply","generateCube","vertices","vertisecOnSvg","vertex","perspective","coordinates","setCoordinatesToLines","Array","from","document","querySelectorAll","index1","getAttribute","index2","setAttribute","verticesArray","DimensionOfCube","verticesAmount","trunc","CreateCheckboxes","number","numbersOfCehckboxes","subDimensionStart","subDimensionEnd","reverse","chengeAngle","target","targ","interval","setInterval","checked","clearInterval","className","field","key","type","name","onChange","Svg","useEffect","width","height","cx","cy","fill","id","x1","y1","x2","y2","stroke","amountOfLines","ids","lines","cubesRepeats","square","vertex1","vertex2","doubleRepeats","twoLength","App","useState","numberOfDimensions","setNumberOfDimensions","amount","setAmount","cubeWithDimension","setCubeWithDimension","optionList","onClick","placeholder","value","isNaN","alert","checkboxes","querySelector","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fd7d7b05.chunk.js","sourcesContent":["export let anglesArray = [0];\r\n\r\nexport const reset = () => {\r\n    anglesArray = anglesArray.map(angle => {\r\n\r\n    angle = 0;\r\n\r\n    return angle;\r\n    })\r\n};\r\n\r\nconst angles = (arrayLength) => {\r\n    const arrayOfAngles = [];\r\n\r\n    for (let i = 0; i < arrayLength; i++) {\r\n            arrayOfAngles.push(0);\r\n    }\r\n\r\n    anglesArray = arrayOfAngles;\r\n}\r\n\r\nexport default angles;","const initMatrix = (\r\n    dimension, \r\n    cos1, \r\n    cos2, \r\n    sin1, \r\n    sin2, \r\n    angle\r\n    ) => {\r\n    const matrix = [];\r\n    let row = [];\r\n    let ones = 0;\r\n    let multiplyByMinusOne = false;\r\n    \r\n    for (let i = 0; i < dimension; i++) {\r\n        for (let j = 0; j < dimension; j++) {\r\n            if ((j === cos1 && i === cos1)\r\n            || (j === cos2 && i === cos2)) {\r\n                row.push(Math.cos(+angle));\r\n            } else if ((j === sin1 && i === sin2)\r\n            || (j === sin2 && i === sin1)) {\r\n                !multiplyByMinusOne \r\n                    ? row.push(Math.sin(+angle)) \r\n                    : row.push(Math.sin(+angle) * -1);\r\n            multiplyByMinusOne = true;\r\n            } else if (j === ones) {\r\n                row.push(1);\r\n            } else {\r\n                row.push(0);\r\n            }\r\n        }\r\n\r\n        matrix.push(row);\r\n        row = [];\r\n        ones++;\r\n    }\r\n\r\n    return matrix;\r\n}\r\n\r\nexport default initMatrix;","// === Sylvester ===\r\n// Vector and Matrix mathematics modules for JavaScript\r\n// Copyright (c) 2007 James Coglan\r\n// \r\n// Permission is hereby granted, free of charge, to any person obtaining\r\n// a copy of this software and associated documentation files (the \"Software\"),\r\n// to deal in the Software without restriction, including without limitation\r\n// the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n// and/or sell copies of the Software, and to permit persons to whom the\r\n// Software is furnished to do so, subject to the following conditions:\r\n// \r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n// \r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\r\n// THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n// DEALINGS IN THE SOFTWARE.\r\n\r\nvar Sylvester = {\r\n  version: '0.1.3',\r\n  precision: 1e-6\r\n};\r\n\r\nfunction Vector() {}\r\nVector.prototype = {\r\n\r\n  // Returns element i of the vector\r\n  e: function(i) {\r\n    return (i < 1 || i > this.elements.length) ? null : this.elements[i-1];\r\n  },\r\n\r\n  // Returns the number of elements the vector has\r\n  dimensions: function() {\r\n    return this.elements.length;\r\n  },\r\n\r\n  // Returns the modulus ('length') of the vector\r\n  modulus: function() {\r\n    return Math.sqrt(this.dot(this));\r\n  },\r\n\r\n  // Returns true iff the vector is equal to the argument\r\n  eql: function(vector) {\r\n    var n = this.elements.length;\r\n    var V = vector.elements || vector;\r\n    if (n !== V.length) { return false; }\r\n    do {\r\n      if (Math.abs(this.elements[n-1] - V[n-1]) > Sylvester.precision) { return false; }\r\n    } while (--n);\r\n    return true;\r\n  },\r\n\r\n  // Returns a copy of the vector\r\n  dup: function() {\r\n    return Vector.create(this.elements);\r\n  },\r\n\r\n  // Maps the vector to another vector according to the given function\r\n  map: function(fn) {\r\n    var elements = [];\r\n    this.each(function(x, i) {\r\n      elements.push(fn(x, i));\r\n    });\r\n    return Vector.create(elements);\r\n  },\r\n  \r\n  // Calls the iterator for each element of the vector in turn\r\n  each: function(fn) {\r\n    var n = this.elements.length, k = n, i;\r\n    do { i = k - n;\r\n      fn(this.elements[i], i+1);\r\n    } while (--n);\r\n  },\r\n\r\n  // Returns a new vector created by normalizing the receiver\r\n  toUnitVector: function() {\r\n    var r = this.modulus();\r\n    if (r === 0) { return this.dup(); }\r\n    return this.map(function(x) { return x/r; });\r\n  },\r\n\r\n  // Returns the angle between the vector and the argument (also a vector)\r\n  angleFrom: function(vector) {\r\n    var V = vector.elements || vector;\r\n    var n = this.elements.length;\r\n    if (n !== V.length) { return null; }\r\n    var dot = 0, mod1 = 0, mod2 = 0;\r\n    // Work things out in parallel to save time\r\n    this.each(function(x, i) {\r\n      dot += x * V[i-1];\r\n      mod1 += x * x;\r\n      mod2 += V[i-1] * V[i-1];\r\n    });\r\n    mod1 = Math.sqrt(mod1); mod2 = Math.sqrt(mod2);\r\n    if (mod1*mod2 === 0) { return null; }\r\n    var theta = dot / (mod1*mod2);\r\n    if (theta < -1) { theta = -1; }\r\n    if (theta > 1) { theta = 1; }\r\n    return Math.acos(theta);\r\n  },\r\n\r\n  // Returns true iff the vector is parallel to the argument\r\n  isParallelTo: function(vector) {\r\n    var angle = this.angleFrom(vector);\r\n    return (angle === null) ? null : (angle <= Sylvester.precision);\r\n  },\r\n\r\n  // Returns true iff the vector is antiparallel to the argument\r\n  isAntiparallelTo: function(vector) {\r\n    var angle = this.angleFrom(vector);\r\n    return (angle === null) ? null : (Math.abs(angle - Math.PI) <= Sylvester.precision);\r\n  },\r\n\r\n  // Returns true iff the vector is perpendicular to the argument\r\n  isPerpendicularTo: function(vector) {\r\n    var dot = this.dot(vector);\r\n    return (dot === null) ? null : (Math.abs(dot) <= Sylvester.precision);\r\n  },\r\n\r\n  // Returns the result of adding the argument to the vector\r\n  add: function(vector) {\r\n    var V = vector.elements || vector;\r\n    if (this.elements.length !== V.length) { return null; }\r\n    return this.map(function(x, i) { return x + V[i-1]; });\r\n  },\r\n\r\n  // Returns the result of subtracting the argument from the vector\r\n  subtract: function(vector) {\r\n    var V = vector.elements || vector;\r\n    if (this.elements.length !== V.length) { return null; }\r\n    return this.map(function(x, i) { return x - V[i-1]; });\r\n  },\r\n\r\n  // Returns the result of multiplying the elements of the vector by the argument\r\n  multiply: function(k) {\r\n    return this.map(function(x) { return x*k; });\r\n  },\r\n\r\n  x: function(k) { return this.multiply(k); },\r\n\r\n  // Returns the scalar product of the vector with the argument\r\n  // Both vectors must have equal dimensionality\r\n  dot: function(vector) {\r\n    var V = vector.elements || vector;\r\n    var product = 0, n = this.elements.length;\r\n    if (n !== V.length) { return null; }\r\n    do { product += this.elements[n-1] * V[n-1]; } while (--n);\r\n    return product;\r\n  },\r\n\r\n  // Returns the vector product of the vector with the argument\r\n  // Both vectors must have dimensionality 3\r\n  cross: function(vector) {\r\n    var B = vector.elements || vector;\r\n    if (this.elements.length !== 3 || B.length !== 3) { return null; }\r\n    var A = this.elements;\r\n    return Vector.create([\r\n      (A[1] * B[2]) - (A[2] * B[1]),\r\n      (A[2] * B[0]) - (A[0] * B[2]),\r\n      (A[0] * B[1]) - (A[1] * B[0])\r\n    ]);\r\n  },\r\n\r\n  // Returns the (absolute) largest element of the vector\r\n  max: function() {\r\n    var m = 0, n = this.elements.length, k = n, i;\r\n    do { i = k - n;\r\n      if (Math.abs(this.elements[i]) > Math.abs(m)) { m = this.elements[i]; }\r\n    } while (--n);\r\n    return m;\r\n  },\r\n\r\n  // Returns the index of the first match found\r\n  indexOf: function(x) {\r\n    var index = null, n = this.elements.length, k = n, i;\r\n    do { i = k - n;\r\n      if (index === null && this.elements[i] === x) {\r\n        index = i + 1;\r\n      }\r\n    } while (--n);\r\n    return index;\r\n  },\r\n\r\n  // Returns a diagonal matrix with the vector's elements as its diagonal elements\r\n  toDiagonalMatrix: function() {\r\n    return Matrix.Diagonal(this.elements);\r\n  },\r\n\r\n  // Returns the result of rounding the elements of the vector\r\n  round: function() {\r\n    return this.map(function(x) { return Math.round(x); });\r\n  },\r\n\r\n  // Returns a copy of the vector with elements set to the given value if they\r\n  // differ from it by less than Sylvester.precision\r\n  snapTo: function(x) {\r\n    return this.map(function(y) {\r\n      return (Math.abs(y - x) <= Sylvester.precision) ? x : y;\r\n    });\r\n  },\r\n\r\n  // Returns the vector's distance from the argument, when considered as a point in space\r\n  distanceFrom: function(obj) {\r\n    if (obj.anchor) { return obj.distanceFrom(this); }\r\n    var V = obj.elements || obj;\r\n    if (V.length !== this.elements.length) { return null; }\r\n    var sum = 0, part;\r\n    this.each(function(x, i) {\r\n      part = x - V[i-1];\r\n      sum += part * part;\r\n    });\r\n    return Math.sqrt(sum);\r\n  },\r\n\r\n  // Returns true if the vector is point on the given line\r\n  liesOn: function(line) {\r\n    return line.contains(this);\r\n  },\r\n\r\n  // Return true iff the vector is a point in the given plane\r\n  liesIn: function(plane) {\r\n    return plane.contains(this);\r\n  },\r\n\r\n  // Rotates the vector about the given object. The object should be a \r\n  // point if the vector is 2D, and a line if it is 3D. Be careful with line directions!\r\n  rotate: function(t, obj) {\r\n    var V, R, x, y, z;\r\n    switch (this.elements.length) {\r\n      case 2:\r\n        V = obj.elements || obj;\r\n        if (V.length !== 2) { return null; }\r\n        R = Matrix.Rotation(t).elements;\r\n        x = this.elements[0] - V[0];\r\n        y = this.elements[1] - V[1];\r\n        return Vector.create([\r\n          V[0] + R[0][0] * x + R[0][1] * y,\r\n          V[1] + R[1][0] * x + R[1][1] * y\r\n        ]);\r\n      case 3:\r\n        if (!obj.direction) { return null; }\r\n        var C = obj.pointClosestTo(this).elements;\r\n        R = Matrix.Rotation(t, obj.direction).elements;\r\n        x = this.elements[0] - C[0];\r\n        y = this.elements[1] - C[1];\r\n        z = this.elements[2] - C[2];\r\n        return Vector.create([\r\n          C[0] + R[0][0] * x + R[0][1] * y + R[0][2] * z,\r\n          C[1] + R[1][0] * x + R[1][1] * y + R[1][2] * z,\r\n          C[2] + R[2][0] * x + R[2][1] * y + R[2][2] * z\r\n        ]);\r\n      default:\r\n        return null;\r\n    }\r\n  },\r\n\r\n  // Returns the result of reflecting the point in the given point, line or plane\r\n  reflectionIn: function(obj) {\r\n    if (obj.anchor) {\r\n      // obj is a plane or line\r\n      var P = this.elements.slice();\r\n      var C = obj.pointClosestTo(P).elements;\r\n      return Vector.create([C[0] + (C[0] - P[0]), C[1] + (C[1] - P[1]), C[2] + (C[2] - (P[2] || 0))]);\r\n    } else {\r\n      // obj is a point\r\n      var Q = obj.elements || obj;\r\n      if (this.elements.length !== Q.length) { return null; }\r\n      return this.map(function(x, i) { return Q[i-1] + (Q[i-1] - x); });\r\n    }\r\n  },\r\n\r\n  // Utility to make sure vectors are 3D. If they are 2D, a zero z-component is added\r\n  to3D: function() {\r\n    var V = this.dup();\r\n    switch (V.elements.length) {\r\n      case 3: break;\r\n      case 2: V.elements.push(0); break;\r\n      default: return null;\r\n    }\r\n    return V;\r\n  },\r\n\r\n  // Returns a string representation of the vector\r\n  inspect: function() {\r\n    return '[' + this.elements.join(', ') + ']';\r\n  },\r\n\r\n  // Set vector's elements from an array\r\n  setElements: function(els) {\r\n    this.elements = (els.elements || els).slice();\r\n    return this;\r\n  }\r\n};\r\n  \r\n// Constructor function\r\nVector.create = function(elements) {\r\n  var V = new Vector();\r\n  return V.setElements(elements);\r\n};\r\n\r\n// i, j, k unit vectors\r\nVector.i = Vector.create([1,0,0]);\r\nVector.j = Vector.create([0,1,0]);\r\nVector.k = Vector.create([0,0,1]);\r\n\r\n// Random vector of size n\r\nVector.Random = function(n) {\r\n  var elements = [];\r\n  do { elements.push(Math.random());\r\n  } while (--n);\r\n  return Vector.create(elements);\r\n};\r\n\r\n// Vector filled with zeros\r\nVector.Zero = function(n) {\r\n  var elements = [];\r\n  do { elements.push(0);\r\n  } while (--n);\r\n  return Vector.create(elements);\r\n};\r\n\r\n\r\n\r\nexport function Matrix() {}\r\nMatrix.prototype = {\r\n\r\n  // Returns element (i,j) of the matrix\r\n  e: function(i,j) {\r\n    if (i < 1 || i > this.elements.length || j < 1 || j > this.elements[0].length) { return null; }\r\n    return this.elements[i-1][j-1];\r\n  },\r\n\r\n  // Returns row k of the matrix as a vector\r\n  row: function(i) {\r\n    if (i > this.elements.length) { return null; }\r\n    return Vector.create(this.elements[i-1]);\r\n  },\r\n\r\n  // Returns column k of the matrix as a vector\r\n  col: function(j) {\r\n    if (j > this.elements[0].length) { return null; }\r\n    var col = [], n = this.elements.length, k = n, i;\r\n    do { i = k - n;\r\n      col.push(this.elements[i][j-1]);\r\n    } while (--n);\r\n    return Vector.create(col);\r\n  },\r\n\r\n  // Returns the number of rows/columns the matrix has\r\n  dimensions: function() {\r\n    return {rows: this.elements.length, cols: this.elements[0].length};\r\n  },\r\n\r\n  // Returns the number of rows in the matrix\r\n  rows: function() {\r\n    return this.elements.length;\r\n  },\r\n\r\n  // Returns the number of columns in the matrix\r\n  cols: function() {\r\n    return this.elements[0].length;\r\n  },\r\n\r\n  // Returns true iff the matrix is equal to the argument. You can supply\r\n  // a vector as the argument, in which case the receiver must be a\r\n  // one-column matrix equal to the vector.\r\n  eql: function(matrix) {\r\n    var M = matrix.elements || matrix;\r\n    if (typeof(M[0][0]) == 'undefined') { M = Matrix.create(M).elements; }\r\n    if (this.elements.length !== M.length ||\r\n        this.elements[0].length !== M[0].length) { return false; }\r\n    var ni = this.elements.length, ki = ni, i, nj, kj = this.elements[0].length, j;\r\n    do { i = ki - ni;\r\n      nj = kj;\r\n      do { j = kj - nj;\r\n        if (Math.abs(this.elements[i][j] - M[i][j]) > Sylvester.precision) { return false; }\r\n      } while (--nj);\r\n    } while (--ni);\r\n    return true;\r\n  },\r\n\r\n  // Returns a copy of the matrix\r\n  dup: function() {\r\n    return Matrix.create(this.elements);\r\n  },\r\n\r\n  // Maps the matrix to another matrix (of the same dimensions) according to the given function\r\n  map: function(fn) {\r\n    var els = [], ni = this.elements.length, ki = ni, i, nj, kj = this.elements[0].length, j;\r\n    do { i = ki - ni;\r\n      nj = kj;\r\n      els[i] = [];\r\n      do { j = kj - nj;\r\n        els[i][j] = fn(this.elements[i][j], i + 1, j + 1);\r\n      } while (--nj);\r\n    } while (--ni);\r\n    return Matrix.create(els);\r\n  },\r\n\r\n  // Returns true iff the argument has the same dimensions as the matrix\r\n  isSameSizeAs: function(matrix) {\r\n    var M = matrix.elements || matrix;\r\n    if (typeof(M[0][0]) === 'undefined') { M = Matrix.create(M).elements; }\r\n    return (this.elements.length === M.length &&\r\n        this.elements[0].length === M[0].length);\r\n  },\r\n\r\n  // Returns the result of adding the argument to the matrix\r\n  add: function(matrix) {\r\n    var M = matrix.elements || matrix;\r\n    if (typeof(M[0][0]) == 'undefined') { M = Matrix.create(M).elements; }\r\n    if (!this.isSameSizeAs(M)) { return null; }\r\n    return this.map(function(x, i, j) { return x + M[i-1][j-1]; });\r\n  },\r\n\r\n  // Returns the result of subtracting the argument from the matrix\r\n  subtract: function(matrix) {\r\n    var M = matrix.elements || matrix;\r\n    if (typeof(M[0][0]) == 'undefined') { M = Matrix.create(M).elements; }\r\n    if (!this.isSameSizeAs(M)) { return null; }\r\n    return this.map(function(x, i, j) { return x - M[i-1][j-1]; });\r\n  },\r\n\r\n  // Returns true iff the matrix can multiply the argument from the left\r\n  canMultiplyFromLeft: function(matrix) {\r\n    var M = matrix.elements || matrix;\r\n    if (typeof(M[0][0]) == 'undefined') { M = Matrix.create(M).elements; }\r\n    // this.columns should equal matrix.rows\r\n    return (this.elements[0].length === M.length);\r\n  },\r\n\r\n  // Returns the result of multiplying the matrix from the right by the argument.\r\n  // If the argument is a scalar then just multiply all the elements. If the argument is\r\n  // a vector, a vector is returned, which saves you having to remember calling\r\n  // col(1) on the result.\r\n  multiply: function(matrix) {\r\n    if (!matrix.elements) {\r\n      return this.map(function(x) { return x * matrix; });\r\n    }\r\n    var returnVector = matrix.modulus ? true : false;\r\n    var M = matrix.elements || matrix;\r\n    if (typeof(M[0][0]) == 'undefined') { M = Matrix.create(M).elements; }\r\n    if (!this.canMultiplyFromLeft(M)) { return null; }\r\n    var ni = this.elements.length, ki = ni, i, nj, kj = M[0].length, j;\r\n    var cols = this.elements[0].length, elements = [], sum, nc, c;\r\n    do { i = ki - ni;\r\n      elements[i] = [];\r\n      nj = kj;\r\n      do { j = kj - nj;\r\n        sum = 0;\r\n        nc = cols;\r\n        do { c = cols - nc;\r\n          sum += this.elements[i][c] * M[c][j];\r\n        } while (--nc);\r\n        elements[i][j] = sum;\r\n      } while (--nj);\r\n    } while (--ni);\r\n    M = Matrix.create(elements);\r\n    return returnVector ? M.col(1) : M;\r\n  },\r\n\r\n  x: function(matrix) { return this.multiply(matrix); },\r\n\r\n  // Returns a submatrix taken from the matrix\r\n  // Argument order is: start row, start col, nrows, ncols\r\n  // Element selection wraps if the required index is outside the matrix's bounds, so you could\r\n  // use this to perform row/column cycling or copy-augmenting.\r\n  minor: function(a, b, c, d) {\r\n    var elements = [], ni = c, i, nj, j;\r\n    var rows = this.elements.length, cols = this.elements[0].length;\r\n    do { i = c - ni;\r\n      elements[i] = [];\r\n      nj = d;\r\n      do { j = d - nj;\r\n        elements[i][j] = this.elements[(a+i-1)%rows][(b+j-1)%cols];\r\n      } while (--nj);\r\n    } while (--ni);\r\n    return Matrix.create(elements);\r\n  },\r\n\r\n  // Returns the transpose of the matrix\r\n  transpose: function() {\r\n    var rows = this.elements.length, cols = this.elements[0].length;\r\n    var elements = [], ni = cols, i, nj, j;\r\n    do { i = cols - ni;\r\n      elements[i] = [];\r\n      nj = rows;\r\n      do { j = rows - nj;\r\n        elements[i][j] = this.elements[j][i];\r\n      } while (--nj);\r\n    } while (--ni);\r\n    return Matrix.create(elements);\r\n  },\r\n\r\n  // Returns true iff the matrix is square\r\n  isSquare: function() {\r\n    return (this.elements.length === this.elements[0].length);\r\n  },\r\n\r\n  // Returns the (absolute) largest element of the matrix\r\n  max: function() {\r\n    var m = 0, ni = this.elements.length, ki = ni, i, nj, kj = this.elements[0].length, j;\r\n    do { i = ki - ni;\r\n      nj = kj;\r\n      do { j = kj - nj;\r\n        if (Math.abs(this.elements[i][j]) > Math.abs(m)) { m = this.elements[i][j]; }\r\n      } while (--nj);\r\n    } while (--ni);\r\n    return m;\r\n  },\r\n\r\n  // Returns the indeces of the first match found by reading row-by-row from left to right\r\n  indexOf: function(x) {\r\n    var ni = this.elements.length, ki = ni, i, nj, kj = this.elements[0].length, j;\r\n    do { i = ki - ni;\r\n      nj = kj;\r\n      do { j = kj - nj;\r\n        if (this.elements[i][j] === x) { return {i: i+1, j: j+1}; }\r\n      } while (--nj);\r\n    } while (--ni);\r\n    return null;\r\n  },\r\n\r\n  // If the matrix is square, returns the diagonal elements as a vector.\r\n  // Otherwise, returns null.\r\n  diagonal: function() {\r\n    if (!this.isSquare) { return null; }\r\n    var els = [], n = this.elements.length, k = n, i;\r\n    do { i = k - n;\r\n      els.push(this.elements[i][i]);\r\n    } while (--n);\r\n    return Vector.create(els);\r\n  },\r\n\r\n  // Make the matrix upper (right) triangular by Gaussian elimination.\r\n  // This method only adds multiples of rows to other rows. No rows are\r\n  // scaled up or switched, and the determinant is preserved.\r\n  toRightTriangular: function() {\r\n    var M = this.dup(), els;\r\n    var n = this.elements.length, k = n, i, np, kp = this.elements[0].length, p;\r\n    do { i = k - n;\r\n      if (M.elements[i][i] === 0) {\r\n        for (let j = i + 1; j < k; j++) {\r\n          if (M.elements[j][i] !== 0) {\r\n            els = []; np = kp;\r\n            do { p = kp - np;\r\n              els.push(M.elements[i][p] + M.elements[j][p]);\r\n            } while (--np);\r\n            M.elements[i] = els;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if (M.elements[i][i] !== 0) {\r\n        for (let j = i + 1; j < k; j++) {\r\n          var multiplier = M.elements[j][i] / M.elements[i][i];\r\n          els = []; np = kp;\r\n          do { p = kp - np;\r\n            // Elements with column numbers up to an including the number\r\n            // of the row that we're subtracting can safely be set straight to\r\n            // zero, since that's the point of this routine and it avoids having\r\n            // to loop over and correct rounding errors later\r\n            els.push(p <= i ? 0 : M.elements[j][p] - M.elements[i][p] * multiplier);\r\n          } while (--np);\r\n          M.elements[j] = els;\r\n        }\r\n      }\r\n    } while (--n);\r\n    return M;\r\n  },\r\n\r\n  toUpperTriangular: function() { return this.toRightTriangular(); },\r\n\r\n  // Returns the determinant for square matrices\r\n  determinant: function() {\r\n    if (!this.isSquare()) { return null; }\r\n    var M = this.toRightTriangular();\r\n    var det = M.elements[0][0], n = M.elements.length - 1, k = n, i;\r\n    do { i = k - n + 1;\r\n      det = det * M.elements[i][i];\r\n    } while (--n);\r\n    return det;\r\n  },\r\n\r\n  det: function() { return this.determinant(); },\r\n\r\n  // Returns true iff the matrix is singular\r\n  isSingular: function() {\r\n    return (this.isSquare() && this.determinant() === 0);\r\n  },\r\n\r\n  // Returns the trace for square matrices\r\n  trace: function() {\r\n    if (!this.isSquare()) { return null; }\r\n    var tr = this.elements[0][0], n = this.elements.length - 1, k = n, i;\r\n    do { i = k - n + 1;\r\n      tr += this.elements[i][i];\r\n    } while (--n);\r\n    return tr;\r\n  },\r\n\r\n  tr: function() { return this.trace(); },\r\n\r\n  // Returns the rank of the matrix\r\n  rank: function() {\r\n    var M = this.toRightTriangular(), rank = 0;\r\n    var ni = this.elements.length, ki = ni, i, nj, kj = this.elements[0].length, j;\r\n    do { i = ki - ni;\r\n      nj = kj;\r\n      do { j = kj - nj;\r\n        if (Math.abs(M.elements[i][j]) > Sylvester.precision) { rank++; break; }\r\n      } while (--nj);\r\n    } while (--ni);\r\n    return rank;\r\n  },\r\n  \r\n  rk: function() { return this.rank(); },\r\n\r\n  // Returns the result of attaching the given argument to the right-hand side of the matrix\r\n  augment: function(matrix) {\r\n    var M = matrix.elements || matrix;\r\n    if (typeof(M[0][0]) == 'undefined') { M = Matrix.create(M).elements; }\r\n    var T = this.dup(), cols = T.elements[0].length;\r\n    var ni = T.elements.length, ki = ni, i, nj, kj = M[0].length, j;\r\n    if (ni !== M.length) { return null; }\r\n    do { i = ki - ni;\r\n      nj = kj;\r\n      do { j = kj - nj;\r\n        T.elements[i][cols + j] = M[i][j];\r\n      } while (--nj);\r\n    } while (--ni);\r\n    return T;\r\n  },\r\n\r\n  // Returns the inverse (if one exists) using Gauss-Jordan\r\n  inverse: function() {\r\n    if (!this.isSquare() || this.isSingular()) { return null; }\r\n    var ni = this.elements.length, ki = ni, i, j;\r\n    var M = this.augment(Matrix.I(ni)).toRightTriangular();\r\n    var np, kp = M.elements[0].length, p, els, divisor;\r\n    var inverse_elements = [], new_element;\r\n    // Matrix is non-singular so there will be no zeros on the diagonal\r\n    // Cycle through rows from last to first\r\n    do { i = ni - 1;\r\n      // First, normalise diagonal elements to 1\r\n      els = []; np = kp;\r\n      inverse_elements[i] = [];\r\n      divisor = M.elements[i][i];\r\n      do { p = kp - np;\r\n        new_element = M.elements[i][p] / divisor;\r\n        els.push(new_element);\r\n        // Shuffle of the current row of the right hand side into the results\r\n        // array as it will not be modified by later runs through this loop\r\n        if (p >= ki) { inverse_elements[i].push(new_element); }\r\n      } while (--np);\r\n      M.elements[i] = els;\r\n      // Then, subtract this row from those above it to\r\n      // give the identity matrix on the left hand side\r\n      for (j = 0; j < i; j++) {\r\n        els = []; np = kp;\r\n        do { p = kp - np;\r\n          els.push(M.elements[j][p] - M.elements[i][p] * M.elements[j][i]);\r\n        } while (--np);\r\n        M.elements[j] = els;\r\n      }\r\n    } while (--ni);\r\n    return Matrix.create(inverse_elements);\r\n  },\r\n\r\n  inv: function() { return this.inverse(); },\r\n\r\n  // Returns the result of rounding all the elements\r\n  round: function() {\r\n    return this.map(function(x) { return Math.round(x); });\r\n  },\r\n\r\n  // Returns a copy of the matrix with elements set to the given value if they\r\n  // differ from it by less than Sylvester.precision\r\n  snapTo: function(x) {\r\n    return this.map(function(p) {\r\n      return (Math.abs(p - x) <= Sylvester.precision) ? x : p;\r\n    });\r\n  },\r\n\r\n  // Returns a string representation of the matrix\r\n  inspect: function() {\r\n    var matrix_rows = [];\r\n    var n = this.elements.length, k = n, i;\r\n    do { i = k - n;\r\n      matrix_rows.push(Vector.create(this.elements[i]).inspect());\r\n    } while (--n);\r\n    return matrix_rows.join('\\n');\r\n  },\r\n\r\n  // Set the matrix's elements from an array. If the argument passed\r\n  // is a vector, the resulting matrix will be a single column.\r\n  setElements: function(els) {\r\n    var i, elements = els.elements || els;\r\n    if (typeof(elements[0][0]) != 'undefined') {\r\n      var ni = elements.length, ki = ni, nj, kj, j;\r\n      this.elements = [];\r\n      do { i = ki - ni;\r\n        nj = elements[i].length; kj = nj;\r\n        this.elements[i] = [];\r\n        do { j = kj - nj;\r\n          this.elements[i][j] = elements[i][j];\r\n        } while (--nj);\r\n      } while(--ni);\r\n      return this;\r\n    }\r\n    var n = elements.length, k = n;\r\n    this.elements = [];\r\n    do { i = k - n;\r\n      this.elements.push([elements[i]]);\r\n    } while (--n);\r\n    return this;\r\n  }\r\n};\r\n\r\n// Constructor function\r\nMatrix.create = function(elements) {\r\n  var M = new Matrix();\r\n  return M.setElements(elements);\r\n};\r\n\r\n// Identity matrix of size n\r\nMatrix.I = function(n) {\r\n  var els = [], k = n, i, nj, j;\r\n  do { i = k - n;\r\n    els[i] = []; nj = k;\r\n    do { j = k - nj;\r\n      els[i][j] = (i === j) ? 1 : 0;\r\n    } while (--nj);\r\n  } while (--n);\r\n  return Matrix.create(els);\r\n};\r\n\r\n// Diagonal matrix - all off-diagonal elements are zero\r\nMatrix.Diagonal = function(elements) {\r\n  var n = elements.length, k = n, i;\r\n  var M = Matrix.I(n);\r\n  do { i = k - n;\r\n    M.elements[i][i] = elements[i];\r\n  } while (--n);\r\n  return M;\r\n};\r\n\r\n// Rotation matrix about some axis. If no axis is\r\n// supplied, assume we're after a 2D transform\r\nMatrix.Rotation = function(theta, a) {\r\n  if (!a) {\r\n    return Matrix.create([\r\n      [Math.cos(theta),  -Math.sin(theta)],\r\n      [Math.sin(theta),   Math.cos(theta)]\r\n    ]);\r\n  }\r\n  var axis = a.dup();\r\n  if (axis.elements.length !== 3) { return null; }\r\n  var mod = axis.modulus();\r\n  var x = axis.elements[0]/mod, y = axis.elements[1]/mod, z = axis.elements[2]/mod;\r\n  var s = Math.sin(theta), c = Math.cos(theta), t = 1 - c;\r\n  // Formula derived here: http://www.gamedev.net/reference/articles/article1199.asp\r\n  // That proof rotates the co-ordinate system so theta\r\n  // becomes -theta and sin becomes -sin here.\r\n  return Matrix.create([\r\n    [ t*x*x + c, t*x*y - s*z, t*x*z + s*y ],\r\n    [ t*x*y + s*z, t*y*y + c, t*y*z - s*x ],\r\n    [ t*x*z - s*y, t*y*z + s*x, t*z*z + c ]\r\n  ]);\r\n};\r\n\r\n// Special case rotations\r\nMatrix.RotationX = function(t) {\r\n  var c = Math.cos(t), s = Math.sin(t);\r\n  return Matrix.create([\r\n    [  1,  0,  0 ],\r\n    [  0,  c, -s ],\r\n    [  0,  s,  c ]\r\n  ]);\r\n};\r\nMatrix.RotationY = function(t) {\r\n  var c = Math.cos(t), s = Math.sin(t);\r\n  return Matrix.create([\r\n    [  c,  0,  s ],\r\n    [  0,  1,  0 ],\r\n    [ -s,  0,  c ]\r\n  ]);\r\n};\r\nMatrix.RotationZ = function(t) {\r\n  var c = Math.cos(t), s = Math.sin(t);\r\n  return Matrix.create([\r\n    [  c, -s,  0 ],\r\n    [  s,  c,  0 ],\r\n    [  0,  0,  1 ]\r\n  ]);\r\n};\r\n\r\n// Random matrix of n rows, m columns\r\nMatrix.Random = function(n, m) {\r\n  return Matrix.Zero(n, m).map(\r\n    function() { return Math.random(); }\r\n  );\r\n};\r\n\r\n// Matrix filled with zeros\r\nMatrix.Zero = function(n, m) {\r\n  var els = [], ni = n, i, nj, j;\r\n  do { i = n - ni;\r\n    els[i] = [];\r\n    nj = m;\r\n    do { j = m - nj;\r\n      els[i][j] = 0;\r\n    } while (--nj);\r\n  } while (--ni);\r\n  return Matrix.create(els);\r\n};\r\n\r\n\r\n\r\nfunction Line() {}\r\nLine.prototype = {\r\n\r\n  // Returns true if the argument occupies the same space as the line\r\n  eql: function(line) {\r\n    return (this.isParallelTo(line) && this.contains(line.anchor));\r\n  },\r\n\r\n  // Returns a copy of the line\r\n  dup: function() {\r\n    return Line.create(this.anchor, this.direction);\r\n  },\r\n\r\n  // Returns the result of translating the line by the given vector/array\r\n  translate: function(vector) {\r\n    var V = vector.elements || vector;\r\n    return Line.create([\r\n      this.anchor.elements[0] + V[0],\r\n      this.anchor.elements[1] + V[1],\r\n      this.anchor.elements[2] + (V[2] || 0)\r\n    ], this.direction);\r\n  },\r\n\r\n  // Returns true if the line is parallel to the argument. Here, 'parallel to'\r\n  // means that the argument's direction is either parallel or antiparallel to\r\n  // the line's own direction. A line is parallel to a plane if the two do not\r\n  // have a unique intersection.\r\n  isParallelTo: function(obj) {\r\n    if (obj.normal) { return obj.isParallelTo(this); }\r\n    var theta = this.direction.angleFrom(obj.direction);\r\n    return (Math.abs(theta) <= Sylvester.precision || Math.abs(theta - Math.PI) <= Sylvester.precision);\r\n  },\r\n\r\n  // Returns the line's perpendicular distance from the argument,\r\n  // which can be a point, a line or a plane\r\n  distanceFrom: function(obj) {\r\n    if (obj.normal) { return obj.distanceFrom(this); }\r\n    if (obj.direction) {\r\n      // obj is a line\r\n      if (this.isParallelTo(obj)) { return this.distanceFrom(obj.anchor); }\r\n      var N = this.direction.cross(obj.direction).toUnitVector().elements;\r\n      var A = this.anchor.elements, B = obj.anchor.elements;\r\n      return Math.abs((A[0] - B[0]) * N[0] + (A[1] - B[1]) * N[1] + (A[2] - B[2]) * N[2]);\r\n    } else {\r\n      // obj is a point\r\n      var P = obj.elements || obj;\r\n      var D = this.direction.elements;\r\n      var PA1 = P[0] - A[0], PA2 = P[1] - A[1], PA3 = (P[2] || 0) - A[2];\r\n      var modPA = Math.sqrt(PA1*PA1 + PA2*PA2 + PA3*PA3);\r\n      if (modPA === 0) return 0;\r\n      // Assumes direction vector is normalized\r\n      var cosTheta = (PA1 * D[0] + PA2 * D[1] + PA3 * D[2]) / modPA;\r\n      var sin2 = 1 - cosTheta*cosTheta;\r\n      return Math.abs(modPA * Math.sqrt(sin2 < 0 ? 0 : sin2));\r\n    }\r\n  },\r\n\r\n  // Returns true iff the argument is a point on the line\r\n  contains: function(point) {\r\n    var dist = this.distanceFrom(point);\r\n    return (dist !== null && dist <= Sylvester.precision);\r\n  },\r\n\r\n  // Returns true iff the line lies in the given plane\r\n  liesIn: function(plane) {\r\n    return plane.contains(this);\r\n  },\r\n\r\n  // Returns true iff the line has a unique point of intersection with the argument\r\n  intersects: function(obj) {\r\n    if (obj.normal) { return obj.intersects(this); }\r\n    return (!this.isParallelTo(obj) && this.distanceFrom(obj) <= Sylvester.precision);\r\n  },\r\n\r\n  // Returns the unique intersection point with the argument, if one exists\r\n  intersectionWith: function(obj) {\r\n    if (obj.normal) { return obj.intersectionWith(this); }\r\n    if (!this.intersects(obj)) { return null; }\r\n    var P = this.anchor.elements, X = this.direction.elements,\r\n        Q = obj.anchor.elements, Y = obj.direction.elements;\r\n    var X1 = X[0], X2 = X[1], X3 = X[2], Y1 = Y[0], Y2 = Y[1], Y3 = Y[2];\r\n    var PsubQ1 = P[0] - Q[0], PsubQ2 = P[1] - Q[1], PsubQ3 = P[2] - Q[2];\r\n    var XdotQsubP = - X1*PsubQ1 - X2*PsubQ2 - X3*PsubQ3;\r\n    var YdotPsubQ = Y1*PsubQ1 + Y2*PsubQ2 + Y3*PsubQ3;\r\n    var XdotX = X1*X1 + X2*X2 + X3*X3;\r\n    var YdotY = Y1*Y1 + Y2*Y2 + Y3*Y3;\r\n    var XdotY = X1*Y1 + X2*Y2 + X3*Y3;\r\n    var k = (XdotQsubP * YdotY / XdotX + XdotY * YdotPsubQ) / (YdotY - XdotY * XdotY);\r\n    return Vector.create([P[0] + k*X1, P[1] + k*X2, P[2] + k*X3]);\r\n  },\r\n\r\n  // Returns the point on the line that is closest to the given point or line\r\n  pointClosestTo: function(obj) {\r\n    if (obj.direction) {\r\n      // obj is a line\r\n      if (this.intersects(obj)) { return this.intersectionWith(obj); }\r\n      if (this.isParallelTo(obj)) { return null; }\r\n      var D = this.direction.elements, E = obj.direction.elements;\r\n      var D1 = D[0], D2 = D[1], D3 = D[2], E1 = E[0], E2 = E[1], E3 = E[2];\r\n      // Create plane containing obj and the shared normal and intersect this with it\r\n      // Thank you: http://www.cgafaq.info/wiki/Line-line_distance\r\n      var x = (D3 * E1 - D1 * E3), y = (D1 * E2 - D2 * E1), z = (D2 * E3 - D3 * E2);\r\n      var N = Vector.create([x * E3 - y * E2, y * E1 - z * E3, z * E2 - x * E1]);\r\n      var P = Plane.create(obj.anchor, N);\r\n      return P.intersectionWith(this);\r\n    } else {\r\n      // obj is a point\r\n      if (this.contains(P)) { return Vector.create(P); }\r\n      var V = Vector.create([D2 * x - D3 * z, D3 * y - D1 * x, D1 * z - D2 * y]);\r\n      var k = this.distanceFrom(P) / V.modulus();\r\n      return Vector.create([\r\n        P[0] + V.elements[0] * k,\r\n        P[1] + V.elements[1] * k,\r\n        (P[2] || 0) + V.elements[2] * k\r\n      ]);\r\n    }\r\n  },\r\n\r\n  // Returns a copy of the line rotated by t radians about the given line. Works by\r\n  // finding the argument's closest point to this line's anchor point (call this C) and\r\n  // rotating the anchor about C. Also rotates the line's direction about the argument's.\r\n  // Be careful with this - the rotation axis' direction affects the outcome!\r\n  rotate: function(t, line) {\r\n    // If we're working in 2D\r\n    if (typeof(line.direction) == 'undefined') { line = Line.create(line.to3D(), Vector.k); }\r\n    var R = Matrix.Rotation(t, line.direction).elements;\r\n    var C = line.pointClosestTo(this.anchor).elements;\r\n    var A = this.anchor.elements, D = this.direction.elements;\r\n    var C1 = C[0], C2 = C[1], C3 = C[2], A1 = A[0], A2 = A[1], A3 = A[2];\r\n    var x = A1 - C1, y = A2 - C2, z = A3 - C3;\r\n    return Line.create([\r\n      C1 + R[0][0] * x + R[0][1] * y + R[0][2] * z,\r\n      C2 + R[1][0] * x + R[1][1] * y + R[1][2] * z,\r\n      C3 + R[2][0] * x + R[2][1] * y + R[2][2] * z\r\n    ], [\r\n      R[0][0] * D[0] + R[0][1] * D[1] + R[0][2] * D[2],\r\n      R[1][0] * D[0] + R[1][1] * D[1] + R[1][2] * D[2],\r\n      R[2][0] * D[0] + R[2][1] * D[1] + R[2][2] * D[2]\r\n    ]);\r\n  },\r\n\r\n  // Returns the line's reflection in the given point or line\r\n  reflectionIn: function(obj) {\r\n    if (obj.normal) {\r\n      // obj is a plane\r\n      var A = this.anchor.elements, D = this.direction.elements;\r\n      var A1 = A[0], A2 = A[1], A3 = A[2], D1 = D[0], D2 = D[1], D3 = D[2];\r\n      var newA = this.anchor.reflectionIn(obj).elements;\r\n      // Add the line's direction vector to its anchor, then mirror that in the plane\r\n      var AD1 = A1 + D1, AD2 = A2 + D2, AD3 = A3 + D3;\r\n      var Q = obj.pointClosestTo([AD1, AD2, AD3]).elements;\r\n      var newD = [Q[0] + (Q[0] - AD1) - newA[0], Q[1] + (Q[1] - AD2) - newA[1], Q[2] + (Q[2] - AD3) - newA[2]];\r\n      return Line.create(newA, newD);\r\n    } else if (obj.direction) {\r\n      // obj is a line - reflection obtained by rotating PI radians about obj\r\n      return this.rotate(Math.PI, obj);\r\n    } else {\r\n      // obj is a point - just reflect the line's anchor in it\r\n      var P = obj.elements || obj;\r\n      return Line.create(this.anchor.reflectionIn([P[0], P[1], (P[2] || 0)]), this.direction);\r\n    }\r\n  },\r\n\r\n  // Set the line's anchor point and direction.\r\n  setVectors: function(anchor, direction) {\r\n    // Need to do this so that line's properties are not\r\n    // references to the arguments passed in\r\n    anchor = Vector.create(anchor);\r\n    direction = Vector.create(direction);\r\n    if (anchor.elements.length === 2) {anchor.elements.push(0); }\r\n    if (direction.elements.length === 2) { direction.elements.push(0); }\r\n    if (anchor.elements.length > 3 || direction.elements.length > 3) { return null; }\r\n    var mod = direction.modulus();\r\n    if (mod === 0) { return null; }\r\n    this.anchor = anchor;\r\n    this.direction = Vector.create([\r\n      direction.elements[0] / mod,\r\n      direction.elements[1] / mod,\r\n      direction.elements[2] / mod\r\n    ]);\r\n    return this;\r\n  }\r\n};\r\n\r\n  \r\n// Constructor function\r\nLine.create = function(anchor, direction) {\r\n  var L = new Line();\r\n  return L.setVectors(anchor, direction);\r\n};\r\n\r\n// Axes\r\nLine.X = Line.create(Vector.Zero(3), Vector.i);\r\nLine.Y = Line.create(Vector.Zero(3), Vector.j);\r\nLine.Z = Line.create(Vector.Zero(3), Vector.k);\r\n\r\n\r\n\r\nfunction Plane() {}\r\nPlane.prototype = {\r\n\r\n  // Returns true iff the plane occupies the same space as the argument\r\n  eql: function(plane) {\r\n    return (this.contains(plane.anchor) && this.isParallelTo(plane));\r\n  },\r\n\r\n  // Returns a copy of the plane\r\n  dup: function() {\r\n    return Plane.create(this.anchor, this.normal);\r\n  },\r\n\r\n  // Returns the result of translating the plane by the given vector\r\n  translate: function(vector) {\r\n    var V = vector.elements || vector;\r\n    return Plane.create([\r\n      this.anchor.elements[0] + V[0],\r\n      this.anchor.elements[1] + V[1],\r\n      this.anchor.elements[2] + (V[2] || 0)\r\n    ], this.normal);\r\n  },\r\n\r\n  // Returns true iff the plane is parallel to the argument. Will return true\r\n  // if the planes are equal, or if you give a line and it lies in the plane.\r\n  isParallelTo: function(obj) {\r\n    var theta;\r\n    if (obj.normal) {\r\n      // obj is a plane\r\n      theta = this.normal.angleFrom(obj.normal);\r\n      return (Math.abs(theta) <= Sylvester.precision || Math.abs(Math.PI - theta) <= Sylvester.precision);\r\n    } else if (obj.direction) {\r\n      // obj is a line\r\n      return this.normal.isPerpendicularTo(obj.direction);\r\n    }\r\n    return null;\r\n  },\r\n  \r\n  // Returns true iff the receiver is perpendicular to the argument\r\n  isPerpendicularTo: function(plane) {\r\n    var theta = this.normal.angleFrom(plane.normal);\r\n    return (Math.abs(Math.PI/2 - theta) <= Sylvester.precision);\r\n  },\r\n\r\n  // Returns the plane's distance from the given object (point, line or plane)\r\n  distanceFrom: function(obj) {\r\n    if (this.intersects(obj) || this.contains(obj)) { return 0; }\r\n    if (obj.anchor) {\r\n      // obj is a plane or line\r\n      var A = this.anchor.elements, B = obj.anchor.elements, N = this.normal.elements;\r\n      return Math.abs((A[0] - B[0]) * N[0] + (A[1] - B[1]) * N[1] + (A[2] - B[2]) * N[2]);\r\n    } else {\r\n      // obj is a point\r\n      var P = obj.elements || obj;\r\n      return Math.abs((A[0] - P[0]) * N[0] + (A[1] - P[1]) * N[1] + (A[2] - (P[2] || 0)) * N[2]);\r\n    }\r\n  },\r\n\r\n  // Returns true iff the plane contains the given point or line\r\n  contains: function(obj) {\r\n    if (obj.normal) { return null; }\r\n    if (obj.direction) {\r\n      return (this.contains(obj.anchor) && this.contains(obj.anchor.add(obj.direction)));\r\n    } else {\r\n      var P = obj.elements || obj;\r\n      var A = this.anchor.elements, N = this.normal.elements;\r\n      var diff = Math.abs(N[0]*(A[0] - P[0]) + N[1]*(A[1] - P[1]) + N[2]*(A[2] - (P[2] || 0)));\r\n      return (diff <= Sylvester.precision);\r\n    }\r\n  },\r\n\r\n  // Returns true iff the plane has a unique point/line of intersection with the argument\r\n  intersects: function(obj) {\r\n    if (typeof(obj.direction) == 'undefined' && typeof(obj.normal) == 'undefined') { return null; }\r\n    return !this.isParallelTo(obj);\r\n  },\r\n\r\n  // Returns the unique intersection with the argument, if one exists. The result\r\n  // will be a vector if a line is supplied, and a line if a plane is supplied.\r\n  intersectionWith: function(obj) {\r\n    if (!this.intersects(obj)) { return null; }\r\n    if (obj.direction) {\r\n      // obj is a line\r\n      var A = obj.anchor.elements, D = obj.direction.elements,\r\n          P = this.anchor.elements, N = this.normal.elements;\r\n      var multiplier = (N[0]*(P[0]-A[0]) + N[1]*(P[1]-A[1]) + N[2]*(P[2]-A[2])) / (N[0]*D[0] + N[1]*D[1] + N[2]*D[2]);\r\n      return Vector.create([A[0] + D[0]*multiplier, A[1] + D[1]*multiplier, A[2] + D[2]*multiplier]);\r\n    } else if (obj.normal) {\r\n      // obj is a plane\r\n      var direction = this.normal.cross(obj.normal).toUnitVector();\r\n      // To find an anchor point, we find one co-ordinate that has a value\r\n      // of zero somewhere on the intersection, and remember which one we picked\r\n      var O = obj.normal.elements, B = obj.anchor.elements;\r\n      var solver = Matrix.Zero(2,2), i = 0;\r\n      while (solver.isSingular()) {\r\n        i++;\r\n        solver = Matrix.create([\r\n          [ N[i%3], N[(i+1)%3] ],\r\n          [ O[i%3], O[(i+1)%3]  ]\r\n        ]);\r\n      }\r\n      // Then we solve the simultaneous equations in the remaining dimensions\r\n      var inverse = solver.inverse().elements;\r\n      var x = N[0]*A[0] + N[1]*A[1] + N[2]*A[2];\r\n      var y = O[0]*B[0] + O[1]*B[1] + O[2]*B[2];\r\n      var intersection = [\r\n        inverse[0][0] * x + inverse[0][1] * y,\r\n        inverse[1][0] * x + inverse[1][1] * y\r\n      ];\r\n      var anchor = [];\r\n      for (var j = 1; j <= 3; j++) {\r\n        // This formula picks the right element from intersection by\r\n        // cycling depending on which element we set to zero above\r\n        anchor.push((i === j) ? 0 : intersection[(j + (5 - i)%3)%3]);\r\n      }\r\n      return Line.create(anchor, direction);\r\n    }\r\n  },\r\n\r\n  // Returns the point in the plane closest to the given point\r\n  pointClosestTo: function(point) {\r\n    var P = point.elements || point;\r\n    var A = this.anchor.elements, N = this.normal.elements;\r\n    var dot = (A[0] - P[0]) * N[0] + (A[1] - P[1]) * N[1] + (A[2] - (P[2] || 0)) * N[2];\r\n    return Vector.create([P[0] + N[0] * dot, P[1] + N[1] * dot, (P[2] || 0) + N[2] * dot]);\r\n  },\r\n\r\n  // Returns a copy of the plane, rotated by t radians about the given line\r\n  // See notes on Line#rotate.\r\n  rotate: function(t, line) {\r\n    var R = Matrix.Rotation(t, line.direction).elements;\r\n    var C = line.pointClosestTo(this.anchor).elements;\r\n    var A = this.anchor.elements, N = this.normal.elements;\r\n    var C1 = C[0], C2 = C[1], C3 = C[2], A1 = A[0], A2 = A[1], A3 = A[2];\r\n    var x = A1 - C1, y = A2 - C2, z = A3 - C3;\r\n    return Plane.create([\r\n      C1 + R[0][0] * x + R[0][1] * y + R[0][2] * z,\r\n      C2 + R[1][0] * x + R[1][1] * y + R[1][2] * z,\r\n      C3 + R[2][0] * x + R[2][1] * y + R[2][2] * z\r\n    ], [\r\n      R[0][0] * N[0] + R[0][1] * N[1] + R[0][2] * N[2],\r\n      R[1][0] * N[0] + R[1][1] * N[1] + R[1][2] * N[2],\r\n      R[2][0] * N[0] + R[2][1] * N[1] + R[2][2] * N[2]\r\n    ]);\r\n  },\r\n\r\n  // Returns the reflection of the plane in the given point, line or plane.\r\n  reflectionIn: function(obj) {\r\n    if (obj.normal) {\r\n      // obj is a plane\r\n      var A = this.anchor.elements, N = this.normal.elements;\r\n      var A1 = A[0], A2 = A[1], A3 = A[2], N1 = N[0], N2 = N[1], N3 = N[2];\r\n      var newA = this.anchor.reflectionIn(obj).elements;\r\n      // Add the plane's normal to its anchor, then mirror that in the other plane\r\n      var AN1 = A1 + N1, AN2 = A2 + N2, AN3 = A3 + N3;\r\n      var Q = obj.pointClosestTo([AN1, AN2, AN3]).elements;\r\n      var newN = [Q[0] + (Q[0] - AN1) - newA[0], Q[1] + (Q[1] - AN2) - newA[1], Q[2] + (Q[2] - AN3) - newA[2]];\r\n      return Plane.create(newA, newN);\r\n    } else if (obj.direction) {\r\n      // obj is a line\r\n      return this.rotate(Math.PI, obj);\r\n    } else {\r\n      // obj is a point\r\n      var P = obj.elements || obj;\r\n      return Plane.create(this.anchor.reflectionIn([P[0], P[1], (P[2] || 0)]), this.normal);\r\n    }\r\n  },\r\n\r\n  // Sets the anchor point and normal to the plane. If three arguments are specified,\r\n  // the normal is calculated by assuming the three points should lie in the same plane.\r\n  // If only two are sepcified, the second is taken to be the normal. Normal vector is\r\n  // normalised before storage.\r\n  setVectors: function(anchor, v1, v2) {\r\n    anchor = Vector.create(anchor);\r\n    anchor = anchor.to3D(); if (anchor === null) { return null; }\r\n    v1 = Vector.create(v1);\r\n    v1 = v1.to3D(); if (v1 === null) { return null; }\r\n    if (typeof(v2) == 'undefined') {\r\n      v2 = null;\r\n    } else {\r\n      v2 = Vector.create(v2);\r\n      v2 = v2.to3D(); if (v2 === null) { return null; }\r\n    }\r\n    var A1 = anchor.elements[0], A2 = anchor.elements[1], A3 = anchor.elements[2];\r\n    var v11 = v1.elements[0], v12 = v1.elements[1], v13 = v1.elements[2];\r\n    var normal, mod;\r\n    if (v2 !== null) {\r\n      var v21 = v2.elements[0], v22 = v2.elements[1], v23 = v2.elements[2];\r\n      normal = Vector.create([\r\n        (v12 - A2) * (v23 - A3) - (v13 - A3) * (v22 - A2),\r\n        (v13 - A3) * (v21 - A1) - (v11 - A1) * (v23 - A3),\r\n        (v11 - A1) * (v22 - A2) - (v12 - A2) * (v21 - A1)\r\n      ]);\r\n      mod = normal.modulus();\r\n      if (mod === 0) { return null; }\r\n      normal = Vector.create([normal.elements[0] / mod, normal.elements[1] / mod, normal.elements[2] / mod]);\r\n    } else {\r\n      mod = Math.sqrt(v11*v11 + v12*v12 + v13*v13);\r\n      if (mod === 0) { return null; }\r\n      normal = Vector.create([v1.elements[0] / mod, v1.elements[1] / mod, v1.elements[2] / mod]);\r\n    }\r\n    this.anchor = anchor;\r\n    this.normal = normal;\r\n    return this;\r\n  }\r\n};\r\n\r\n// Constructor function\r\nPlane.create = function(anchor, v1, v2) {\r\n  var P = new Plane();\r\n  return P.setVectors(anchor, v1, v2);\r\n};\r\n\r\n// X-Y-Z planes\r\nPlane.XY = Plane.create(Vector.Zero(3), Vector.k);\r\nPlane.YZ = Plane.create(Vector.Zero(3), Vector.i);\r\nPlane.ZX = Plane.create(Vector.Zero(3), Vector.j);\r\nPlane.YX = Plane.XY; Plane.ZY = Plane.YZ; Plane.XZ = Plane.ZX;\r\n","import initMatrix from './initMatrix';\r\nimport { Matrix } from './sylvester.src';\r\n\r\nconst toRadians = angle => angle * Math.PI / 180;\r\n\r\nconst generateMatrixes = (dimensions, anglesArr) => {\r\n    let cosinus1 = dimensions - 1;\r\n    let cosinus2 = dimensions - 2;\r\n    let sinus1 = dimensions - 1;\r\n    let sinus2 = dimensions - 2;\r\n    let variants = dimensions * (dimensions - 1) / 2;\r\n    const matrixes = [];\r\n\r\n    for (let i = 0; i < variants; i++) {\r\n        matrixes.push(Matrix.create(\r\n            initMatrix(\r\n                dimensions, \r\n                cosinus1, \r\n                cosinus2, \r\n                sinus1, \r\n                sinus2, \r\n                toRadians(anglesArr[i])))\r\n        );\r\n\r\n        if (cosinus2 === 0) {\r\n            cosinus1--;\r\n            cosinus2 = cosinus1;\r\n            sinus1--;\r\n            sinus2 = sinus1;\r\n        }\r\n        \r\n        cosinus2--;\r\n        sinus2--;\r\n    }\r\n\r\n    let matrixMultiply = matrixes[0];\r\n\r\n    for (let i = 1; i < variants; i++) {\r\n       matrixMultiply = matrixMultiply.multiply(matrixes[i]);\r\n    }\r\n\r\n    return matrixMultiply;\r\n}\r\n\r\nexport default generateMatrixes;","import { Matrix } from './sylvester.src';\r\n\r\nconst generateCube = (vertices, matrix, dimension) => {\r\n    const vertisecOnSvg = vertices.map(vertex => {\r\n        let perspective = 550;\r\n        let coordinates = matrix.multiply(Matrix.create(vertex));\r\n        let x = coordinates.e(1, 1);\r\n        let y = coordinates.e(2, 1);\r\n\r\n        for (let i = 2; i < dimension; i++) {\r\n            x = perspective * x / (coordinates.e(i + 1, 1) + perspective);\r\n            y = perspective * y / (coordinates.e(i + 1, 1) + perspective);\r\n            perspective += 100;\r\n        }\r\n\r\n        return {x: x, y: y};\r\n    });\r\n\r\n    const setCoordinatesToLines = Array.from(document.querySelectorAll('.line'));\r\n    setCoordinatesToLines.map(line => {\r\n        const index1 = line.getAttribute('vertex1');\r\n        const index2 = line.getAttribute('vertex2');\r\n        \r\n        line.setAttribute(\"x1\", 300 + vertisecOnSvg[index1].x);\r\n        line.setAttribute(\"x2\", 300 + vertisecOnSvg[index2].x);\r\n        line.setAttribute(\"y1\", 200 + vertisecOnSvg[index1].y);\r\n        line.setAttribute(\"y2\", 200 + vertisecOnSvg[index2].y);\r\n        \r\n        return 0;\r\n    })\r\n\r\n    return setCoordinatesToLines;\r\n}\r\n\r\nexport default generateCube;","export let verticesArray = [];\r\n\r\nconst vertices =  (dimensions, DimensionOfCube) => {\r\n    const verticesAmount = 2 ** dimensions;\r\n\r\n    verticesArray = [];\r\n\r\n    for (let i = 0; i < verticesAmount; i++) {\r\n        const vertex = [];\r\n\r\n        for(let j = 0; j < dimensions; j++) {\r\n\r\n            if(Math.trunc(i / (2 ** j)) % 2 === 0\r\n            && j < DimensionOfCube) {\r\n                vertex.push(60);\r\n            } else if (j < DimensionOfCube) {\r\n                vertex.push(-65);\r\n            } else {\r\n                vertex.push(0);\r\n            }\r\n        }\r\n\r\n        verticesArray.push(vertex);\r\n    }\r\n\r\n}\r\n\r\nexport default vertices;","import React from 'react';\r\nimport angles, { anglesArray } from './angles';\r\nimport generateMatrixes from './generateMatrixes';\r\nimport generateCube from './generateCube';\r\nimport vertices, { verticesArray } from './vertices'\r\n\r\nconst CreateCheckboxes = ({ dimensions, number, DimensionOfCube }) => {\r\n\r\n    const numbersOfCehckboxes = new Array(dimensions);\r\n    let subDimensionStart = 2;\r\n    let subDimensionEnd = 1;\r\n\r\n    angles(dimensions);\r\n    vertices(number, DimensionOfCube);\r\n\r\n    for (let i = 0; i < dimensions; i++) {\r\n        if (subDimensionEnd === subDimensionStart) {\r\n            subDimensionStart++;\r\n            subDimensionEnd = 1;\r\n        }\r\n\r\n        numbersOfCehckboxes[i] = \r\n            `${subDimensionStart}-${subDimensionEnd}`;\r\n        subDimensionEnd++;\r\n    }\r\n\r\n    numbersOfCehckboxes.reverse();\r\n\r\n    const chengeAngle = (e) => {\r\n        const index = e.target.getAttribute('index');\r\n        const targ = e.target;\r\n        let interval = setInterval(() => {\r\n            if (!targ.checked || anglesArray.length < index) {\r\n                clearInterval(interval);\r\n            } else {\r\n                anglesArray[index]++;\r\n                anglesArray.length = dimensions;\r\n                const matrix = generateMatrixes(number, anglesArray);\r\n                generateCube(verticesArray, matrix, number);\r\n            }\r\n        }, 50);\r\n    }\r\n\r\n    return (\r\n        <section className='checkboxes'>\r\n            <div className=\"angles\">angles:</div> \r\n            {\r\n                numbersOfCehckboxes.map((field, index) => {\r\n                    return (\r\n                        <label key={ index } className='labels'>\r\n                            <input \r\n                                key={ index + 'c' }\r\n                                type='checkbox' \r\n                                name='checkbox'\r\n                                onChange={chengeAngle}\r\n                                index={index}\r\n                                className=\"checkbox\"\r\n                            />\r\n                            {field}\r\n                        </label>\r\n                    );\r\n                })\r\n            }\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default CreateCheckboxes;","import React, { useEffect } from 'react';\r\nimport generateCube from './generateCube';\r\nimport { verticesArray } from './vertices';\r\nimport { anglesArray } from './angles';\r\nimport generateMatrixes from './generateMatrixes';\r\n\r\n\r\nconst Svg = ({ dimension }) => {\r\n\r\n    useEffect(() => {\r\n        if (dimension > 1) {\r\n            const matrix = generateMatrixes(dimension, anglesArray);\r\n            generateCube(verticesArray, matrix, dimension);\r\n        }\r\n    });\r\n\r\n    if (+dimension === 0) {\r\n        return (\r\n            <svg width=\"600\" height=\"400\" className=\"svg\">\r\n                <circle cx=\"300\" cy=\"200\" r=\"3\" fill=\"white\"/>\r\n            </svg>\r\n        );\r\n    }\r\n\r\n    if (+dimension === 1) {\r\n        return (\r\n            <svg width=\"600\" height=\"400\" className=\"svg\">\r\n                <line\r\n                    id=\"line1\" \r\n                    x1=\"200\" \r\n                    y1=\"200\"\r\n                    x2=\"400\" \r\n                    y2=\"200\" \r\n                    stroke=\"white\"\r\n                    className=\"line\"\r\n                />\r\n            </svg>\r\n        );\r\n    }\r\n\r\n    const amountOfLines = (2 ** (dimension - 1)) * dimension;\r\n    let ids = 0;\r\n    const lines = [];\r\n\r\n    for (let i = 0; i < amountOfLines; i++) {\r\n        lines.push(ids);\r\n        ids += 1;\r\n    }\r\n\r\n    let cubesRepeats = 4;\r\n    let square = [0,1,2,3];\r\n\r\n    return (\r\n        <svg width=\"600\" height=\"400\" className=\"svg\">\r\n            {\r\n                lines.map((id, index) => {\r\n                    let vertex1 = 0;\r\n                    let vertex2 = 0;\r\n\r\n                    if (index % 4 === 0 && index < 2 ** dimension) {\r\n                        vertex1 = 0 + (Math.trunc(index / 4)) * 4;\r\n                        vertex2 = 1 + (Math.trunc(index / 4)) * 4;\r\n                    }\r\n\r\n                    if (index % 4 === 1 && index < 2 ** dimension) {\r\n                        vertex1 = 1 + (Math.trunc(index / 4)) * 4;\r\n                        vertex2 = 3 + (Math.trunc(index / 4)) * 4;\r\n                    }\r\n\r\n                    if (index % 4 === 2 && index < 2 ** dimension) {\r\n                        vertex1 = 3 + (Math.trunc(index / 4)) * 4;\r\n                        vertex2 = 2 + (Math.trunc(index / 4)) * 4;\r\n                    }\r\n\r\n                    if (index % 4 === 3 && index < 2 ** dimension) {\r\n                        vertex1 = 0 + (Math.trunc(index / 4)) * 4;\r\n                        vertex2 = 2 + (Math.trunc(index / 4)) * 4;\r\n                    }\r\n\r\n                    if (index >= (2 ** dimension)) {\r\n                        \r\n                        for (let i = 0; i < square.length; i++) {\r\n                            if (index % cubesRepeats === i) {\r\n                                vertex1 = square[i];\r\n                                vertex2 = square[i] + cubesRepeats;\r\n\r\n                                if (index % cubesRepeats === cubesRepeats - 1) {\r\n                                    const doubleRepeats = cubesRepeats * 2;\r\n                                    square = square.map(dot => dot + doubleRepeats);\r\n                                }\r\n                            }\r\n                        }\r\n                        \r\n                        if (square[0] > (2 ** dimension - 1)) {\r\n                            cubesRepeats *= 2;\r\n                            const twoLength = square.length * 2;\r\n\r\n                            for (let i = 0; i < twoLength ; i++) {\r\n                                square[i] = i;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return (\r\n                        <line\r\n                            key={id} \r\n                            x1=\"200\" \r\n                            y1=\"200\" \r\n                            x2=\"400\" \r\n                            y2=\"200\"\r\n                            stroke=\"white\"\r\n                            id={`line${id}`}\r\n                            className=\"line\"\r\n                            vertex1={vertex1}\r\n                            vertex2={vertex2}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default Svg;","import React, { useState } from 'react';\nimport './App.css';\nimport CreateCheckboxes from './CreateCheckboxes';\nimport Svg from './Svg';\nimport { reset } from './angles';\nimport generateCube from './generateCube';\nimport { verticesArray } from './vertices';\nimport { anglesArray } from './angles';\nimport generateMatrixes from './generateMatrixes';\n\n\nfunction App() {\n  const [numberOfDimensions, setNumberOfDimensions] = useState(2);\n  const [amount, setAmount] = useState(1);\n  const [cubeWithDimension, setCubeWithDimension] = useState(2);\n\n  let number = numberOfDimensions;\n  const changeNumber = (e) => {\n    number = e.target.value;\n  }\n  const optionList = [];\n\n  for (let i = 0; i < numberOfDimensions; i++) {\n    optionList.push(i + 1);\n  }\n\n  const generateDimensions = () => {\n    if (isNaN(number) \n    || +number < 0 \n    || Math.trunc(+number) - +number !== 0) {\n      alert('input positive integer number')\n    } else {\n      const checkboxes = Array.from(\n        document.querySelectorAll('.checkbox')\n      );\n\n      for (let i in checkboxes) {\n        checkboxes[i].checked = false;\n      }\n\n      setNumberOfDimensions(number);\n      setAmount(number * (number - 1) / 2);\n      setCubeWithDimension(number);\n      document.querySelector(\".select\").value = \"select dimension of cube\";\n    }\n  }\n\n  const resetAngles = () => {\n    reset();\n    const matrix = generateMatrixes(numberOfDimensions, anglesArray);\n    generateCube(verticesArray, matrix, numberOfDimensions);\n  }\n\n  const dimensionOfCube = (e) => {\n    if (!isNaN(e.target.value)) {\n      setCubeWithDimension(+e.target.value);\n    }\n  }\n  \n  return (\n    <div className=\"App\">\n      <button type='button' className=\"reset\" onClick={resetAngles}>\n        Reset angles\n      </button>\n      <input \n        type=\"text\" \n        placeholder='input number of dimensions'\n        className=\"input_dimension\"\n        onChange={changeNumber}\n      />\n      <button type='button' \n        className=\"generate-button\" \n        onClick={generateDimensions}\n      >\n        Generate dimensions\n      </button>\n\n      <select onChange={ dimensionOfCube } className=\"select\">\n        <option>\n          select dimension of cube\n        </option>\n        {\n          optionList.map(number => {\n            return (\n            <option key={number} className=\"option\">\n              {number}\n            </option>);\n          })\n        }\n      </select>\n      <CreateCheckboxes \n        dimensions={ amount } \n        number={ numberOfDimensions }\n        DimensionOfCube={ cubeWithDimension }\n      />\n      <Svg \n        dimension={ numberOfDimensions } \n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}