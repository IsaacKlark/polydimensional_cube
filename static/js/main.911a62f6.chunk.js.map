{"version":3,"sources":["vertices/Cell120AnalogVertices.js","initMatrix.js","sylvester.src.js","generateMatrixes.js","generateFigure.js","vertices/cubeVertices.js","vertices/octahedronVertices.js","vertices/symplexVertices.js","vertices/Cell24AnalogVertices.js","vertices/index.js","CreateCheckboxes.js","figures/Cube.js","figures/Symplex.js","figures/Octahedron.js","figures/Cell24Analog.js","figures/Cell120Analog.js","Svg.js","App.js","serviceWorker.js","index.js"],"names":["Cell120AnalogVertices","dimensions","DimensionOfFigure","setVerticesArray","copyDimensionOfFigure","fi","baseGroup1","map","number","Math","round","baseGroup2","baseGroup3","baseGroup4","baseGroup5","baseGroup6","baseGroup7","vertices2D","angle","i","radAngle","push","sin","cos","combinations","arr","couple","item","length","beg","arr1","slice","l","arr2","j","newArr","concat","inversions","minusToPlus","result","arrays","combineMinuses","code","join","eval","forEach","array","mixAll","variants","mySet","Set","element","add","Array","from","split","arrayToSetAndToArray","especialCombinations","permutations","resultSet","el","JSON","stringify","parse","group1","group2","group3","group4","group5","group6","group7","vertices","initMatrix","dimension","cos1","cos2","sin1","sin2","matrix","row","ones","multiplyByMinusOne","Sylvester","Vector","Matrix","Line","Plane","prototype","e","this","elements","modulus","sqrt","dot","eql","vector","n","V","abs","dup","create","fn","each","x","k","toUnitVector","r","angleFrom","mod1","mod2","theta","acos","isParallelTo","isAntiparallelTo","PI","isPerpendicularTo","subtract","multiply","product","cross","B","A","max","m","indexOf","index","toDiagonalMatrix","Diagonal","snapTo","y","distanceFrom","obj","anchor","part","sum","liesOn","line","contains","liesIn","plane","rotate","t","R","z","Rotation","direction","C","pointClosestTo","reflectionIn","P","Q","to3D","inspect","setElements","els","Random","random","Zero","col","rows","cols","M","nj","ni","ki","kj","isSameSizeAs","canMultiplyFromLeft","returnVector","nc","c","minor","a","b","d","transpose","isSquare","diagonal","toRightTriangular","np","p","kp","multiplier","toUpperTriangular","determinant","det","isSingular","trace","tr","rank","rk","augment","T","inverse","divisor","new_element","I","inverse_elements","inv","matrix_rows","axis","mod","s","RotationX","RotationY","RotationZ","translate","normal","N","D","PA1","PA2","PA3","modPA","cosTheta","point","dist","intersects","intersectionWith","X","Y","X1","X2","X3","Y1","Y2","Y3","PsubQ1","PsubQ2","PsubQ3","YdotY","XdotY","E","D1","D2","D3","E1","E2","E3","C1","C2","C3","A1","A2","A3","newA","AD1","AD2","AD3","newD","setVectors","Z","O","solver","intersection","N1","N2","N3","AN1","AN2","AN3","newN","v1","v2","v11","v12","v13","v21","v22","v23","XY","YZ","ZX","YX","ZY","XZ","generateMatrixes","anglesArr","transposeRotation","cosinus1","cosinus2","sinus1","sinus2","matrixes","matrixMultiply","generateFigure","verticesOnSvg","vertex","perspective","coordinates","setCoordinatesToLines","document","querySelectorAll","setCoordinatesToCircles","index1","getAttribute","index2","setAttribute","cubeVertices","verticesAmount","verticesArray","trunc","octahedronVertices","prevResult","prevNot0Index","symplexVertices","firstDot","copyFirstDot","reverse","lastDot","Cell24AnaologVertices","verticesAmount2","figure","CreateCheckboxes","anglesArray","setAnglesArray","activeRotations","setActiveRotations","useEffect","moveByKeyBoard","useKeyboard","copyAnglesArray","key","body","addEventListener","removeEventListener","interval","setInterval","clearInterval","numbersOfCheckboxes","subDimensionStart","subDimensionEnd","yRotationArray","addToYRotationInterval","className","type","name","onChange","copyActiveRotations","checked","field","includes","filter","changeActiveRotation","value","target","Cube","amountOfLines","ids","lines","cubesRepeats","cube","width","height","id","vertex1","vertex2","doubleRepeats","twoLength","x1","y1","x2","y2","stroke","Symplex","dimensionOfFigure","minsAmount","xDots","yDots","currentMinX","currentMinY","currentY","Octahedron","startXDotRepeatAmount","startXDotRepeatAmount2","repeat","startX","startY","startY2","Cell24Analog","check1","array1","array2","check2","degree100","equal","linesSet","sort","linesArray","Cell120Analog","edgeLength","Svg","cx","cy","fill","App","useState","numberOfDimensions","setNumberOfDimensions","amount","setAmount","setDimensionOfFigure","setFigure","setTransposeRotation","optionList","onClick","placeholder","isNaN","alert","checkboxes","querySelector","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.911a62f6.chunk.js","sourcesContent":["const Cell120AnalogVertices = (\r\n  dimensions,\r\n  DimensionOfFigure,\r\n  setVerticesArray\r\n) => {\r\n  let copyDimensionOfFigure = DimensionOfFigure > 4 ? 4 : DimensionOfFigure;\r\n  if (DimensionOfFigure > dimensions) copyDimensionOfFigure = dimensions;\r\n  const fi = 1.618;\r\n  const baseGroup1 =\r\n    +copyDimensionOfFigure === 3\r\n      ? [fi, fi, fi].map((number) => Math.round(number * 50))\r\n      : [2, 2, 0, 0].map((number) => Math.round(number * 50));\r\n  const baseGroup2 =\r\n    +copyDimensionOfFigure === 3\r\n      ? [0, fi**2, 1].map((number) => Math.round(number * 50))\r\n      : [5 ** (1 / 2), 1, 1, 1].map((number) => Math.round(number * 50));\r\n  const baseGroup3 =\r\n    +copyDimensionOfFigure === 3\r\n      ? [fi**2, 1, 0].map((number) => Math.round(number * 50))\r\n      : [fi, fi, fi, fi ** -2].map((number) => Math.round(number * 50));\r\n  const baseGroup4 =\r\n    +copyDimensionOfFigure === 3\r\n      ? [1, 0, fi**2].map((number) => Math.round(number * 50))\r\n      : [fi ** 2, fi ** -1, fi ** -1, fi ** -1].map((number) =>\r\n          Math.round(number * 50)\r\n        );\r\n  const baseGroup5 =\r\n    +copyDimensionOfFigure === 3\r\n      ? [97, 37, 0]\r\n      : [fi ** 2, fi ** -2, 1, 0].map((number) => Math.round(number * 50));\r\n  const baseGroup6 = [5 ** (1 / 2), fi ** -1, fi, 0].map((number) =>\r\n    Math.round(number * 50)\r\n  );\r\n  const baseGroup7 = [2, 1, fi, fi ** -1].map((number) =>\r\n    Math.round(number * 50)\r\n  );\r\n\r\n  const vertices2D = [];\r\n  let angle = 0;\r\n  for (let i = 0; i < 5; i++) {\r\n    const radAngle = angle * 0.0175;\r\n    vertices2D.push([100*Math.sin(radAngle), -100*Math.cos(radAngle)])\r\n    angle += 72;\r\n  }\r\n\r\n  const combinations = (arr, couple) => {\r\n    arr = arr.map((item) => (item === -0 ? 0 : item));\r\n    if (arr.length > 1) {\r\n      const beg = arr[0];\r\n      const arr1 = combinations(arr.slice(1));\r\n      let l = arr1[0].length;\r\n      const arr2 = [];\r\n      for (let i = 0; i < arr1.length; i++)\r\n        for (let j = 0; j <= l; j++) {\r\n          const newArr = arr1[i]\r\n            .slice(0, j)\r\n            .concat(beg, arr1[i].slice(j))\r\n            .slice(0, copyDimensionOfFigure + 1);\r\n          let inversions = 0;\r\n          for (let i = 0; i < newArr.length; i++) {\r\n            for (let j = i + 1; j < newArr.length; j++) {\r\n              if (newArr[i] > newArr[j]) inversions++;\r\n            }\r\n          }\r\n          if (couple) {\r\n            if (inversions % 2 === 0) {\r\n              arr2.push(newArr);\r\n            }\r\n          } else {\r\n            arr2.push(newArr);\r\n          }\r\n        }\r\n\r\n      return arr2;\r\n    } else return [arr];\r\n  };\r\n\r\n  const minusToPlus = (arr, couple) => {\r\n    let result = [];\r\n    const arrays = [arr];\r\n\r\n    const combineMinuses = (dimensions) => {\r\n      let code = \"\";\r\n      const arr2 = [];\r\n      for (let i = 0; i < dimensions; i++) {\r\n        code += `for(let i${i}=-1;i${i}<=1;i${i}+=2) {`;\r\n        arr2.push(\"i\" + i);\r\n      }\r\n      code += `\r\n        const copyArray = [...arr];\r\n\r\n        const multiplyArray = [${arr2.join(\",\")}].map((item) => +item); \r\n          for (let i = 0; i < arr.length; i++) {\r\n            copyArray[i] = +copyArray[i] * multiplyArray[i];\r\n          }\r\n        arrays.push(copyArray)\r\n      `;\r\n      for (let i = 0; i < dimensions; i++) {\r\n        code += `};`;\r\n      }\r\n      eval(code);\r\n    };\r\n\r\n    combineMinuses(dimensions);\r\n\r\n    if (copyDimensionOfFigure > 3) {\r\n      arrays.forEach((array) => {\r\n        result = [...result, ...combinations(array, couple)];\r\n      });\r\n    } else {\r\n      arrays.forEach((array) => {\r\n        result = [\r\n          ...result,\r\n          array.map((number) => (number === -0 ? 0 : number)),\r\n        ];\r\n      });\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const mixAll = (array, couple) => {\r\n    let variants = [];\r\n    combinations(array, false).forEach((array) => {\r\n      variants = [...variants, ...minusToPlus(array, couple)];\r\n    });\r\n\r\n    const mySet = new Set();\r\n    variants.forEach((element) => {\r\n      mySet.add(element.join(\",\"));\r\n    });\r\n\r\n    return Array.from(mySet).map((item) => item.split(\",\"));\r\n  };\r\n\r\n  const arrayToSetAndToArray = (array) => {\r\n    const mySet = new Set();\r\n    array.forEach((item) => mySet.add(item.join(\",\")));\r\n\r\n    return Array.from(mySet).map((item) =>\r\n      item.split(\",\").map((item) => +item)\r\n    );\r\n  };\r\n\r\n  const especialCombinations = (arr) => {\r\n    const permutations = combinations(arr, true);\r\n    const result = [];\r\n    for (let i = 0; i < permutations.length; i++) {\r\n      let code = \"\";\r\n      const arr2 = [];\r\n      for (let i = 0; i < 4; i++) {\r\n        code += `for(let i${i}=-1;i${i}<=1;i${i}+=2) {`;\r\n        arr2.push(\"i\" + i);\r\n      }\r\n      code += `\r\n        const copyArray = [...permutations[i]];\r\n\r\n        const multiplyArray = [${arr2.join(\",\")}].map((item) => +item); \r\n          for (let i = 0; i < arr.length; i++) {\r\n            copyArray[i] = +copyArray[i] * multiplyArray[i];\r\n          }\r\n        result.push(copyArray)\r\n      `;\r\n      for (let i = 0; i < 4; i++) {\r\n        code += `};`;\r\n      }\r\n      eval(code);\r\n    }\r\n\r\n    const resultSet = new Set();\r\n    result.forEach((el) => {\r\n      resultSet.add(JSON.stringify(el));\r\n    });\r\n    return Array.from(resultSet).map((el) => JSON.parse(el));\r\n  };\r\n\r\n  const group1 = arrayToSetAndToArray(\r\n    +copyDimensionOfFigure === 3 ? minusToPlus(baseGroup1) : mixAll(baseGroup1)\r\n  );\r\n  const group2 = arrayToSetAndToArray(\r\n    +copyDimensionOfFigure === 3 ? minusToPlus(baseGroup2) : mixAll(baseGroup2)\r\n  );\r\n  const group3 = arrayToSetAndToArray(\r\n    +copyDimensionOfFigure === 3 ? minusToPlus(baseGroup3) : mixAll(baseGroup3)\r\n  );\r\n  const group4 = arrayToSetAndToArray(\r\n    +copyDimensionOfFigure === 3 ? minusToPlus(baseGroup4) : mixAll(baseGroup4)\r\n  );\r\n  const group5 = arrayToSetAndToArray(\r\n    +copyDimensionOfFigure === 3\r\n      ? minusToPlus(baseGroup5)\r\n      : especialCombinations(baseGroup5)\r\n  );\r\n  const group6 = arrayToSetAndToArray(especialCombinations(baseGroup6));\r\n  const group7 = arrayToSetAndToArray(especialCombinations(baseGroup7));\r\n\r\n  let vertices = [];\r\n\r\n  if (+copyDimensionOfFigure === 2) {\r\n    vertices = vertices2D;\r\n  }\r\n\r\n  if (+copyDimensionOfFigure === 3) {\r\n    vertices = [...group1, ...group2, ...group3, ...group4];\r\n  }\r\n\r\n  if (+copyDimensionOfFigure > 3) {\r\n    vertices = [\r\n      ...group1,\r\n      ...group2,\r\n      ...group3,\r\n      ...group4,\r\n      ...group5,\r\n      ...group6,\r\n      ...group7,\r\n    ];\r\n  }\r\n\r\n  if (dimensions > copyDimensionOfFigure) {\r\n    vertices = vertices.map((arr) => {\r\n      for (let i = copyDimensionOfFigure + 1; i <= dimensions; i++) {\r\n        arr.push(0);\r\n      }\r\n      return arr;\r\n    });\r\n  }\r\n  setVerticesArray(vertices);\r\n};\r\n\r\nexport default Cell120AnalogVertices;\r\n","const initMatrix = (\r\n    dimension, \r\n    cos1, \r\n    cos2, \r\n    sin1, \r\n    sin2, \r\n    angle\r\n    ) => {\r\n    const matrix = [];\r\n    let row = [];\r\n    let ones = 0;\r\n    let multiplyByMinusOne = false;\r\n    \r\n    for (let i = 0; i < dimension; i++) {\r\n        for (let j = 0; j < dimension; j++) {\r\n            if ((j === cos1 && i === cos1)\r\n            || (j === cos2 && i === cos2)) {\r\n                row.push(Math.cos(+angle));\r\n            } else if ((j === sin1 && i === sin2)\r\n            || (j === sin2 && i === sin1)) {\r\n                !multiplyByMinusOne \r\n                    ? row.push(Math.sin(+angle)) \r\n                    : row.push(Math.sin(+angle) * -1);\r\n            multiplyByMinusOne = true;\r\n            } else if (j === ones) {\r\n                row.push(1);\r\n            } else {\r\n                row.push(0);\r\n            }\r\n        }\r\n\r\n        matrix.push(row);\r\n        row = [];\r\n        ones++;\r\n    }\r\n\r\n    return matrix;\r\n}\r\n\r\nexport default initMatrix;","// === Sylvester ===\r\n// Vector and Matrix mathematics modules for JavaScript\r\n// Copyright (c) 2007 James Coglan\r\n// \r\n// Permission is hereby granted, free of charge, to any person obtaining\r\n// a copy of this software and associated documentation files (the \"Software\"),\r\n// to deal in the Software without restriction, including without limitation\r\n// the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n// and/or sell copies of the Software, and to permit persons to whom the\r\n// Software is furnished to do so, subject to the following conditions:\r\n// \r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n// \r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\r\n// THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n// DEALINGS IN THE SOFTWARE.\r\n\r\nvar Sylvester = {\r\n  version: '0.1.3',\r\n  precision: 1e-6\r\n};\r\n\r\nfunction Vector() {}\r\nVector.prototype = {\r\n\r\n  // Returns element i of the vector\r\n  e: function(i) {\r\n    return (i < 1 || i > this.elements.length) ? null : this.elements[i-1];\r\n  },\r\n\r\n  // Returns the number of elements the vector has\r\n  dimensions: function() {\r\n    return this.elements.length;\r\n  },\r\n\r\n  // Returns the modulus ('length') of the vector\r\n  modulus: function() {\r\n    return Math.sqrt(this.dot(this));\r\n  },\r\n\r\n  // Returns true iff the vector is equal to the argument\r\n  eql: function(vector) {\r\n    var n = this.elements.length;\r\n    var V = vector.elements || vector;\r\n    if (n !== V.length) { return false; }\r\n    do {\r\n      if (Math.abs(this.elements[n-1] - V[n-1]) > Sylvester.precision) { return false; }\r\n    } while (--n);\r\n    return true;\r\n  },\r\n\r\n  // Returns a copy of the vector\r\n  dup: function() {\r\n    return Vector.create(this.elements);\r\n  },\r\n\r\n  // Maps the vector to another vector according to the given function\r\n  map: function(fn) {\r\n    var elements = [];\r\n    this.each(function(x, i) {\r\n      elements.push(fn(x, i));\r\n    });\r\n    return Vector.create(elements);\r\n  },\r\n  \r\n  // Calls the iterator for each element of the vector in turn\r\n  each: function(fn) {\r\n    var n = this.elements.length, k = n, i;\r\n    do { i = k - n;\r\n      fn(this.elements[i], i+1);\r\n    } while (--n);\r\n  },\r\n\r\n  // Returns a new vector created by normalizing the receiver\r\n  toUnitVector: function() {\r\n    var r = this.modulus();\r\n    if (r === 0) { return this.dup(); }\r\n    return this.map(function(x) { return x/r; });\r\n  },\r\n\r\n  // Returns the angle between the vector and the argument (also a vector)\r\n  angleFrom: function(vector) {\r\n    var V = vector.elements || vector;\r\n    var n = this.elements.length;\r\n    if (n !== V.length) { return null; }\r\n    var dot = 0, mod1 = 0, mod2 = 0;\r\n    // Work things out in parallel to save time\r\n    this.each(function(x, i) {\r\n      dot += x * V[i-1];\r\n      mod1 += x * x;\r\n      mod2 += V[i-1] * V[i-1];\r\n    });\r\n    mod1 = Math.sqrt(mod1); mod2 = Math.sqrt(mod2);\r\n    if (mod1*mod2 === 0) { return null; }\r\n    var theta = dot / (mod1*mod2);\r\n    if (theta < -1) { theta = -1; }\r\n    if (theta > 1) { theta = 1; }\r\n    return Math.acos(theta);\r\n  },\r\n\r\n  // Returns true iff the vector is parallel to the argument\r\n  isParallelTo: function(vector) {\r\n    var angle = this.angleFrom(vector);\r\n    return (angle === null) ? null : (angle <= Sylvester.precision);\r\n  },\r\n\r\n  // Returns true iff the vector is antiparallel to the argument\r\n  isAntiparallelTo: function(vector) {\r\n    var angle = this.angleFrom(vector);\r\n    return (angle === null) ? null : (Math.abs(angle - Math.PI) <= Sylvester.precision);\r\n  },\r\n\r\n  // Returns true iff the vector is perpendicular to the argument\r\n  isPerpendicularTo: function(vector) {\r\n    var dot = this.dot(vector);\r\n    return (dot === null) ? null : (Math.abs(dot) <= Sylvester.precision);\r\n  },\r\n\r\n  // Returns the result of adding the argument to the vector\r\n  add: function(vector) {\r\n    var V = vector.elements || vector;\r\n    if (this.elements.length !== V.length) { return null; }\r\n    return this.map(function(x, i) { return x + V[i-1]; });\r\n  },\r\n\r\n  // Returns the result of subtracting the argument from the vector\r\n  subtract: function(vector) {\r\n    var V = vector.elements || vector;\r\n    if (this.elements.length !== V.length) { return null; }\r\n    return this.map(function(x, i) { return x - V[i-1]; });\r\n  },\r\n\r\n  // Returns the result of multiplying the elements of the vector by the argument\r\n  multiply: function(k) {\r\n    return this.map(function(x) { return x*k; });\r\n  },\r\n\r\n  x: function(k) { return this.multiply(k); },\r\n\r\n  // Returns the scalar product of the vector with the argument\r\n  // Both vectors must have equal dimensionality\r\n  dot: function(vector) {\r\n    var V = vector.elements || vector;\r\n    var product = 0, n = this.elements.length;\r\n    if (n !== V.length) { return null; }\r\n    do { product += this.elements[n-1] * V[n-1]; } while (--n);\r\n    return product;\r\n  },\r\n\r\n  // Returns the vector product of the vector with the argument\r\n  // Both vectors must have dimensionality 3\r\n  cross: function(vector) {\r\n    var B = vector.elements || vector;\r\n    if (this.elements.length !== 3 || B.length !== 3) { return null; }\r\n    var A = this.elements;\r\n    return Vector.create([\r\n      (A[1] * B[2]) - (A[2] * B[1]),\r\n      (A[2] * B[0]) - (A[0] * B[2]),\r\n      (A[0] * B[1]) - (A[1] * B[0])\r\n    ]);\r\n  },\r\n\r\n  // Returns the (absolute) largest element of the vector\r\n  max: function() {\r\n    var m = 0, n = this.elements.length, k = n, i;\r\n    do { i = k - n;\r\n      if (Math.abs(this.elements[i]) > Math.abs(m)) { m = this.elements[i]; }\r\n    } while (--n);\r\n    return m;\r\n  },\r\n\r\n  // Returns the index of the first match found\r\n  indexOf: function(x) {\r\n    var index = null, n = this.elements.length, k = n, i;\r\n    do { i = k - n;\r\n      if (index === null && this.elements[i] === x) {\r\n        index = i + 1;\r\n      }\r\n    } while (--n);\r\n    return index;\r\n  },\r\n\r\n  // Returns a diagonal matrix with the vector's elements as its diagonal elements\r\n  toDiagonalMatrix: function() {\r\n    return Matrix.Diagonal(this.elements);\r\n  },\r\n\r\n  // Returns the result of rounding the elements of the vector\r\n  round: function() {\r\n    return this.map(function(x) { return Math.round(x); });\r\n  },\r\n\r\n  // Returns a copy of the vector with elements set to the given value if they\r\n  // differ from it by less than Sylvester.precision\r\n  snapTo: function(x) {\r\n    return this.map(function(y) {\r\n      return (Math.abs(y - x) <= Sylvester.precision) ? x : y;\r\n    });\r\n  },\r\n\r\n  // Returns the vector's distance from the argument, when considered as a point in space\r\n  distanceFrom: function(obj) {\r\n    if (obj.anchor) { return obj.distanceFrom(this); }\r\n    var V = obj.elements || obj;\r\n    if (V.length !== this.elements.length) { return null; }\r\n    var sum = 0, part;\r\n    this.each(function(x, i) {\r\n      part = x - V[i-1];\r\n      sum += part * part;\r\n    });\r\n    return Math.sqrt(sum);\r\n  },\r\n\r\n  // Returns true if the vector is point on the given line\r\n  liesOn: function(line) {\r\n    return line.contains(this);\r\n  },\r\n\r\n  // Return true iff the vector is a point in the given plane\r\n  liesIn: function(plane) {\r\n    return plane.contains(this);\r\n  },\r\n\r\n  // Rotates the vector about the given object. The object should be a \r\n  // point if the vector is 2D, and a line if it is 3D. Be careful with line directions!\r\n  rotate: function(t, obj) {\r\n    var V, R, x, y, z;\r\n    switch (this.elements.length) {\r\n      case 2:\r\n        V = obj.elements || obj;\r\n        if (V.length !== 2) { return null; }\r\n        R = Matrix.Rotation(t).elements;\r\n        x = this.elements[0] - V[0];\r\n        y = this.elements[1] - V[1];\r\n        return Vector.create([\r\n          V[0] + R[0][0] * x + R[0][1] * y,\r\n          V[1] + R[1][0] * x + R[1][1] * y\r\n        ]);\r\n      case 3:\r\n        if (!obj.direction) { return null; }\r\n        var C = obj.pointClosestTo(this).elements;\r\n        R = Matrix.Rotation(t, obj.direction).elements;\r\n        x = this.elements[0] - C[0];\r\n        y = this.elements[1] - C[1];\r\n        z = this.elements[2] - C[2];\r\n        return Vector.create([\r\n          C[0] + R[0][0] * x + R[0][1] * y + R[0][2] * z,\r\n          C[1] + R[1][0] * x + R[1][1] * y + R[1][2] * z,\r\n          C[2] + R[2][0] * x + R[2][1] * y + R[2][2] * z\r\n        ]);\r\n      default:\r\n        return null;\r\n    }\r\n  },\r\n\r\n  // Returns the result of reflecting the point in the given point, line or plane\r\n  reflectionIn: function(obj) {\r\n    if (obj.anchor) {\r\n      // obj is a plane or line\r\n      var P = this.elements.slice();\r\n      var C = obj.pointClosestTo(P).elements;\r\n      return Vector.create([C[0] + (C[0] - P[0]), C[1] + (C[1] - P[1]), C[2] + (C[2] - (P[2] || 0))]);\r\n    } else {\r\n      // obj is a point\r\n      var Q = obj.elements || obj;\r\n      if (this.elements.length !== Q.length) { return null; }\r\n      return this.map(function(x, i) { return Q[i-1] + (Q[i-1] - x); });\r\n    }\r\n  },\r\n\r\n  // Utility to make sure vectors are 3D. If they are 2D, a zero z-component is added\r\n  to3D: function() {\r\n    var V = this.dup();\r\n    switch (V.elements.length) {\r\n      case 3: break;\r\n      case 2: V.elements.push(0); break;\r\n      default: return null;\r\n    }\r\n    return V;\r\n  },\r\n\r\n  // Returns a string representation of the vector\r\n  inspect: function() {\r\n    return '[' + this.elements.join(', ') + ']';\r\n  },\r\n\r\n  // Set vector's elements from an array\r\n  setElements: function(els) {\r\n    this.elements = (els.elements || els).slice();\r\n    return this;\r\n  }\r\n};\r\n  \r\n// Constructor function\r\nVector.create = function(elements) {\r\n  var V = new Vector();\r\n  return V.setElements(elements);\r\n};\r\n\r\n// i, j, k unit vectors\r\nVector.i = Vector.create([1,0,0]);\r\nVector.j = Vector.create([0,1,0]);\r\nVector.k = Vector.create([0,0,1]);\r\n\r\n// Random vector of size n\r\nVector.Random = function(n) {\r\n  var elements = [];\r\n  do { elements.push(Math.random());\r\n  } while (--n);\r\n  return Vector.create(elements);\r\n};\r\n\r\n// Vector filled with zeros\r\nVector.Zero = function(n) {\r\n  var elements = [];\r\n  do { elements.push(0);\r\n  } while (--n);\r\n  return Vector.create(elements);\r\n};\r\n\r\n\r\n\r\nexport function Matrix() {}\r\nMatrix.prototype = {\r\n\r\n  // Returns element (i,j) of the matrix\r\n  e: function(i,j) {\r\n    if (i < 1 || i > this.elements.length || j < 1 || j > this.elements[0].length) { return null; }\r\n    return this.elements[i-1][j-1];\r\n  },\r\n\r\n  // Returns row k of the matrix as a vector\r\n  row: function(i) {\r\n    if (i > this.elements.length) { return null; }\r\n    return Vector.create(this.elements[i-1]);\r\n  },\r\n\r\n  // Returns column k of the matrix as a vector\r\n  col: function(j) {\r\n    if (j > this.elements[0].length) { return null; }\r\n    var col = [], n = this.elements.length, k = n, i;\r\n    do { i = k - n;\r\n      col.push(this.elements[i][j-1]);\r\n    } while (--n);\r\n    return Vector.create(col);\r\n  },\r\n\r\n  // Returns the number of rows/columns the matrix has\r\n  dimensions: function() {\r\n    return {rows: this.elements.length, cols: this.elements[0].length};\r\n  },\r\n\r\n  // Returns the number of rows in the matrix\r\n  rows: function() {\r\n    return this.elements.length;\r\n  },\r\n\r\n  // Returns the number of columns in the matrix\r\n  cols: function() {\r\n    return this.elements[0].length;\r\n  },\r\n\r\n  // Returns true iff the matrix is equal to the argument. You can supply\r\n  // a vector as the argument, in which case the receiver must be a\r\n  // one-column matrix equal to the vector.\r\n  eql: function(matrix) {\r\n    var M = matrix.elements || matrix;\r\n    if (typeof(M[0][0]) == 'undefined') { M = Matrix.create(M).elements; }\r\n    if (this.elements.length !== M.length ||\r\n        this.elements[0].length !== M[0].length) { return false; }\r\n    var ni = this.elements.length, ki = ni, i, nj, kj = this.elements[0].length, j;\r\n    do { i = ki - ni;\r\n      nj = kj;\r\n      do { j = kj - nj;\r\n        if (Math.abs(this.elements[i][j] - M[i][j]) > Sylvester.precision) { return false; }\r\n      } while (--nj);\r\n    } while (--ni);\r\n    return true;\r\n  },\r\n\r\n  // Returns a copy of the matrix\r\n  dup: function() {\r\n    return Matrix.create(this.elements);\r\n  },\r\n\r\n  // Maps the matrix to another matrix (of the same dimensions) according to the given function\r\n  map: function(fn) {\r\n    var els = [], ni = this.elements.length, ki = ni, i, nj, kj = this.elements[0].length, j;\r\n    do { i = ki - ni;\r\n      nj = kj;\r\n      els[i] = [];\r\n      do { j = kj - nj;\r\n        els[i][j] = fn(this.elements[i][j], i + 1, j + 1);\r\n      } while (--nj);\r\n    } while (--ni);\r\n    return Matrix.create(els);\r\n  },\r\n\r\n  // Returns true iff the argument has the same dimensions as the matrix\r\n  isSameSizeAs: function(matrix) {\r\n    var M = matrix.elements || matrix;\r\n    if (typeof(M[0][0]) === 'undefined') { M = Matrix.create(M).elements; }\r\n    return (this.elements.length === M.length &&\r\n        this.elements[0].length === M[0].length);\r\n  },\r\n\r\n  // Returns the result of adding the argument to the matrix\r\n  add: function(matrix) {\r\n    var M = matrix.elements || matrix;\r\n    if (typeof(M[0][0]) == 'undefined') { M = Matrix.create(M).elements; }\r\n    if (!this.isSameSizeAs(M)) { return null; }\r\n    return this.map(function(x, i, j) { return x + M[i-1][j-1]; });\r\n  },\r\n\r\n  // Returns the result of subtracting the argument from the matrix\r\n  subtract: function(matrix) {\r\n    var M = matrix.elements || matrix;\r\n    if (typeof(M[0][0]) == 'undefined') { M = Matrix.create(M).elements; }\r\n    if (!this.isSameSizeAs(M)) { return null; }\r\n    return this.map(function(x, i, j) { return x - M[i-1][j-1]; });\r\n  },\r\n\r\n  // Returns true iff the matrix can multiply the argument from the left\r\n  canMultiplyFromLeft: function(matrix) {\r\n    var M = matrix.elements || matrix;\r\n    if (typeof(M[0][0]) == 'undefined') { M = Matrix.create(M).elements; }\r\n    // this.columns should equal matrix.rows\r\n    return (this.elements[0].length === M.length);\r\n  },\r\n\r\n  // Returns the result of multiplying the matrix from the right by the argument.\r\n  // If the argument is a scalar then just multiply all the elements. If the argument is\r\n  // a vector, a vector is returned, which saves you having to remember calling\r\n  // col(1) on the result.\r\n  multiply: function(matrix) {\r\n    if (!matrix.elements) {\r\n      return this.map(function(x) { return x * matrix; });\r\n    }\r\n    var returnVector = matrix.modulus ? true : false;\r\n    var M = matrix.elements || matrix;\r\n    if (typeof(M[0][0]) == 'undefined') { M = Matrix.create(M).elements; }\r\n    if (!this.canMultiplyFromLeft(M)) { return null; }\r\n    var ni = this.elements.length, ki = ni, i, nj, kj = M[0].length, j;\r\n    var cols = this.elements[0].length, elements = [], sum, nc, c;\r\n    do { i = ki - ni;\r\n      elements[i] = [];\r\n      nj = kj;\r\n      do { j = kj - nj;\r\n        sum = 0;\r\n        nc = cols;\r\n        do { c = cols - nc;\r\n          sum += this.elements[i][c] * M[c][j];\r\n        } while (--nc);\r\n        elements[i][j] = sum;\r\n      } while (--nj);\r\n    } while (--ni);\r\n    M = Matrix.create(elements);\r\n    return returnVector ? M.col(1) : M;\r\n  },\r\n\r\n  x: function(matrix) { return this.multiply(matrix); },\r\n\r\n  // Returns a submatrix taken from the matrix\r\n  // Argument order is: start row, start col, nrows, ncols\r\n  // Element selection wraps if the required index is outside the matrix's bounds, so you could\r\n  // use this to perform row/column cycling or copy-augmenting.\r\n  minor: function(a, b, c, d) {\r\n    var elements = [], ni = c, i, nj, j;\r\n    var rows = this.elements.length, cols = this.elements[0].length;\r\n    do { i = c - ni;\r\n      elements[i] = [];\r\n      nj = d;\r\n      do { j = d - nj;\r\n        elements[i][j] = this.elements[(a+i-1)%rows][(b+j-1)%cols];\r\n      } while (--nj);\r\n    } while (--ni);\r\n    return Matrix.create(elements);\r\n  },\r\n\r\n  // Returns the transpose of the matrix\r\n  transpose: function() {\r\n    var rows = this.elements.length, cols = this.elements[0].length;\r\n    var elements = [], ni = cols, i, nj, j;\r\n    do { i = cols - ni;\r\n      elements[i] = [];\r\n      nj = rows;\r\n      do { j = rows - nj;\r\n        elements[i][j] = this.elements[j][i];\r\n      } while (--nj);\r\n    } while (--ni);\r\n    return Matrix.create(elements);\r\n  },\r\n\r\n  // Returns true iff the matrix is hypercube\r\n  isSquare: function() {\r\n    return (this.elements.length === this.elements[0].length);\r\n  },\r\n\r\n  // Returns the (absolute) largest element of the matrix\r\n  max: function() {\r\n    var m = 0, ni = this.elements.length, ki = ni, i, nj, kj = this.elements[0].length, j;\r\n    do { i = ki - ni;\r\n      nj = kj;\r\n      do { j = kj - nj;\r\n        if (Math.abs(this.elements[i][j]) > Math.abs(m)) { m = this.elements[i][j]; }\r\n      } while (--nj);\r\n    } while (--ni);\r\n    return m;\r\n  },\r\n\r\n  // Returns the indeces of the first match found by reading row-by-row from left to right\r\n  indexOf: function(x) {\r\n    var ni = this.elements.length, ki = ni, i, nj, kj = this.elements[0].length, j;\r\n    do { i = ki - ni;\r\n      nj = kj;\r\n      do { j = kj - nj;\r\n        if (this.elements[i][j] === x) { return {i: i+1, j: j+1}; }\r\n      } while (--nj);\r\n    } while (--ni);\r\n    return null;\r\n  },\r\n\r\n  // If the matrix is hypercube, returns the diagonal elements as a vector.\r\n  // Otherwise, returns null.\r\n  diagonal: function() {\r\n    if (!this.isSquare) { return null; }\r\n    var els = [], n = this.elements.length, k = n, i;\r\n    do { i = k - n;\r\n      els.push(this.elements[i][i]);\r\n    } while (--n);\r\n    return Vector.create(els);\r\n  },\r\n\r\n  // Make the matrix upper (right) triangular by Gaussian elimination.\r\n  // This method only adds multiples of rows to other rows. No rows are\r\n  // scaled up or switched, and the determinant is preserved.\r\n  toRightTriangular: function() {\r\n    var M = this.dup(), els;\r\n    var n = this.elements.length, k = n, i, np, kp = this.elements[0].length, p;\r\n    do { i = k - n;\r\n      if (M.elements[i][i] === 0) {\r\n        for (let j = i + 1; j < k; j++) {\r\n          if (M.elements[j][i] !== 0) {\r\n            els = []; np = kp;\r\n            do { p = kp - np;\r\n              els.push(M.elements[i][p] + M.elements[j][p]);\r\n            } while (--np);\r\n            M.elements[i] = els;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if (M.elements[i][i] !== 0) {\r\n        for (let j = i + 1; j < k; j++) {\r\n          var multiplier = M.elements[j][i] / M.elements[i][i];\r\n          els = []; np = kp;\r\n          do { p = kp - np;\r\n            // Elements with column numbers up to an including the number\r\n            // of the row that we're subtracting can safely be set straight to\r\n            // zero, since that's the point of this routine and it avoids having\r\n            // to loop over and correct rounding errors later\r\n            els.push(p <= i ? 0 : M.elements[j][p] - M.elements[i][p] * multiplier);\r\n          } while (--np);\r\n          M.elements[j] = els;\r\n        }\r\n      }\r\n    } while (--n);\r\n    return M;\r\n  },\r\n\r\n  toUpperTriangular: function() { return this.toRightTriangular(); },\r\n\r\n  // Returns the determinant for hypercube matrices\r\n  determinant: function() {\r\n    if (!this.isSquare()) { return null; }\r\n    var M = this.toRightTriangular();\r\n    var det = M.elements[0][0], n = M.elements.length - 1, k = n, i;\r\n    do { i = k - n + 1;\r\n      det = det * M.elements[i][i];\r\n    } while (--n);\r\n    return det;\r\n  },\r\n\r\n  det: function() { return this.determinant(); },\r\n\r\n  // Returns true iff the matrix is singular\r\n  isSingular: function() {\r\n    return (this.isSquare() && this.determinant() === 0);\r\n  },\r\n\r\n  // Returns the trace for hypercube matrices\r\n  trace: function() {\r\n    if (!this.isSquare()) { return null; }\r\n    var tr = this.elements[0][0], n = this.elements.length - 1, k = n, i;\r\n    do { i = k - n + 1;\r\n      tr += this.elements[i][i];\r\n    } while (--n);\r\n    return tr;\r\n  },\r\n\r\n  tr: function() { return this.trace(); },\r\n\r\n  // Returns the rank of the matrix\r\n  rank: function() {\r\n    var M = this.toRightTriangular(), rank = 0;\r\n    var ni = this.elements.length, ki = ni, i, nj, kj = this.elements[0].length, j;\r\n    do { i = ki - ni;\r\n      nj = kj;\r\n      do { j = kj - nj;\r\n        if (Math.abs(M.elements[i][j]) > Sylvester.precision) { rank++; break; }\r\n      } while (--nj);\r\n    } while (--ni);\r\n    return rank;\r\n  },\r\n  \r\n  rk: function() { return this.rank(); },\r\n\r\n  // Returns the result of attaching the given argument to the right-hand side of the matrix\r\n  augment: function(matrix) {\r\n    var M = matrix.elements || matrix;\r\n    if (typeof(M[0][0]) == 'undefined') { M = Matrix.create(M).elements; }\r\n    var T = this.dup(), cols = T.elements[0].length;\r\n    var ni = T.elements.length, ki = ni, i, nj, kj = M[0].length, j;\r\n    if (ni !== M.length) { return null; }\r\n    do { i = ki - ni;\r\n      nj = kj;\r\n      do { j = kj - nj;\r\n        T.elements[i][cols + j] = M[i][j];\r\n      } while (--nj);\r\n    } while (--ni);\r\n    return T;\r\n  },\r\n\r\n  // Returns the inverse (if one exists) using Gauss-Jordan\r\n  inverse: function() {\r\n    if (!this.isSquare() || this.isSingular()) { return null; }\r\n    var ni = this.elements.length, ki = ni, i, j;\r\n    var M = this.augment(Matrix.I(ni)).toRightTriangular();\r\n    var np, kp = M.elements[0].length, p, els, divisor;\r\n    var inverse_elements = [], new_element;\r\n    // Matrix is non-singular so there will be no zeros on the diagonal\r\n    // Cycle through rows from last to first\r\n    do { i = ni - 1;\r\n      // First, normalise diagonal elements to 1\r\n      els = []; np = kp;\r\n      inverse_elements[i] = [];\r\n      divisor = M.elements[i][i];\r\n      do { p = kp - np;\r\n        new_element = M.elements[i][p] / divisor;\r\n        els.push(new_element);\r\n        // Shuffle of the current row of the right hand side into the results\r\n        // array as it will not be modified by later runs through this loop\r\n        if (p >= ki) { inverse_elements[i].push(new_element); }\r\n      } while (--np);\r\n      M.elements[i] = els;\r\n      // Then, subtract this row from those above it to\r\n      // give the identity matrix on the left hand side\r\n      for (j = 0; j < i; j++) {\r\n        els = []; np = kp;\r\n        do { p = kp - np;\r\n          els.push(M.elements[j][p] - M.elements[i][p] * M.elements[j][i]);\r\n        } while (--np);\r\n        M.elements[j] = els;\r\n      }\r\n    } while (--ni);\r\n    return Matrix.create(inverse_elements);\r\n  },\r\n\r\n  inv: function() { return this.inverse(); },\r\n\r\n  // Returns the result of rounding all the elements\r\n  round: function() {\r\n    return this.map(function(x) { return Math.round(x); });\r\n  },\r\n\r\n  // Returns a copy of the matrix with elements set to the given value if they\r\n  // differ from it by less than Sylvester.precision\r\n  snapTo: function(x) {\r\n    return this.map(function(p) {\r\n      return (Math.abs(p - x) <= Sylvester.precision) ? x : p;\r\n    });\r\n  },\r\n\r\n  // Returns a string representation of the matrix\r\n  inspect: function() {\r\n    var matrix_rows = [];\r\n    var n = this.elements.length, k = n, i;\r\n    do { i = k - n;\r\n      matrix_rows.push(Vector.create(this.elements[i]).inspect());\r\n    } while (--n);\r\n    return matrix_rows.join('\\n');\r\n  },\r\n\r\n  // Set the matrix's elements from an array. If the argument passed\r\n  // is a vector, the resulting matrix will be a single column.\r\n  setElements: function(els) {\r\n    var i, elements = els.elements || els;\r\n    if (typeof(elements[0][0]) != 'undefined') {\r\n      var ni = elements.length, ki = ni, nj, kj, j;\r\n      this.elements = [];\r\n      do { i = ki - ni;\r\n        nj = elements[i].length; kj = nj;\r\n        this.elements[i] = [];\r\n        do { j = kj - nj;\r\n          this.elements[i][j] = elements[i][j];\r\n        } while (--nj);\r\n      } while(--ni);\r\n      return this;\r\n    }\r\n    var n = elements.length, k = n;\r\n    this.elements = [];\r\n    do { i = k - n;\r\n      this.elements.push([elements[i]]);\r\n    } while (--n);\r\n    return this;\r\n  }\r\n};\r\n\r\n// Constructor function\r\nMatrix.create = function(elements) {\r\n  var M = new Matrix();\r\n  return M.setElements(elements);\r\n};\r\n\r\n// Identity matrix of size n\r\nMatrix.I = function(n) {\r\n  var els = [], k = n, i, nj, j;\r\n  do { i = k - n;\r\n    els[i] = []; nj = k;\r\n    do { j = k - nj;\r\n      els[i][j] = (i === j) ? 1 : 0;\r\n    } while (--nj);\r\n  } while (--n);\r\n  return Matrix.create(els);\r\n};\r\n\r\n// Diagonal matrix - all off-diagonal elements are zero\r\nMatrix.Diagonal = function(elements) {\r\n  var n = elements.length, k = n, i;\r\n  var M = Matrix.I(n);\r\n  do { i = k - n;\r\n    M.elements[i][i] = elements[i];\r\n  } while (--n);\r\n  return M;\r\n};\r\n\r\n// Rotation matrix about some axis. If no axis is\r\n// supplied, assume we're after a 2D transform\r\nMatrix.Rotation = function(theta, a) {\r\n  if (!a) {\r\n    return Matrix.create([\r\n      [Math.cos(theta),  -Math.sin(theta)],\r\n      [Math.sin(theta),   Math.cos(theta)]\r\n    ]);\r\n  }\r\n  var axis = a.dup();\r\n  if (axis.elements.length !== 3) { return null; }\r\n  var mod = axis.modulus();\r\n  var x = axis.elements[0]/mod, y = axis.elements[1]/mod, z = axis.elements[2]/mod;\r\n  var s = Math.sin(theta), c = Math.cos(theta), t = 1 - c;\r\n  // Formula derived here: http://www.gamedev.net/reference/articles/article1199.asp\r\n  // That proof rotates the co-ordinate system so theta\r\n  // becomes -theta and sin becomes -sin here.\r\n  return Matrix.create([\r\n    [ t*x*x + c, t*x*y - s*z, t*x*z + s*y ],\r\n    [ t*x*y + s*z, t*y*y + c, t*y*z - s*x ],\r\n    [ t*x*z - s*y, t*y*z + s*x, t*z*z + c ]\r\n  ]);\r\n};\r\n\r\n// Special case rotations\r\nMatrix.RotationX = function(t) {\r\n  var c = Math.cos(t), s = Math.sin(t);\r\n  return Matrix.create([\r\n    [  1,  0,  0 ],\r\n    [  0,  c, -s ],\r\n    [  0,  s,  c ]\r\n  ]);\r\n};\r\nMatrix.RotationY = function(t) {\r\n  var c = Math.cos(t), s = Math.sin(t);\r\n  return Matrix.create([\r\n    [  c,  0,  s ],\r\n    [  0,  1,  0 ],\r\n    [ -s,  0,  c ]\r\n  ]);\r\n};\r\nMatrix.RotationZ = function(t) {\r\n  var c = Math.cos(t), s = Math.sin(t);\r\n  return Matrix.create([\r\n    [  c, -s,  0 ],\r\n    [  s,  c,  0 ],\r\n    [  0,  0,  1 ]\r\n  ]);\r\n};\r\n\r\n// Random matrix of n rows, m columns\r\nMatrix.Random = function(n, m) {\r\n  return Matrix.Zero(n, m).map(\r\n    function() { return Math.random(); }\r\n  );\r\n};\r\n\r\n// Matrix filled with zeros\r\nMatrix.Zero = function(n, m) {\r\n  var els = [], ni = n, i, nj, j;\r\n  do { i = n - ni;\r\n    els[i] = [];\r\n    nj = m;\r\n    do { j = m - nj;\r\n      els[i][j] = 0;\r\n    } while (--nj);\r\n  } while (--ni);\r\n  return Matrix.create(els);\r\n};\r\n\r\n\r\n\r\nfunction Line() {}\r\nLine.prototype = {\r\n\r\n  // Returns true if the argument occupies the same space as the line\r\n  eql: function(line) {\r\n    return (this.isParallelTo(line) && this.contains(line.anchor));\r\n  },\r\n\r\n  // Returns a copy of the line\r\n  dup: function() {\r\n    return Line.create(this.anchor, this.direction);\r\n  },\r\n\r\n  // Returns the result of translating the line by the given vector/array\r\n  translate: function(vector) {\r\n    var V = vector.elements || vector;\r\n    return Line.create([\r\n      this.anchor.elements[0] + V[0],\r\n      this.anchor.elements[1] + V[1],\r\n      this.anchor.elements[2] + (V[2] || 0)\r\n    ], this.direction);\r\n  },\r\n\r\n  // Returns true if the line is parallel to the argument. Here, 'parallel to'\r\n  // means that the argument's direction is either parallel or antiparallel to\r\n  // the line's own direction. A line is parallel to a plane if the two do not\r\n  // have a unique intersection.\r\n  isParallelTo: function(obj) {\r\n    if (obj.normal) { return obj.isParallelTo(this); }\r\n    var theta = this.direction.angleFrom(obj.direction);\r\n    return (Math.abs(theta) <= Sylvester.precision || Math.abs(theta - Math.PI) <= Sylvester.precision);\r\n  },\r\n\r\n  // Returns the line's perpendicular distance from the argument,\r\n  // which can be a point, a line or a plane\r\n  distanceFrom: function(obj) {\r\n    if (obj.normal) { return obj.distanceFrom(this); }\r\n    if (obj.direction) {\r\n      // obj is a line\r\n      if (this.isParallelTo(obj)) { return this.distanceFrom(obj.anchor); }\r\n      var N = this.direction.cross(obj.direction).toUnitVector().elements;\r\n      var A = this.anchor.elements, B = obj.anchor.elements;\r\n      return Math.abs((A[0] - B[0]) * N[0] + (A[1] - B[1]) * N[1] + (A[2] - B[2]) * N[2]);\r\n    } else {\r\n      // obj is a point\r\n      var P = obj.elements || obj;\r\n      var D = this.direction.elements;\r\n      var PA1 = P[0] - A[0], PA2 = P[1] - A[1], PA3 = (P[2] || 0) - A[2];\r\n      var modPA = Math.sqrt(PA1*PA1 + PA2*PA2 + PA3*PA3);\r\n      if (modPA === 0) return 0;\r\n      // Assumes direction vector is normalized\r\n      var cosTheta = (PA1 * D[0] + PA2 * D[1] + PA3 * D[2]) / modPA;\r\n      var sin2 = 1 - cosTheta*cosTheta;\r\n      return Math.abs(modPA * Math.sqrt(sin2 < 0 ? 0 : sin2));\r\n    }\r\n  },\r\n\r\n  // Returns true iff the argument is a point on the line\r\n  contains: function(point) {\r\n    var dist = this.distanceFrom(point);\r\n    return (dist !== null && dist <= Sylvester.precision);\r\n  },\r\n\r\n  // Returns true iff the line lies in the given plane\r\n  liesIn: function(plane) {\r\n    return plane.contains(this);\r\n  },\r\n\r\n  // Returns true iff the line has a unique point of intersection with the argument\r\n  intersects: function(obj) {\r\n    if (obj.normal) { return obj.intersects(this); }\r\n    return (!this.isParallelTo(obj) && this.distanceFrom(obj) <= Sylvester.precision);\r\n  },\r\n\r\n  // Returns the unique intersection point with the argument, if one exists\r\n  intersectionWith: function(obj) {\r\n    if (obj.normal) { return obj.intersectionWith(this); }\r\n    if (!this.intersects(obj)) { return null; }\r\n    var P = this.anchor.elements, X = this.direction.elements,\r\n        Q = obj.anchor.elements, Y = obj.direction.elements;\r\n    var X1 = X[0], X2 = X[1], X3 = X[2], Y1 = Y[0], Y2 = Y[1], Y3 = Y[2];\r\n    var PsubQ1 = P[0] - Q[0], PsubQ2 = P[1] - Q[1], PsubQ3 = P[2] - Q[2];\r\n    var XdotQsubP = - X1*PsubQ1 - X2*PsubQ2 - X3*PsubQ3;\r\n    var YdotPsubQ = Y1*PsubQ1 + Y2*PsubQ2 + Y3*PsubQ3;\r\n    var XdotX = X1*X1 + X2*X2 + X3*X3;\r\n    var YdotY = Y1*Y1 + Y2*Y2 + Y3*Y3;\r\n    var XdotY = X1*Y1 + X2*Y2 + X3*Y3;\r\n    var k = (XdotQsubP * YdotY / XdotX + XdotY * YdotPsubQ) / (YdotY - XdotY * XdotY);\r\n    return Vector.create([P[0] + k*X1, P[1] + k*X2, P[2] + k*X3]);\r\n  },\r\n\r\n  // Returns the point on the line that is closest to the given point or line\r\n  pointClosestTo: function(obj) {\r\n    if (obj.direction) {\r\n      // obj is a line\r\n      if (this.intersects(obj)) { return this.intersectionWith(obj); }\r\n      if (this.isParallelTo(obj)) { return null; }\r\n      var D = this.direction.elements, E = obj.direction.elements;\r\n      var D1 = D[0], D2 = D[1], D3 = D[2], E1 = E[0], E2 = E[1], E3 = E[2];\r\n      // Create plane containing obj and the shared normal and intersect this with it\r\n      // Thank you: http://www.cgafaq.info/wiki/Line-line_distance\r\n      var x = (D3 * E1 - D1 * E3), y = (D1 * E2 - D2 * E1), z = (D2 * E3 - D3 * E2);\r\n      var N = Vector.create([x * E3 - y * E2, y * E1 - z * E3, z * E2 - x * E1]);\r\n      var P = Plane.create(obj.anchor, N);\r\n      return P.intersectionWith(this);\r\n    } else {\r\n      // obj is a point\r\n      if (this.contains(P)) { return Vector.create(P); }\r\n      var V = Vector.create([D2 * x - D3 * z, D3 * y - D1 * x, D1 * z - D2 * y]);\r\n      var k = this.distanceFrom(P) / V.modulus();\r\n      return Vector.create([\r\n        P[0] + V.elements[0] * k,\r\n        P[1] + V.elements[1] * k,\r\n        (P[2] || 0) + V.elements[2] * k\r\n      ]);\r\n    }\r\n  },\r\n\r\n  // Returns a copy of the line rotated by t radians about the given line. Works by\r\n  // finding the argument's closest point to this line's anchor point (call this C) and\r\n  // rotating the anchor about C. Also rotates the line's direction about the argument's.\r\n  // Be careful with this - the rotation axis' direction affects the outcome!\r\n  rotate: function(t, line) {\r\n    // If we're working in 2D\r\n    if (typeof(line.direction) == 'undefined') { line = Line.create(line.to3D(), Vector.k); }\r\n    var R = Matrix.Rotation(t, line.direction).elements;\r\n    var C = line.pointClosestTo(this.anchor).elements;\r\n    var A = this.anchor.elements, D = this.direction.elements;\r\n    var C1 = C[0], C2 = C[1], C3 = C[2], A1 = A[0], A2 = A[1], A3 = A[2];\r\n    var x = A1 - C1, y = A2 - C2, z = A3 - C3;\r\n    return Line.create([\r\n      C1 + R[0][0] * x + R[0][1] * y + R[0][2] * z,\r\n      C2 + R[1][0] * x + R[1][1] * y + R[1][2] * z,\r\n      C3 + R[2][0] * x + R[2][1] * y + R[2][2] * z\r\n    ], [\r\n      R[0][0] * D[0] + R[0][1] * D[1] + R[0][2] * D[2],\r\n      R[1][0] * D[0] + R[1][1] * D[1] + R[1][2] * D[2],\r\n      R[2][0] * D[0] + R[2][1] * D[1] + R[2][2] * D[2]\r\n    ]);\r\n  },\r\n\r\n  // Returns the line's reflection in the given point or line\r\n  reflectionIn: function(obj) {\r\n    if (obj.normal) {\r\n      // obj is a plane\r\n      var A = this.anchor.elements, D = this.direction.elements;\r\n      var A1 = A[0], A2 = A[1], A3 = A[2], D1 = D[0], D2 = D[1], D3 = D[2];\r\n      var newA = this.anchor.reflectionIn(obj).elements;\r\n      // Add the line's direction vector to its anchor, then mirror that in the plane\r\n      var AD1 = A1 + D1, AD2 = A2 + D2, AD3 = A3 + D3;\r\n      var Q = obj.pointClosestTo([AD1, AD2, AD3]).elements;\r\n      var newD = [Q[0] + (Q[0] - AD1) - newA[0], Q[1] + (Q[1] - AD2) - newA[1], Q[2] + (Q[2] - AD3) - newA[2]];\r\n      return Line.create(newA, newD);\r\n    } else if (obj.direction) {\r\n      // obj is a line - reflection obtained by rotating PI radians about obj\r\n      return this.rotate(Math.PI, obj);\r\n    } else {\r\n      // obj is a point - just reflect the line's anchor in it\r\n      var P = obj.elements || obj;\r\n      return Line.create(this.anchor.reflectionIn([P[0], P[1], (P[2] || 0)]), this.direction);\r\n    }\r\n  },\r\n\r\n  // Set the line's anchor point and direction.\r\n  setVectors: function(anchor, direction) {\r\n    // Need to do this so that line's properties are not\r\n    // references to the arguments passed in\r\n    anchor = Vector.create(anchor);\r\n    direction = Vector.create(direction);\r\n    if (anchor.elements.length === 2) {anchor.elements.push(0); }\r\n    if (direction.elements.length === 2) { direction.elements.push(0); }\r\n    if (anchor.elements.length > 3 || direction.elements.length > 3) { return null; }\r\n    var mod = direction.modulus();\r\n    if (mod === 0) { return null; }\r\n    this.anchor = anchor;\r\n    this.direction = Vector.create([\r\n      direction.elements[0] / mod,\r\n      direction.elements[1] / mod,\r\n      direction.elements[2] / mod\r\n    ]);\r\n    return this;\r\n  }\r\n};\r\n\r\n  \r\n// Constructor function\r\nLine.create = function(anchor, direction) {\r\n  var L = new Line();\r\n  return L.setVectors(anchor, direction);\r\n};\r\n\r\n// Axes\r\nLine.X = Line.create(Vector.Zero(3), Vector.i);\r\nLine.Y = Line.create(Vector.Zero(3), Vector.j);\r\nLine.Z = Line.create(Vector.Zero(3), Vector.k);\r\n\r\n\r\n\r\nfunction Plane() {}\r\nPlane.prototype = {\r\n\r\n  // Returns true iff the plane occupies the same space as the argument\r\n  eql: function(plane) {\r\n    return (this.contains(plane.anchor) && this.isParallelTo(plane));\r\n  },\r\n\r\n  // Returns a copy of the plane\r\n  dup: function() {\r\n    return Plane.create(this.anchor, this.normal);\r\n  },\r\n\r\n  // Returns the result of translating the plane by the given vector\r\n  translate: function(vector) {\r\n    var V = vector.elements || vector;\r\n    return Plane.create([\r\n      this.anchor.elements[0] + V[0],\r\n      this.anchor.elements[1] + V[1],\r\n      this.anchor.elements[2] + (V[2] || 0)\r\n    ], this.normal);\r\n  },\r\n\r\n  // Returns true iff the plane is parallel to the argument. Will return true\r\n  // if the planes are equal, or if you give a line and it lies in the plane.\r\n  isParallelTo: function(obj) {\r\n    var theta;\r\n    if (obj.normal) {\r\n      // obj is a plane\r\n      theta = this.normal.angleFrom(obj.normal);\r\n      return (Math.abs(theta) <= Sylvester.precision || Math.abs(Math.PI - theta) <= Sylvester.precision);\r\n    } else if (obj.direction) {\r\n      // obj is a line\r\n      return this.normal.isPerpendicularTo(obj.direction);\r\n    }\r\n    return null;\r\n  },\r\n  \r\n  // Returns true iff the receiver is perpendicular to the argument\r\n  isPerpendicularTo: function(plane) {\r\n    var theta = this.normal.angleFrom(plane.normal);\r\n    return (Math.abs(Math.PI/2 - theta) <= Sylvester.precision);\r\n  },\r\n\r\n  // Returns the plane's distance from the given object (point, line or plane)\r\n  distanceFrom: function(obj) {\r\n    if (this.intersects(obj) || this.contains(obj)) { return 0; }\r\n    if (obj.anchor) {\r\n      // obj is a plane or line\r\n      var A = this.anchor.elements, B = obj.anchor.elements, N = this.normal.elements;\r\n      return Math.abs((A[0] - B[0]) * N[0] + (A[1] - B[1]) * N[1] + (A[2] - B[2]) * N[2]);\r\n    } else {\r\n      // obj is a point\r\n      var P = obj.elements || obj;\r\n      return Math.abs((A[0] - P[0]) * N[0] + (A[1] - P[1]) * N[1] + (A[2] - (P[2] || 0)) * N[2]);\r\n    }\r\n  },\r\n\r\n  // Returns true iff the plane contains the given point or line\r\n  contains: function(obj) {\r\n    if (obj.normal) { return null; }\r\n    if (obj.direction) {\r\n      return (this.contains(obj.anchor) && this.contains(obj.anchor.add(obj.direction)));\r\n    } else {\r\n      var P = obj.elements || obj;\r\n      var A = this.anchor.elements, N = this.normal.elements;\r\n      var diff = Math.abs(N[0]*(A[0] - P[0]) + N[1]*(A[1] - P[1]) + N[2]*(A[2] - (P[2] || 0)));\r\n      return (diff <= Sylvester.precision);\r\n    }\r\n  },\r\n\r\n  // Returns true iff the plane has a unique point/line of intersection with the argument\r\n  intersects: function(obj) {\r\n    if (typeof(obj.direction) == 'undefined' && typeof(obj.normal) == 'undefined') { return null; }\r\n    return !this.isParallelTo(obj);\r\n  },\r\n\r\n  // Returns the unique intersection with the argument, if one exists. The result\r\n  // will be a vector if a line is supplied, and a line if a plane is supplied.\r\n  intersectionWith: function(obj) {\r\n    if (!this.intersects(obj)) { return null; }\r\n    if (obj.direction) {\r\n      // obj is a line\r\n      var A = obj.anchor.elements, D = obj.direction.elements,\r\n          P = this.anchor.elements, N = this.normal.elements;\r\n      var multiplier = (N[0]*(P[0]-A[0]) + N[1]*(P[1]-A[1]) + N[2]*(P[2]-A[2])) / (N[0]*D[0] + N[1]*D[1] + N[2]*D[2]);\r\n      return Vector.create([A[0] + D[0]*multiplier, A[1] + D[1]*multiplier, A[2] + D[2]*multiplier]);\r\n    } else if (obj.normal) {\r\n      // obj is a plane\r\n      var direction = this.normal.cross(obj.normal).toUnitVector();\r\n      // To find an anchor point, we find one co-ordinate that has a value\r\n      // of zero somewhere on the intersection, and remember which one we picked\r\n      var O = obj.normal.elements, B = obj.anchor.elements;\r\n      var solver = Matrix.Zero(2,2), i = 0;\r\n      while (solver.isSingular()) {\r\n        i++;\r\n        solver = Matrix.create([\r\n          [ N[i%3], N[(i+1)%3] ],\r\n          [ O[i%3], O[(i+1)%3]  ]\r\n        ]);\r\n      }\r\n      // Then we solve the simultaneous equations in the remaining dimensions\r\n      var inverse = solver.inverse().elements;\r\n      var x = N[0]*A[0] + N[1]*A[1] + N[2]*A[2];\r\n      var y = O[0]*B[0] + O[1]*B[1] + O[2]*B[2];\r\n      var intersection = [\r\n        inverse[0][0] * x + inverse[0][1] * y,\r\n        inverse[1][0] * x + inverse[1][1] * y\r\n      ];\r\n      var anchor = [];\r\n      for (var j = 1; j <= 3; j++) {\r\n        // This formula picks the right element from intersection by\r\n        // cycling depending on which element we set to zero above\r\n        anchor.push((i === j) ? 0 : intersection[(j + (5 - i)%3)%3]);\r\n      }\r\n      return Line.create(anchor, direction);\r\n    }\r\n  },\r\n\r\n  // Returns the point in the plane closest to the given point\r\n  pointClosestTo: function(point) {\r\n    var P = point.elements || point;\r\n    var A = this.anchor.elements, N = this.normal.elements;\r\n    var dot = (A[0] - P[0]) * N[0] + (A[1] - P[1]) * N[1] + (A[2] - (P[2] || 0)) * N[2];\r\n    return Vector.create([P[0] + N[0] * dot, P[1] + N[1] * dot, (P[2] || 0) + N[2] * dot]);\r\n  },\r\n\r\n  // Returns a copy of the plane, rotated by t radians about the given line\r\n  // See notes on Line#rotate.\r\n  rotate: function(t, line) {\r\n    var R = Matrix.Rotation(t, line.direction).elements;\r\n    var C = line.pointClosestTo(this.anchor).elements;\r\n    var A = this.anchor.elements, N = this.normal.elements;\r\n    var C1 = C[0], C2 = C[1], C3 = C[2], A1 = A[0], A2 = A[1], A3 = A[2];\r\n    var x = A1 - C1, y = A2 - C2, z = A3 - C3;\r\n    return Plane.create([\r\n      C1 + R[0][0] * x + R[0][1] * y + R[0][2] * z,\r\n      C2 + R[1][0] * x + R[1][1] * y + R[1][2] * z,\r\n      C3 + R[2][0] * x + R[2][1] * y + R[2][2] * z\r\n    ], [\r\n      R[0][0] * N[0] + R[0][1] * N[1] + R[0][2] * N[2],\r\n      R[1][0] * N[0] + R[1][1] * N[1] + R[1][2] * N[2],\r\n      R[2][0] * N[0] + R[2][1] * N[1] + R[2][2] * N[2]\r\n    ]);\r\n  },\r\n\r\n  // Returns the reflection of the plane in the given point, line or plane.\r\n  reflectionIn: function(obj) {\r\n    if (obj.normal) {\r\n      // obj is a plane\r\n      var A = this.anchor.elements, N = this.normal.elements;\r\n      var A1 = A[0], A2 = A[1], A3 = A[2], N1 = N[0], N2 = N[1], N3 = N[2];\r\n      var newA = this.anchor.reflectionIn(obj).elements;\r\n      // Add the plane's normal to its anchor, then mirror that in the other plane\r\n      var AN1 = A1 + N1, AN2 = A2 + N2, AN3 = A3 + N3;\r\n      var Q = obj.pointClosestTo([AN1, AN2, AN3]).elements;\r\n      var newN = [Q[0] + (Q[0] - AN1) - newA[0], Q[1] + (Q[1] - AN2) - newA[1], Q[2] + (Q[2] - AN3) - newA[2]];\r\n      return Plane.create(newA, newN);\r\n    } else if (obj.direction) {\r\n      // obj is a line\r\n      return this.rotate(Math.PI, obj);\r\n    } else {\r\n      // obj is a point\r\n      var P = obj.elements || obj;\r\n      return Plane.create(this.anchor.reflectionIn([P[0], P[1], (P[2] || 0)]), this.normal);\r\n    }\r\n  },\r\n\r\n  // Sets the anchor point and normal to the plane. If three arguments are specified,\r\n  // the normal is calculated by assuming the three points should lie in the same plane.\r\n  // If only two are sepcified, the second is taken to be the normal. Normal vector is\r\n  // normalised before storage.\r\n  setVectors: function(anchor, v1, v2) {\r\n    anchor = Vector.create(anchor);\r\n    anchor = anchor.to3D(); if (anchor === null) { return null; }\r\n    v1 = Vector.create(v1);\r\n    v1 = v1.to3D(); if (v1 === null) { return null; }\r\n    if (typeof(v2) == 'undefined') {\r\n      v2 = null;\r\n    } else {\r\n      v2 = Vector.create(v2);\r\n      v2 = v2.to3D(); if (v2 === null) { return null; }\r\n    }\r\n    var A1 = anchor.elements[0], A2 = anchor.elements[1], A3 = anchor.elements[2];\r\n    var v11 = v1.elements[0], v12 = v1.elements[1], v13 = v1.elements[2];\r\n    var normal, mod;\r\n    if (v2 !== null) {\r\n      var v21 = v2.elements[0], v22 = v2.elements[1], v23 = v2.elements[2];\r\n      normal = Vector.create([\r\n        (v12 - A2) * (v23 - A3) - (v13 - A3) * (v22 - A2),\r\n        (v13 - A3) * (v21 - A1) - (v11 - A1) * (v23 - A3),\r\n        (v11 - A1) * (v22 - A2) - (v12 - A2) * (v21 - A1)\r\n      ]);\r\n      mod = normal.modulus();\r\n      if (mod === 0) { return null; }\r\n      normal = Vector.create([normal.elements[0] / mod, normal.elements[1] / mod, normal.elements[2] / mod]);\r\n    } else {\r\n      mod = Math.sqrt(v11*v11 + v12*v12 + v13*v13);\r\n      if (mod === 0) { return null; }\r\n      normal = Vector.create([v1.elements[0] / mod, v1.elements[1] / mod, v1.elements[2] / mod]);\r\n    }\r\n    this.anchor = anchor;\r\n    this.normal = normal;\r\n    return this;\r\n  }\r\n};\r\n\r\n// Constructor function\r\nPlane.create = function(anchor, v1, v2) {\r\n  var P = new Plane();\r\n  return P.setVectors(anchor, v1, v2);\r\n};\r\n\r\n// X-Y-Z planes\r\nPlane.XY = Plane.create(Vector.Zero(3), Vector.k);\r\nPlane.YZ = Plane.create(Vector.Zero(3), Vector.i);\r\nPlane.ZX = Plane.create(Vector.Zero(3), Vector.j);\r\nPlane.YX = Plane.XY; Plane.ZY = Plane.YZ; Plane.XZ = Plane.ZX;\r\n","import initMatrix from \"./initMatrix\";\r\nimport { Matrix } from \"./sylvester.src\";\r\n\r\nconst toRadians = (angle) => (angle * Math.PI) / 180;\r\n\r\nconst generateMatrixes = (dimensions, anglesArr, transposeRotation) => {\r\n  let cosinus1 = dimensions - 1;\r\n  let cosinus2 = dimensions - 2;\r\n  let sinus1 = dimensions - 1;\r\n  let sinus2 = dimensions - 2;\r\n  let variants = (dimensions * (dimensions - 1)) / 2;\r\n  const matrixes = [];\r\n  for (let i = 0; i < variants; i++) {\r\n    matrixes.push(\r\n      Matrix.create(\r\n        initMatrix(\r\n          dimensions,\r\n          cosinus1,\r\n          cosinus2,\r\n          sinus1,\r\n          sinus2,\r\n          toRadians(anglesArr[i])\r\n        )\r\n      )\r\n    );\r\n\r\n    if (cosinus2 === 0) {\r\n      cosinus1--;\r\n      cosinus2 = cosinus1;\r\n      sinus1--;\r\n      sinus2 = sinus1;\r\n    }\r\n\r\n    cosinus2--;\r\n    sinus2--;\r\n  }\r\n\r\n  let matrixMultiply = matrixes[0];\r\n\r\n  for (let i = 1; i < variants; i++) {\r\n    matrixMultiply = matrixMultiply.multiply(matrixes[i]);\r\n  }\r\n\r\n  if (transposeRotation) {\r\n    return matrixMultiply.transpose();\r\n  }\r\n\r\n  return matrixMultiply;\r\n};\r\n\r\nexport default generateMatrixes;\r\n","import { Matrix } from \"./sylvester.src\";\r\n\r\nconst generateFigure = (vertices, matrix, dimension) => {\r\n  const verticesOnSvg = vertices.map((vertex) => {\r\n    let perspective = 350;\r\n    let coordinates = matrix.multiply(Matrix.create(vertex));\r\n    let x = coordinates.e(1, 1);\r\n    let y = coordinates.e(2, 1);\r\n\r\n    for (let i = 2; i < dimension; i++) {\r\n      x = (perspective * x) / (coordinates.e(i + 1, 1) + perspective);\r\n      y = (perspective * y) / (coordinates.e(i + 1, 1) + perspective);\r\n\r\n      perspective += 200;\r\n    }\r\n\r\n    return { x, y };\r\n  });\r\n\r\n  const setCoordinatesToLines = Array.from(document.querySelectorAll(\".line\"));\r\n  const setCoordinatesToCircles = Array.from(\r\n    document.querySelectorAll(\".circle\")\r\n  );\r\n  setCoordinatesToLines.map((line) => {\r\n    const index1 = line.getAttribute(\"vertex1\");\r\n    const index2 = line.getAttribute(\"vertex2\");\r\n\r\n    line.setAttribute(\"x1\", 300 + verticesOnSvg[+index1]?.x);\r\n    line.setAttribute(\"x2\", 300 + verticesOnSvg[+index2]?.x);\r\n    line.setAttribute(\"y1\", 200 + verticesOnSvg[+index1]?.y);\r\n    line.setAttribute(\"y2\", 200 + verticesOnSvg[+index2]?.y);\r\n\r\n    return 0;\r\n  });\r\n\r\n  setCoordinatesToCircles.map((line, index) => {\r\n    line.setAttribute(\"cx\", 300 + verticesOnSvg[index]?.x);\r\n    line.setAttribute(\"cy\", 200 + verticesOnSvg[index]?.y);\r\n\r\n    return 0;\r\n  });\r\n};\r\n\r\nexport default generateFigure;\r\n","const cubeVertices = (dimensions, DimensionOfFigure, setVerticesArray) => {\r\n  const verticesAmount = 2 ** dimensions;\r\n\r\n  const verticesArray = [];\r\n\r\n  for (let i = 0; i < verticesAmount; i++) {\r\n    const vertex = [];\r\n\r\n    for (let j = 0; j < dimensions; j++) {\r\n      if (Math.trunc(i / 2 ** j) % 2 === 0 && j < DimensionOfFigure) {\r\n        vertex.push(60);\r\n      } else if (j < DimensionOfFigure) {\r\n        vertex.push(-65);\r\n      } else {\r\n        vertex.push(0);\r\n      }\r\n    }\r\n\r\n    verticesArray.push(vertex);\r\n  }\r\n\r\n  setVerticesArray(verticesArray);\r\n};\r\n\r\nexport default cubeVertices;\r\n","const octahedronVertices = (\r\n  dimensions,\r\n  DimensionOfFigure,\r\n  setVerticesArray\r\n) => {\r\n  const verticesAmount = 2 * DimensionOfFigure;\r\n\r\n  const verticesArray = [];\r\n\r\n  for (let i = 0; i < verticesAmount / 2; i++) {\r\n    const vertex = [];\r\n\r\n    let prevResult = verticesArray[verticesArray.length - 2];\r\n\r\n    if (i === 0) {\r\n      for (let j = 0; j < DimensionOfFigure; j++) {\r\n        if (j === 0) {\r\n          vertex.push(100);\r\n        } else {\r\n          vertex.push(0);\r\n        }\r\n      }\r\n    } else {\r\n      let prevNot0Index = prevResult.indexOf(100);\r\n\r\n      if (prevNot0Index === DimensionOfFigure - 1) {\r\n        prevNot0Index = -1;\r\n      }\r\n\r\n      for (let j = 0; j < DimensionOfFigure; j++) {\r\n        if (j === prevNot0Index + 1) {\r\n          vertex.push(100);\r\n        } else {\r\n          vertex.push(0);\r\n        }\r\n      }\r\n    }\r\n\r\n    verticesArray.push(vertex);\r\n    verticesArray.push(vertex.map((item) => (item ? item * -1 : 0)));\r\n  }\r\n\r\n  verticesArray.forEach((vertex, index) => {\r\n    while (vertex.length < dimensions) {\r\n      vertex.push(0);\r\n    }\r\n    verticesArray[index] = vertex;\r\n  });\r\n\r\n  setVerticesArray(verticesArray);\r\n};\r\n\r\nexport default octahedronVertices;\r\n","const symplexVertices = (dimensions, DimensionOfFigure, setVerticesArray) => {\r\n  let verticesArray = [];\r\n  let firstDot = [];\r\n\r\n  if (DimensionOfFigure > 2) {\r\n    for (let i = 0; i < DimensionOfFigure; i++) {\r\n      if (i === DimensionOfFigure - 1) {\r\n        firstDot.push(25);\r\n      } else {\r\n        firstDot.push(56);\r\n      }\r\n    }\r\n\r\n    verticesArray.push(firstDot);\r\n    firstDot = firstDot.map((number) => number * -1);\r\n\r\n    for (let i = 0; i < DimensionOfFigure - 1; i++) {\r\n      let copyFirstDot = [...firstDot];\r\n      if (DimensionOfFigure === 2) copyFirstDot = [...firstDot].reverse();\r\n      copyFirstDot[i] = copyFirstDot[i] * -1;\r\n      copyFirstDot = copyFirstDot.map((item) => (item === -25 ? 25 : item));\r\n      verticesArray.push(copyFirstDot);\r\n    }\r\n\r\n    const lastDot = [];\r\n\r\n    for (let i = 0; i < DimensionOfFigure; i++) {\r\n      if (i === DimensionOfFigure - 1) {\r\n        lastDot.push(-100);\r\n      } else {\r\n        lastDot.push(0);\r\n      }\r\n    }\r\n\r\n    verticesArray.push(lastDot);\r\n  } else {\r\n    verticesArray = [\r\n      [90, 90],\r\n      [60, -90],\r\n      [-90, 90],\r\n    ];\r\n  }\r\n\r\n  verticesArray.forEach((vertex, index) => {\r\n    while (vertex.length < dimensions) {\r\n      vertex.push(0);\r\n    }\r\n    verticesArray[index] = vertex;\r\n  });\r\n\r\n  setVerticesArray(verticesArray);\r\n};\r\n\r\nexport default symplexVertices;\r\n","const Cell24AnaologVertices = (\r\n  dimensions,\r\n  DimensionOfFigure,\r\n  setVerticesArray\r\n) => {\r\n  const verticesAmount = 2 ** DimensionOfFigure;\r\n\r\n  const verticesArray = [];\r\n\r\n  for (let i = 0; i < verticesAmount; i++) {\r\n    const vertex = [];\r\n\r\n    for (let j = 0; j < DimensionOfFigure; j++) {\r\n      if (Math.trunc(i / 2 ** j) % 2 === 0 && j < DimensionOfFigure) {\r\n        vertex.push(50);\r\n      } else if (j < DimensionOfFigure) {\r\n        vertex.push(-50);\r\n      } else {\r\n        vertex.push(0);\r\n      }\r\n    }\r\n\r\n    verticesArray.push(vertex);\r\n  }\r\n\r\n  const verticesAmount2 = 2 * DimensionOfFigure;\r\n  for (let i = 0; i < verticesAmount2 / 2; i++) {\r\n    const vertex = [];\r\n\r\n    let prevResult = verticesArray[verticesArray.length - 2];\r\n\r\n    if (i === 0) {\r\n      for (let j = 0; j < DimensionOfFigure; j++) {\r\n        if (j === 0) {\r\n          vertex.push(100);\r\n        } else {\r\n          vertex.push(0);\r\n        }\r\n      }\r\n    } else {\r\n      let prevNot0Index = prevResult.indexOf(100);\r\n\r\n      if (prevNot0Index === DimensionOfFigure - 1) {\r\n        prevNot0Index = -1;\r\n      }\r\n\r\n      for (let j = 0; j < DimensionOfFigure; j++) {\r\n        if (j === prevNot0Index + 1) {\r\n          vertex.push(100);\r\n        } else {\r\n          vertex.push(0);\r\n        }\r\n      }\r\n    }\r\n\r\n    verticesArray.push(vertex);\r\n    verticesArray.push(vertex.map((item) => (item ? item * -1 : 0)));\r\n  }\r\n\r\n  verticesArray.forEach((vertex, index) => {\r\n    while (vertex.length < dimensions) {\r\n      vertex.push(0);\r\n    }\r\n    verticesArray[index] = vertex;\r\n  });\r\n\r\n  setVerticesArray(verticesArray);\r\n};\r\n\r\nexport default Cell24AnaologVertices;\r\n","import cubeVertices from \"./cubeVertices\";\r\nimport octahedronVertices from \"./octahedronVertices\";\r\nimport symplexVertices from \"./symplexVertices\";\r\nimport Cell24AnaologVertices from \"./Cell24AnalogVertices\";\r\nimport Cell120AnalogVertices from \"./Cell120AnalogVertices\";\r\n\r\nexport let verticesArray = [];\r\n\r\nconst setVerticesArray = (result) => {\r\n  verticesArray = result;\r\n}\r\n\r\nconst vertices = (dimensions, DimensionOfFigure, figure) => {\r\n  if (figure === \"cube\") {\r\n    cubeVertices(dimensions, DimensionOfFigure, setVerticesArray);\r\n  }\r\n\r\n  if (figure === \"symplex\") {\r\n    symplexVertices(dimensions, DimensionOfFigure, setVerticesArray);\r\n  }\r\n\r\n  if (figure === \"octahedron\") {\r\n    octahedronVertices(dimensions, DimensionOfFigure, setVerticesArray);\r\n  }\r\n\r\n  if (figure === \"24-cell-analog\") {\r\n    Cell24AnaologVertices(dimensions, DimensionOfFigure, setVerticesArray);\r\n  }\r\n\r\n  if (figure === \"120-cell-analog\") {\r\n    Cell120AnalogVertices(dimensions, DimensionOfFigure, setVerticesArray);\r\n  }\r\n};\r\n\r\nexport default vertices;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport generateMatrixes from \"./generateMatrixes\";\r\nimport generateFigure from \"./generateFigure\";\r\nimport vertices, { verticesArray } from \"./vertices\";\r\nimport { useKeyboard } from \"./App\";\r\n\r\nconst CreateCheckboxes = ({\r\n  dimensions,\r\n  number,\r\n  DimensionOfFigure,\r\n  anglesArray,\r\n  setAnglesArray,\r\n  activeRotations,\r\n  setActiveRotations,\r\n  figure,\r\n  transposeRotation,\r\n}) => {\r\n  useEffect(() => {\r\n    const moveByKeyBoard = (e) => {\r\n      if (useKeyboard) {\r\n        let copyAnglesArray = [...anglesArray];\r\n\r\n        if (e.key === \"w\") {\r\n          activeRotations.forEach((index) => {\r\n            if (copyAnglesArray[index] <= 359) {\r\n              copyAnglesArray[index] += 1;\r\n            } else {\r\n              copyAnglesArray[index] = 0;\r\n            }\r\n          });\r\n        }\r\n\r\n        if (e.key === \"s\") {\r\n          activeRotations.forEach((index) => {\r\n            if (copyAnglesArray[index] >= -359) {\r\n              copyAnglesArray[index] -= 1;\r\n            } else {\r\n              copyAnglesArray[index] = 0;\r\n            }\r\n          });\r\n        }\r\n        setAnglesArray(copyAnglesArray);\r\n        const matrix = generateMatrixes(\r\n          number,\r\n          copyAnglesArray,\r\n          transposeRotation\r\n        );\r\n        generateFigure(verticesArray, matrix, number, figure);\r\n      }\r\n    };\r\n\r\n    document.body.addEventListener(\"keydown\", moveByKeyBoard);\r\n    return () => document.body.removeEventListener(\"keydown\", moveByKeyBoard);\r\n  }, [anglesArray]);\r\n\r\n  useEffect(() => {\r\n    const anglesArray = [];\r\n    for (let i = 0; i < dimensions; i++) {\r\n      anglesArray.push(0);\r\n    }\r\n    setAnglesArray(anglesArray);\r\n  }, [dimensions]);\r\n\r\n  useEffect(() => {\r\n    let copyAnglesArray = [...anglesArray];\r\n    if (!useKeyboard) {\r\n      if (copyAnglesArray.length < dimensions) {\r\n        copyAnglesArray = [];\r\n        for (let i = 0; i < dimensions; i++) {\r\n          anglesArray.push(0);\r\n        }\r\n      }\r\n    }\r\n\r\n    const interval = setInterval(() => {\r\n      if (!useKeyboard) {\r\n        activeRotations.forEach((index) => {\r\n          copyAnglesArray[index]++;\r\n        });\r\n\r\n        setAnglesArray(copyAnglesArray);\r\n        const matrix = generateMatrixes(\r\n          number,\r\n          copyAnglesArray,\r\n          transposeRotation\r\n        );\r\n        generateFigure(verticesArray, matrix, number, figure);\r\n      }\r\n    }, 50);\r\n\r\n    if (!activeRotations.length) clearInterval(interval);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [dimensions, activeRotations, useKeyboard]);\r\n\r\n  useEffect(() => {\r\n    vertices(number, DimensionOfFigure, figure);\r\n  }, [figure, number, DimensionOfFigure]);\r\n\r\n  const numbersOfCheckboxes = new Array(dimensions);\r\n  let subDimensionStart = 2;\r\n  let subDimensionEnd = 1;\r\n\r\n  let yRotationArray = [dimensions - 3];\r\n  let addToYRotationInterval = 2;\r\n\r\n  for (let i = 1; i < number - 2; i++) {\r\n    yRotationArray.push(\r\n      yRotationArray[yRotationArray.length - 1] - addToYRotationInterval\r\n    );\r\n    addToYRotationInterval++;\r\n  }\r\n\r\n  for (let i = 0; i < dimensions; i++) {\r\n    if (subDimensionEnd === subDimensionStart) {\r\n      subDimensionStart++;\r\n      subDimensionEnd = 1;\r\n    }\r\n\r\n    numbersOfCheckboxes[i] = `${subDimensionStart}-${subDimensionEnd}`;\r\n    subDimensionEnd++;\r\n  }\r\n\r\n  numbersOfCheckboxes.reverse();\r\n\r\n  const changeActiveRotation = (index) => {\r\n    let copyActiveRotations = [...activeRotations];\r\n    if (copyActiveRotations.includes(index)) {\r\n      copyActiveRotations = copyActiveRotations.filter(\r\n        (item) => item !== index\r\n      );\r\n    } else {\r\n      copyActiveRotations.push(index);\r\n    }\r\n\r\n    setActiveRotations(copyActiveRotations);\r\n  };\r\n\r\n  const selectAll = () => {\r\n    let copyActiveRotations = [];\r\n\r\n    if (activeRotations.length < numbersOfCheckboxes.length) {\r\n      copyActiveRotations = numbersOfCheckboxes.map((item, index) => index);\r\n    }\r\n\r\n    setActiveRotations(copyActiveRotations);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label className=\"using__mouse\">\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"checkbox\"\r\n          onChange={selectAll}\r\n          checked={activeRotations.length === numbersOfCheckboxes.length}\r\n        />\r\n        <p>Select All</p>\r\n      </label>\r\n      <section className=\"checkboxes\">\r\n        <div className=\"angles\">angles:</div>\r\n        {numbersOfCheckboxes.map((field, index) => {\r\n          return (\r\n              <label key={index} className=\"labels\">\r\n                <input\r\n                  key={index + \"c\"}\r\n                  type=\"checkbox\"\r\n                  name=\"checkbox\"\r\n                  onChange={() => changeActiveRotation(index)}\r\n                  checked={activeRotations.includes(index)}\r\n                  className=\"checkbox\"\r\n                />\r\n                {field}\r\n              <input type=\"number\" value={anglesArray[index] || 0} onChange={(e) => {\r\n                const copyAnglesArray = [...anglesArray];\r\n                copyAnglesArray[index] = +e.target.value;\r\n                setAnglesArray(copyAnglesArray);\r\n              }}/>\r\n\r\n              </label>\r\n          );\r\n        })}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateCheckboxes;\r\n","import React from \"react\";\r\n\r\nconst Cube = ({ dimension }) => {\r\n  const amountOfLines = 2 ** (dimension - 1) * dimension;\r\n  let ids = 0;\r\n  const lines = [];\r\n\r\n  for (let i = 0; i < amountOfLines; i++) {\r\n    lines.push(ids);\r\n    ids += 1;\r\n  }\r\n\r\n  let cubesRepeats = 4;\r\n  let cube = [0, 1, 2, 3];\r\n\r\n  return (\r\n    <svg\r\n      width=\"600\"\r\n      height=\"400\"\r\n      className=\"svg\"\r\n    >\r\n      {lines.map((id, index) => {\r\n        let vertex1 = 0;\r\n        let vertex2 = 0;\r\n\r\n        if (index % 4 === 0 && index < 2 ** dimension) {\r\n          vertex1 = 0 + Math.trunc(index / 4) * 4;\r\n          vertex2 = 1 + Math.trunc(index / 4) * 4;\r\n        }\r\n\r\n        if (index % 4 === 1 && index < 2 ** dimension) {\r\n          vertex1 = 1 + Math.trunc(index / 4) * 4;\r\n          vertex2 = 3 + Math.trunc(index / 4) * 4;\r\n        }\r\n\r\n        if (index % 4 === 2 && index < 2 ** dimension) {\r\n          vertex1 = 3 + Math.trunc(index / 4) * 4;\r\n          vertex2 = 2 + Math.trunc(index / 4) * 4;\r\n        }\r\n\r\n        if (index % 4 === 3 && index < 2 ** dimension) {\r\n          vertex1 = 0 + Math.trunc(index / 4) * 4;\r\n          vertex2 = 2 + Math.trunc(index / 4) * 4;\r\n        }\r\n\r\n        if (index >= 2 ** dimension) {\r\n          for (let i = 0; i < cube.length; i++) {\r\n            if (index % cubesRepeats === i) {\r\n              vertex1 = cube[i];\r\n              vertex2 = cube[i] + cubesRepeats;\r\n\r\n              if (index % cubesRepeats === cubesRepeats - 1) {\r\n                const doubleRepeats = cubesRepeats * 2;\r\n                cube = cube.map((dot) => dot + doubleRepeats);\r\n              }\r\n            }\r\n          }\r\n\r\n          if (cube[0] > 2 ** dimension - 1) {\r\n            cubesRepeats *= 2;\r\n            const twoLength = cube.length * 2;\r\n\r\n            for (let i = 0; i < twoLength; i++) {\r\n              cube[i] = i;\r\n            }\r\n          }\r\n        }\r\n\r\n        return (\r\n          <line\r\n            key={id}\r\n            x1=\"200\"\r\n            y1=\"200\"\r\n            x2=\"400\"\r\n            y2=\"200\"\r\n            stroke=\"white\"\r\n            id={`line${id}`}\r\n            className=\"line\"\r\n            vertex1={vertex1}\r\n            vertex2={vertex2}\r\n          />\r\n        );\r\n      })}\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Cube;\r\n","import React from \"react\";\r\n\r\nconst Symplex = ({ dimensionOfFigure }) => {\r\n  const amountOfLines = ((+dimensionOfFigure + 1) * dimensionOfFigure) / 2;\r\n  let ids = 0;\r\n  const lines = [];\r\n\r\n  for (let i = 0; i < amountOfLines; i++) {\r\n    lines.push(ids);\r\n    ids += 1;\r\n  }\r\n\r\n  let minsAmount = dimensionOfFigure;\r\n  let xDots = [];\r\n  let yDots = [];\r\n  let currentMinX = 0;\r\n  let currentMinY = 1;\r\n  let currentY = 0;\r\n\r\n  for (let i = 0; i < lines.length; i++) {\r\n    if (xDots.filter((value) => value === currentMinX).length < minsAmount) {\r\n      xDots.push(currentMinX);\r\n    } else {\r\n      currentMinX += 1;\r\n      minsAmount -= 1;\r\n      xDots.push(currentMinX);\r\n    }\r\n\r\n    if (currentY > dimensionOfFigure - 1) {\r\n      currentMinY += 1;\r\n      currentY = currentMinY;\r\n      yDots.push(currentY);\r\n    } else {\r\n      currentY += 1;\r\n      yDots.push(currentY);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <svg width=\"600\" height=\"400\" className=\"svg\">\r\n      {lines.map((id, index) => {\r\n        let vertex1 = 0;\r\n        let vertex2 = 0;\r\n\r\n        vertex1 = xDots[index];\r\n        vertex2 = yDots[index];\r\n\r\n        return (\r\n          <line\r\n            key={id}\r\n            x1=\"200\"\r\n            y1=\"200\"\r\n            x2=\"400\"\r\n            y2=\"200\"\r\n            stroke=\"white\"\r\n            id={`line${id}`}\r\n            className=\"line\"\r\n            vertex1={vertex1}\r\n            vertex2={vertex2}\r\n          />\r\n        );\r\n      })}\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Symplex;\r\n","import React from \"react\";\r\n\r\nconst Octahedron = ({ dimensionOfFigure }) => {\r\n  const amountOfLines = dimensionOfFigure * (dimensionOfFigure - 1) * 2;\r\n  let ids = 0;\r\n  const lines = [];\r\n\r\n  for (let i = 0; i < amountOfLines; i++) {\r\n    lines.push(ids);\r\n    ids += 1;\r\n  }\r\n\r\n  let startXDotRepeatAmount = (dimensionOfFigure - 1) * 2;\r\n  let startXDotRepeatAmount2 = (dimensionOfFigure - 1) * 2;\r\n\r\n  let repeat = 0;\r\n  let startX = 0;\r\n  let startY = 2;\r\n  let startY2 = 2;\r\n  let xDots = [];\r\n  let yDots = [];\r\n\r\n  for (let i = 0; i < lines.length; i++) {\r\n    if (startXDotRepeatAmount2 > 1) {\r\n      startXDotRepeatAmount2 -= 1;\r\n      xDots.push(startX);\r\n      yDots.push(startY2);\r\n      startY2 += 1;\r\n    } else if (startXDotRepeatAmount2 === 1 && repeat === 0) {\r\n      repeat = 1;\r\n      startXDotRepeatAmount2 = startXDotRepeatAmount;\r\n      xDots.push(startX);\r\n      yDots.push(startY2);\r\n      startY2 = startY;\r\n      startX += 1;\r\n    } else if (startXDotRepeatAmount2 === 1 && repeat === 1) {\r\n      repeat = 0;\r\n      startXDotRepeatAmount -= 2;\r\n      startXDotRepeatAmount2 = startXDotRepeatAmount;\r\n      xDots.push(startX);\r\n      yDots.push(startY2);\r\n      startY += 2;\r\n      startY2 = startY;\r\n      startX += 1;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <svg width=\"600\" height=\"400\" className=\"svg\">\r\n      {lines.map((id, index) => {\r\n        let vertex1 = 0;\r\n        let vertex2 = 0;\r\n\r\n        vertex1 = xDots[index];\r\n        vertex2 = yDots[index];\r\n\r\n        return (\r\n          <line\r\n            key={id}\r\n            x1=\"200\"\r\n            y1=\"200\"\r\n            x2=\"400\"\r\n            y2=\"200\"\r\n            stroke=\"white\"\r\n            id={`line${id}`}\r\n            className=\"line\"\r\n            vertex1={vertex1}\r\n            vertex2={vertex2}\r\n          />\r\n        );\r\n      })}\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Octahedron;\r\n","import React from \"react\";\r\n\r\nconst Cell24Analog = ({ verticesArray, dimensionOfFigure }) => {\r\n  let check1 = (array1, array2) => {\r\n    for (let i = 0; i < dimensionOfFigure; i++) {\r\n      if (\r\n        array1[i] - array2[i] !== 50 &&\r\n        array1[i] - array2[i] !== -50 &&\r\n        array2[i] - array1[i] !== 50 &&\r\n        array2[i] - array1[i] !== -50\r\n      ) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  let check2 = (array1, array2) => {\r\n    let degree100 = false;\r\n    let equal = 0;\r\n    for (let i = 0; i < dimensionOfFigure; i++) {\r\n      if (\r\n        array1[i] - array2[i] === 100 ||\r\n        array1[i] - array2[i] === -100 ||\r\n        array2[i] - array1[i] === 100 ||\r\n        array2[i] - array1[i] === -100\r\n      ) {\r\n        degree100 = true;\r\n      }\r\n\r\n      if (array1[i] === array2[i]) {\r\n        equal += 1;\r\n      }\r\n    }\r\n\r\n    return !!(degree100 && equal === array1.length - 1);\r\n  };\r\n\r\n  const linesSet = new Set();\r\n  for (let i = 0; i < verticesArray.length; i++) {\r\n    for (let j = 0; j < verticesArray.length; j++) {\r\n      if (\r\n        check1(verticesArray[i], verticesArray[j]) ||\r\n        check2(verticesArray[i], verticesArray[j])\r\n      ) {\r\n        linesSet.add([i, j].sort((a, b) => a - b).join(\",\"));\r\n      }\r\n    }\r\n  }\r\n\r\n  const linesArray = Array.from(linesSet).map((item) => item.split(\",\"));\r\n\r\n  const amountOfLines = linesArray.length;\r\n  let ids = 0;\r\n  const lines = [];\r\n\r\n  for (let i = 0; i < amountOfLines; i++) {\r\n    lines.push(ids);\r\n    ids += 1;\r\n  }\r\n\r\n  return (\r\n    <svg width=\"600\" height=\"400\" className=\"svg\">\r\n      {lines.map((id, index) => {\r\n        let vertex1 = 0;\r\n        let vertex2 = 0;\r\n\r\n        vertex1 = linesArray[index][0];\r\n        vertex2 = linesArray[index][1];\r\n\r\n        return (\r\n          <line\r\n            key={id}\r\n            x1=\"200\"\r\n            y1=\"200\"\r\n            x2=\"400\"\r\n            y2=\"200\"\r\n            stroke=\"white\"\r\n            id={`line${id}`}\r\n            className=\"line\"\r\n            vertex1={vertex1}\r\n            vertex2={vertex2}\r\n          />\r\n        );\r\n      })}\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Cell24Analog;\r\n","import React from \"react\";\r\n\r\nconst Cell120Analog = ({ verticesArray, dimensionOfFigure }) => {\r\n  let linesArray = [];\r\n  const edgeLength = +dimensionOfFigure === 3 ? 100 : Math.round((2 / 1.618 ** 2) * 50);\r\n  \r\n  if (dimensionOfFigure > 2) {\r\n    for (let i = 0; i < verticesArray.length; i++) {\r\n      for (let j = i; j < verticesArray.length; j++) {\r\n        if (i !== j) {\r\n          let length = 0;\r\n          for (let k = 0; k < dimensionOfFigure; k++) {\r\n            length += (verticesArray[j][k] - verticesArray[i][k]) ** 2;\r\n          }\r\n          length = Math.round(length ** (1 / 2));\r\n  \r\n          if (length === edgeLength || length === edgeLength - 1 || length === edgeLength + 1) {\r\n            linesArray.push([i, j]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  } else if (dimensionOfFigure === 2) {\r\n    linesArray = [[0, 1], [1, 2], [2, 3], [3, 4], [4, 0]]\r\n  };\r\n  \r\n  const amountOfLines = linesArray.length;\r\n  let ids = 0;\r\n  const lines = [];\r\n\r\n  for (let i = 0; i < amountOfLines; i++) {\r\n    lines.push(ids);\r\n    ids += 1;\r\n  }\r\n\r\n  return (\r\n    <svg width=\"600\" height=\"400\" className=\"svg\">\r\n      {lines.map((id, index) => {\r\n        let vertex1 = 0;\r\n        let vertex2 = 0;\r\n\r\n        vertex1 = linesArray[index][0];\r\n        vertex2 = linesArray[index][1];\r\n          return (\r\n            <line\r\n              key={id}\r\n              x1=\"200\"\r\n              y1=\"200\"\r\n              x2=\"400\"\r\n              y2=\"200\"\r\n              stroke=\"white\"\r\n              id={`line${id}`}\r\n              className=\"line\"\r\n              vertex1={vertex1}\r\n              vertex2={vertex2}\r\n            />\r\n          );\r\n      })}\r\n\r\n      {/* {verticesArray.map((item, index) => (\r\n        <circle\r\n          onClick={() => {\r\n            console.log(verticesArray[index], index);\r\n          }}\r\n          key={index}\r\n          cx=\"300\"\r\n          cy=\"200\"\r\n          r=\"2\"\r\n          fill=\"white\"\r\n          id={`circle${index}`}\r\n          className=\"circle\"\r\n          onContextMenu={(e) => {\r\n            e.preventDefault();\r\n            e.target.style.display = \"none\";\r\n          }}\r\n        />\r\n      ))} */}\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Cell120Analog;\r\n","import React, { useEffect } from \"react\";\r\nimport generateFigure from \"./generateFigure\";\r\nimport { verticesArray } from \"./vertices\";\r\nimport generateMatrixes from \"./generateMatrixes\";\r\nimport Cube from \"./figures/Cube\";\r\nimport Symplex from \"./figures/Symplex\";\r\nimport Octahedron from \"./figures/Octahedron\";\r\nimport Cell24Analog from \"./figures/Cell24Analog\";\r\nimport Cell120Analog from \"./figures/Cell120Analog\";\r\nexport let canRotate = false;\r\nexport let mouseX = 0;\r\nexport let mouseY = 0;\r\nexport let prevX = 0;\r\nexport let prevY = 0;\r\n\r\n\r\nconst Svg = ({ dimension, anglesArray, figure, dimensionOfFigure, transposeRotation }) => {\r\n  useEffect(() => {\r\n    if (dimension > 1) {\r\n      const matrix = generateMatrixes(dimension, anglesArray, transposeRotation);\r\n      generateFigure(verticesArray, matrix, dimension);\r\n    }\r\n  });\r\n\r\n  if (+dimension === 0) {\r\n    return (\r\n      <svg width=\"600\" height=\"400\" className=\"svg\">\r\n        <circle cx=\"300\" cy=\"200\" r=\"3\" fill=\"white\" />\r\n      </svg>\r\n    );\r\n  }\r\n\r\n  if (+dimension === 1) {\r\n    return (\r\n      <svg width=\"600\" height=\"400\" className=\"svg\">\r\n        <line\r\n          id=\"line1\"\r\n          x1=\"200\"\r\n          y1=\"200\"\r\n          x2=\"400\"\r\n          y2=\"200\"\r\n          stroke=\"white\"\r\n          className=\"line\"\r\n        />\r\n      </svg>\r\n    );\r\n  }\r\n\r\n  if (figure === \"cube\") {\r\n    return <Cube dimension={dimension} />;\r\n  }\r\n\r\n  if (figure === \"symplex\") {\r\n    return <Symplex dimensionOfFigure={dimensionOfFigure} />\r\n  }\r\n\r\n  if (figure === \"octahedron\") {\r\n    return <Octahedron dimensionOfFigure={dimensionOfFigure} />;\r\n  }\r\n\r\n  if (figure === \"24-cell-analog\") {\r\n    return <Cell24Analog verticesArray={verticesArray} dimensionOfFigure={dimensionOfFigure} />;\r\n  }\r\n\r\n  if (figure === \"120-cell-analog\") {\r\n    return <Cell120Analog verticesArray={verticesArray} dimensionOfFigure={dimensionOfFigure} />;\r\n  }\r\n};\r\n\r\nexport default Svg;\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport CreateCheckboxes from \"./CreateCheckboxes\";\r\nimport Svg from \"./Svg\";\r\nimport generateFigure from \"./generateFigure\";\r\nimport { verticesArray } from \"./vertices\";\r\nimport generateMatrixes from \"./generateMatrixes\";\r\nimport vertices from \"./vertices\";\r\nexport let useKeyboard = false;\r\n\r\nfunction App() {\r\n  const [numberOfDimensions, setNumberOfDimensions] = useState(2);\r\n  const [amount, setAmount] = useState(1);\r\n  const [dimensionOfFigure, setDimensionOfFigure] = useState(2);\r\n  const [anglesArray, setAnglesArray] = useState([0]);\r\n  const [activeRotations, setActiveRotations] = useState([]);\r\n  const [figure, setFigure] = useState(\"cube\");\r\n  const [transposeRotation, setTransposeRotation] = useState(false);\r\n\r\n  let number = numberOfDimensions;\r\n  const changeNumber = (e) => {\r\n    number = e.target.value;\r\n  };\r\n  const optionList = [];\r\n\r\n  for (let i = 0; i < numberOfDimensions; i++) {\r\n    optionList.push(i + 1);\r\n  }\r\n\r\n  const generateDimensions = () => {\r\n    if (isNaN(number) || +number < 0 || Math.trunc(+number) - +number !== 0) {\r\n      alert(\"input positive integer number\");\r\n    } else {\r\n      const checkboxes = Array.from(document.querySelectorAll(\".checkbox\"));\r\n\r\n      for (let i in checkboxes) {\r\n        checkboxes[i].checked = false;\r\n      }\r\n\r\n      setActiveRotations([]);\r\n      setNumberOfDimensions(number);\r\n      setAmount((number * (number - 1)) / 2);\r\n      setDimensionOfFigure(number);\r\n      document.querySelector(\".select\").value = `select dimension of ${figure}`;\r\n    }\r\n  };\r\n\r\n  const resetAngles = () => {\r\n    const copyAnglesArray = [...anglesArray].map((angle) => 0);\r\n\r\n    setAnglesArray(copyAnglesArray);\r\n    setActiveRotations([]);\r\n    const matrix = generateMatrixes(\r\n      numberOfDimensions,\r\n      copyAnglesArray,\r\n      transposeRotation\r\n    );\r\n    generateFigure(verticesArray, matrix, numberOfDimensions, figure);\r\n  };\r\n\r\n  const dimensionOfCube = (e) => {\r\n    if (!isNaN(e.target.value)) {\r\n      vertices(numberOfDimensions, +e.target.value, figure);\r\n      setDimensionOfFigure(+e.target.value);\r\n    }\r\n  };\r\n\r\n  const useKeyboardChange = () => {\r\n    if (useKeyboard) {\r\n      useKeyboard = false;\r\n    } else {\r\n      useKeyboard = true;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"using__mouse-wrap\">\r\n        <div className=\"wrapper\">\r\n          <label className=\"using__mouse\">\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"checkbox\"\r\n              onChange={useKeyboardChange}\r\n            />\r\n            <p>rotate by checking checkboxes and using w/s keys</p>\r\n          </label>\r\n\r\n          <label className=\"using__mouse\">\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"checkbox 2\"\r\n              onChange={() => {\r\n                setActiveRotations([]);\r\n                setTransposeRotation(!transposeRotation);\r\n              }}\r\n              checked={transposeRotation}\r\n            />\r\n            <p>transpose rotation</p>\r\n          </label>\r\n        </div>\r\n\r\n        <label className=\"using__mouse\">\r\n          {numberOfDimensions}D\r\n          <select\r\n            onChange={(e) => {\r\n              vertices(numberOfDimensions, dimensionOfFigure, e.target.value);\r\n              setFigure(e.target.value);\r\n            }}\r\n            className=\"select\"\r\n            value={figure}\r\n          >\r\n            <option>symplex</option>\r\n            <option>octahedron</option>\r\n            <option>cube</option>\r\n            <option>24-cell-analog</option>\r\n            <option>120-cell-analog</option>\r\n\r\n          </select>\r\n        </label>\r\n      </div>\r\n      <div className=\"App\">\r\n        <button type=\"button\" className=\"reset\" onClick={resetAngles}>\r\n          Reset angles\r\n        </button>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"input number of dimensions\"\r\n          className=\"input_dimension\"\r\n          onChange={changeNumber}\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          className=\"generate-button\"\r\n          onClick={generateDimensions}\r\n        >\r\n          Generate dimensions\r\n        </button>\r\n\r\n        <select onChange={dimensionOfCube} className=\"select\">\r\n          <option>select dimension of {figure}</option>\r\n          {optionList.map((number) => {\r\n            return (\r\n              <option key={number} className=\"option\">\r\n                {number}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n\r\n        <CreateCheckboxes\r\n          dimensions={amount}\r\n          number={numberOfDimensions}\r\n          DimensionOfFigure={dimensionOfFigure}\r\n          anglesArray={anglesArray}\r\n          setAnglesArray={setAnglesArray}\r\n          activeRotations={activeRotations}\r\n          setActiveRotations={setActiveRotations}\r\n          figure={figure}\r\n          transposeRotation={transposeRotation}\r\n        />\r\n        <Svg\r\n          dimension={numberOfDimensions}\r\n          anglesArray={anglesArray}\r\n          figure={figure}\r\n          dimensionOfFigure={dimensionOfFigure}\r\n          transposeRotation={transposeRotation}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}